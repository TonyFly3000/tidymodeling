[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "tidymodeling",
    "section": "",
    "text": "hotel classification model\n\n\n\n\n\n\ntitanic classification model\n\n\n\n\n\n\nhouse price regression model\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "house price regression model/Level 2 Regression Tidy Modeling.html",
    "href": "house price regression model/Level 2 Regression Tidy Modeling.html",
    "title": "Level 0 Regression Tidy Modeling",
    "section": "",
    "text": "data download form kaggle\n\n\nCode\nlibrary(tidyverse)\ntrain = read_csv(\"data/train.csv\")\n\ntest=read_csv(\"data/test.csv\")\n\n\nData have 1460 record and 81 variable\n\n\nCode\nglimpse(train)\n\n\nRows: 1,460\nColumns: 81\n$ Id            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1…\n$ MSSubClass    &lt;dbl&gt; 60, 20, 60, 70, 60, 50, 20, 60, 50, 190, 20, 60, 20, 20,…\n$ MSZoning      &lt;chr&gt; \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RM\", \"R…\n$ LotFrontage   &lt;dbl&gt; 65, 80, 68, 60, 84, 85, 75, NA, 51, 50, 70, 85, NA, 91, …\n$ LotArea       &lt;dbl&gt; 8450, 9600, 11250, 9550, 14260, 14115, 10084, 10382, 612…\n$ Street        &lt;chr&gt; \"Pave\", \"Pave\", \"Pave\", \"Pave\", \"Pave\", \"Pave\", \"Pave\", …\n$ Alley         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ LotShape      &lt;chr&gt; \"Reg\", \"Reg\", \"IR1\", \"IR1\", \"IR1\", \"IR1\", \"Reg\", \"IR1\", …\n$ LandContour   &lt;chr&gt; \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", …\n$ Utilities     &lt;chr&gt; \"AllPub\", \"AllPub\", \"AllPub\", \"AllPub\", \"AllPub\", \"AllPu…\n$ LotConfig     &lt;chr&gt; \"Inside\", \"FR2\", \"Inside\", \"Corner\", \"FR2\", \"Inside\", \"I…\n$ LandSlope     &lt;chr&gt; \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", …\n$ Neighborhood  &lt;chr&gt; \"CollgCr\", \"Veenker\", \"CollgCr\", \"Crawfor\", \"NoRidge\", \"…\n$ Condition1    &lt;chr&gt; \"Norm\", \"Feedr\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\",…\n$ Condition2    &lt;chr&gt; \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", …\n$ BldgType      &lt;chr&gt; \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", …\n$ HouseStyle    &lt;chr&gt; \"2Story\", \"1Story\", \"2Story\", \"2Story\", \"2Story\", \"1.5Fi…\n$ OverallQual   &lt;dbl&gt; 7, 6, 7, 7, 8, 5, 8, 7, 7, 5, 5, 9, 5, 7, 6, 7, 6, 4, 5,…\n$ OverallCond   &lt;dbl&gt; 5, 8, 5, 5, 5, 5, 5, 6, 5, 6, 5, 5, 6, 5, 5, 8, 7, 5, 5,…\n$ YearBuilt     &lt;dbl&gt; 2003, 1976, 2001, 1915, 2000, 1993, 2004, 1973, 1931, 19…\n$ YearRemodAdd  &lt;dbl&gt; 2003, 1976, 2002, 1970, 2000, 1995, 2005, 1973, 1950, 19…\n$ RoofStyle     &lt;chr&gt; \"Gable\", \"Gable\", \"Gable\", \"Gable\", \"Gable\", \"Gable\", \"G…\n$ RoofMatl      &lt;chr&gt; \"CompShg\", \"CompShg\", \"CompShg\", \"CompShg\", \"CompShg\", \"…\n$ Exterior1st   &lt;chr&gt; \"VinylSd\", \"MetalSd\", \"VinylSd\", \"Wd Sdng\", \"VinylSd\", \"…\n$ Exterior2nd   &lt;chr&gt; \"VinylSd\", \"MetalSd\", \"VinylSd\", \"Wd Shng\", \"VinylSd\", \"…\n$ MasVnrType    &lt;chr&gt; \"BrkFace\", \"None\", \"BrkFace\", \"None\", \"BrkFace\", \"None\",…\n$ MasVnrArea    &lt;dbl&gt; 196, 0, 162, 0, 350, 0, 186, 240, 0, 0, 0, 286, 0, 306, …\n$ ExterQual     &lt;chr&gt; \"Gd\", \"TA\", \"Gd\", \"TA\", \"Gd\", \"TA\", \"Gd\", \"TA\", \"TA\", \"T…\n$ ExterCond     &lt;chr&gt; \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"T…\n$ Foundation    &lt;chr&gt; \"PConc\", \"CBlock\", \"PConc\", \"BrkTil\", \"PConc\", \"Wood\", \"…\n$ BsmtQual      &lt;chr&gt; \"Gd\", \"Gd\", \"Gd\", \"TA\", \"Gd\", \"Gd\", \"Ex\", \"Gd\", \"TA\", \"T…\n$ BsmtCond      &lt;chr&gt; \"TA\", \"TA\", \"TA\", \"Gd\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"T…\n$ BsmtExposure  &lt;chr&gt; \"No\", \"Gd\", \"Mn\", \"No\", \"Av\", \"No\", \"Av\", \"Mn\", \"No\", \"N…\n$ BsmtFinType1  &lt;chr&gt; \"GLQ\", \"ALQ\", \"GLQ\", \"ALQ\", \"GLQ\", \"GLQ\", \"GLQ\", \"ALQ\", …\n$ BsmtFinSF1    &lt;dbl&gt; 706, 978, 486, 216, 655, 732, 1369, 859, 0, 851, 906, 99…\n$ BsmtFinType2  &lt;chr&gt; \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"BLQ\", …\n$ BsmtFinSF2    &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ BsmtUnfSF     &lt;dbl&gt; 150, 284, 434, 540, 490, 64, 317, 216, 952, 140, 134, 17…\n$ TotalBsmtSF   &lt;dbl&gt; 856, 1262, 920, 756, 1145, 796, 1686, 1107, 952, 991, 10…\n$ Heating       &lt;chr&gt; \"GasA\", \"GasA\", \"GasA\", \"GasA\", \"GasA\", \"GasA\", \"GasA\", …\n$ HeatingQC     &lt;chr&gt; \"Ex\", \"Ex\", \"Ex\", \"Gd\", \"Ex\", \"Ex\", \"Ex\", \"Ex\", \"Gd\", \"E…\n$ CentralAir    &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ Electrical    &lt;chr&gt; \"SBrkr\", \"SBrkr\", \"SBrkr\", \"SBrkr\", \"SBrkr\", \"SBrkr\", \"S…\n$ `1stFlrSF`    &lt;dbl&gt; 856, 1262, 920, 961, 1145, 796, 1694, 1107, 1022, 1077, …\n$ `2ndFlrSF`    &lt;dbl&gt; 854, 0, 866, 756, 1053, 566, 0, 983, 752, 0, 0, 1142, 0,…\n$ LowQualFinSF  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ GrLivArea     &lt;dbl&gt; 1710, 1262, 1786, 1717, 2198, 1362, 1694, 2090, 1774, 10…\n$ BsmtFullBath  &lt;dbl&gt; 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,…\n$ BsmtHalfBath  &lt;dbl&gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ FullBath      &lt;dbl&gt; 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 3, 1, 2, 1, 1, 1, 2, 1,…\n$ HalfBath      &lt;dbl&gt; 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,…\n$ BedroomAbvGr  &lt;dbl&gt; 3, 3, 3, 3, 4, 1, 3, 3, 2, 2, 3, 4, 2, 3, 2, 2, 2, 2, 3,…\n$ KitchenAbvGr  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,…\n$ KitchenQual   &lt;chr&gt; \"Gd\", \"TA\", \"Gd\", \"Gd\", \"Gd\", \"TA\", \"Gd\", \"TA\", \"TA\", \"T…\n$ TotRmsAbvGrd  &lt;dbl&gt; 8, 6, 6, 7, 9, 5, 7, 7, 8, 5, 5, 11, 4, 7, 5, 5, 5, 6, 6…\n$ Functional    &lt;chr&gt; \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", …\n$ Fireplaces    &lt;dbl&gt; 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 2, 0, 1, 1, 0, 1, 0, 0,…\n$ FireplaceQu   &lt;chr&gt; NA, \"TA\", \"TA\", \"Gd\", \"TA\", NA, \"Gd\", \"TA\", \"TA\", \"TA\", …\n$ GarageType    &lt;chr&gt; \"Attchd\", \"Attchd\", \"Attchd\", \"Detchd\", \"Attchd\", \"Attch…\n$ GarageYrBlt   &lt;dbl&gt; 2003, 1976, 2001, 1998, 2000, 1993, 2004, 1973, 1931, 19…\n$ GarageFinish  &lt;chr&gt; \"RFn\", \"RFn\", \"RFn\", \"Unf\", \"RFn\", \"Unf\", \"RFn\", \"RFn\", …\n$ GarageCars    &lt;dbl&gt; 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 3, 1, 3, 1, 2, 2, 2, 2,…\n$ GarageArea    &lt;dbl&gt; 548, 460, 608, 642, 836, 480, 636, 484, 468, 205, 384, 7…\n$ GarageQual    &lt;chr&gt; \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"Fa\", \"G…\n$ GarageCond    &lt;chr&gt; \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"T…\n$ PavedDrive    &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ WoodDeckSF    &lt;dbl&gt; 0, 298, 0, 0, 192, 40, 255, 235, 90, 0, 0, 147, 140, 160…\n$ OpenPorchSF   &lt;dbl&gt; 61, 0, 42, 35, 84, 30, 57, 204, 0, 4, 0, 21, 0, 33, 213,…\n$ EnclosedPorch &lt;dbl&gt; 0, 0, 0, 272, 0, 0, 0, 228, 205, 0, 0, 0, 0, 0, 176, 0, …\n$ `3SsnPorch`   &lt;dbl&gt; 0, 0, 0, 0, 0, 320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ ScreenPorch   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, …\n$ PoolArea      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PoolQC        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Fence         &lt;chr&gt; NA, NA, NA, NA, NA, \"MnPrv\", NA, NA, NA, NA, NA, NA, NA,…\n$ MiscFeature   &lt;chr&gt; NA, NA, NA, NA, NA, \"Shed\", NA, \"Shed\", NA, NA, NA, NA, …\n$ MiscVal       &lt;dbl&gt; 0, 0, 0, 0, 0, 700, 0, 350, 0, 0, 0, 0, 0, 0, 0, 0, 700,…\n$ MoSold        &lt;dbl&gt; 2, 5, 9, 2, 12, 10, 8, 11, 4, 1, 2, 7, 9, 8, 5, 7, 3, 10…\n$ YrSold        &lt;dbl&gt; 2008, 2007, 2008, 2006, 2008, 2009, 2007, 2009, 2008, 20…\n$ SaleType      &lt;chr&gt; \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"W…\n$ SaleCondition &lt;chr&gt; \"Normal\", \"Normal\", \"Normal\", \"Abnorml\", \"Normal\", \"Norm…\n$ SalePrice     &lt;dbl&gt; 208500, 181500, 223500, 140000, 250000, 143000, 307000, …\n\n\n\n\nCode\noptions(scipen = 999)\nggplot(train, aes(SalePrice)) + \n  geom_histogram()\n\n\n\n\n\n\n\n\n\n\n\n\nMean absolute error (MAE)\n\nThe MAE measures the average magnitude of the errors in a set of forecasts, without considering their direction. It measures accuracy for continuous variables. The equation is given in the library references. Expressed in words, the MAE is the average over the verification sample of the absolute values of the differences between forecast and the corresponding observation. The MAE is a linear score which means that all the individual differences are weighted equally in the average.\n\nRoot Mean Squared Error (RMSE)\n\n\nThe RMSE is a quadratic scoring rule which measures the average magnitude of the error. The equation for the RMSE is given in both of the references. Expressing the formula in words, the difference between forecast and corresponding observed values are each squared and then averaged over the sample. Finally, the square root of the average is taken. Since the errors are squared before they are averaged, the RMSE gives a relatively high weight to large errors. This means the RMSE is most useful when large errors are particularly undesirable.\nBoth the MAE and RMSE can range from 0 to ∞. They are negatively-oriented scores: Lower values are better.",
    "crumbs": [
      "house price regression model",
      "Level 0 Regression Tidy Modeling"
    ]
  },
  {
    "objectID": "house price regression model/Level 2 Regression Tidy Modeling.html#measurement",
    "href": "house price regression model/Level 2 Regression Tidy Modeling.html#measurement",
    "title": "Level 0 Regression Tidy Modeling",
    "section": "",
    "text": "Mean absolute error (MAE)\n\nThe MAE measures the average magnitude of the errors in a set of forecasts, without considering their direction. It measures accuracy for continuous variables. The equation is given in the library references. Expressed in words, the MAE is the average over the verification sample of the absolute values of the differences between forecast and the corresponding observation. The MAE is a linear score which means that all the individual differences are weighted equally in the average.\n\nRoot Mean Squared Error (RMSE)\n\n\nThe RMSE is a quadratic scoring rule which measures the average magnitude of the error. The equation for the RMSE is given in both of the references. Expressing the formula in words, the difference between forecast and corresponding observed values are each squared and then averaged over the sample. Finally, the square root of the average is taken. Since the errors are squared before they are averaged, the RMSE gives a relatively high weight to large errors. This means the RMSE is most useful when large errors are particularly undesirable.\nBoth the MAE and RMSE can range from 0 to ∞. They are negatively-oriented scores: Lower values are better.",
    "crumbs": [
      "house price regression model",
      "Level 0 Regression Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html",
    "title": "Level 2 classification Tidy Modeling",
    "section": "",
    "text": "Level 2 classification Tidy Modeling:",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#read-data",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#read-data",
    "title": "Level 2 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\nhttps://www.kaggle.com/competitions/titanic/data\n\n\nCode\nlibrary(tidyverse)\ntrain = read_csv(\"data/train.csv\")\n\ntest=read_csv(\"data/test.csv\")",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#eda",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#eda",
    "title": "Level 2 classification Tidy Modeling",
    "section": "2.2 EDA",
    "text": "2.2 EDA\n\n\nCode\nglimpse(train)\n\n\nRows: 891\nColumns: 12\n$ PassengerId &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ Survived    &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1…\n$ Pclass      &lt;dbl&gt; 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, 3…\n$ Name        &lt;chr&gt; \"Braund, Mr. Owen Harris\", \"Cumings, Mrs. John Bradley (Fl…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"female\", \"female\", \"male\", \"male\", \"mal…\n$ Age         &lt;dbl&gt; 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14, …\n$ SibSp       &lt;dbl&gt; 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"A/5 21171\", \"PC 17599\", \"STON/O2. 3101282\", \"113803\", \"37…\n$ Fare        &lt;dbl&gt; 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625,…\n$ Cabin       &lt;chr&gt; NA, \"C85\", NA, \"C123\", NA, NA, \"E46\", NA, NA, NA, \"G6\", \"C…\n$ Embarked    &lt;chr&gt; \"S\", \"C\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"C\", \"S\", \"S\"…\n\n\n\n\nCode\nglimpse(test)\n\n\nRows: 418\nColumns: 11\n$ PassengerId &lt;dbl&gt; 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903…\n$ Pclass      &lt;dbl&gt; 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 1, 2, 1, 2, 2, 3, 3, 3…\n$ Name        &lt;chr&gt; \"Kelly, Mr. James\", \"Wilkes, Mrs. James (Ellen Needs)\", \"M…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"female\", \"male\", \"femal…\n$ Age         &lt;dbl&gt; 34.5, 47.0, 62.0, 27.0, 22.0, 14.0, 30.0, 26.0, 18.0, 21.0…\n$ SibSp       &lt;dbl&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"330911\", \"363272\", \"240276\", \"315154\", \"3101298\", \"7538\",…\n$ Fare        &lt;dbl&gt; 7.8292, 7.0000, 9.6875, 8.6625, 12.2875, 9.2250, 7.6292, 2…\n$ Cabin       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"B45\", NA,…\n$ Embarked    &lt;chr&gt; \"Q\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"C\", \"S\", \"S\", \"S\"…\n\n\n\n\nCode\ntrain %&gt;%\n  count(Survived)\n\n\n# A tibble: 2 × 2\n  Survived     n\n     &lt;dbl&gt; &lt;int&gt;\n1        0   549\n2        1   342",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#plotting",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#plotting",
    "title": "Level 2 classification Tidy Modeling",
    "section": "2.3 plotting",
    "text": "2.3 plotting\n\n\nCode\nlibrary(skimr)\n\nskim(train)\n\n\n\nData summary\n\n\nName\ntrain\n\n\nNumber of rows\n891\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nName\n0\n1.00\n12\n82\n0\n891\n0\n\n\nSex\n0\n1.00\n4\n6\n0\n2\n0\n\n\nTicket\n0\n1.00\n3\n18\n0\n681\n0\n\n\nCabin\n687\n0.23\n1\n15\n0\n147\n0\n\n\nEmbarked\n2\n1.00\n1\n1\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPassengerId\n0\n1.0\n446.00\n257.35\n1.00\n223.50\n446.00\n668.5\n891.00\n▇▇▇▇▇\n\n\nSurvived\n0\n1.0\n0.38\n0.49\n0.00\n0.00\n0.00\n1.0\n1.00\n▇▁▁▁▅\n\n\nPclass\n0\n1.0\n2.31\n0.84\n1.00\n2.00\n3.00\n3.0\n3.00\n▃▁▃▁▇\n\n\nAge\n177\n0.8\n29.70\n14.53\n0.42\n20.12\n28.00\n38.0\n80.00\n▂▇▅▂▁\n\n\nSibSp\n0\n1.0\n0.52\n1.10\n0.00\n0.00\n0.00\n1.0\n8.00\n▇▁▁▁▁\n\n\nParch\n0\n1.0\n0.38\n0.81\n0.00\n0.00\n0.00\n0.0\n6.00\n▇▁▁▁▁\n\n\nFare\n0\n1.0\n32.20\n49.69\n0.00\n7.91\n14.45\n31.0\n512.33\n▇▁▁▁▁",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#data-split",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#data-split",
    "title": "Level 2 classification Tidy Modeling",
    "section": "2.4 data split",
    "text": "2.4 data split\n\n\nPrepare & Split Data\ntrain_df &lt;- train %&gt;%mutate(Survived=as.factor(Survived)) %&gt;% select(-Name,-Ticket) %&gt;% \n\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=Survived)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=train_df, prop = c(0.7,0.1))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 623  10\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 179  10\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 89 10",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#recipe",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#recipe",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\nbecasue the target class is not balance so using downsample\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  #step_downsample(target_variable) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#prep-the-recipe",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#prep-the-recipe",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.2 prep the recipe",
    "text": "3.2 prep the recipe\n\n\nCode\ndata_rec=data_rec %&gt;% prep()\n\n\n\n\nCode\ndata_rec",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#bake-the-train-data-with-preded-recipe",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#bake-the-train-data-with-preded-recipe",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.3 bake the train data with preded recipe",
    "text": "3.3 bake the train data with preded recipe\n\n\nCode\ntrain_proc &lt;- bake(data_rec, new_data = data_train)\n\n\n\n\nCode\ntrain_proc2 &lt;- bake(data_rec, new_data = NULL)\n\n\n\n\nCode\ntrain_juice &lt;-juice(data_rec)\n\n\nthe difference between train_proc and train_juice is that the train_juice is been down sample.\n\n\nCode\ndim(train_proc)\n\n\n[1] 623 128\n\n\n\n\nCode\ndim(train_proc2)\n\n\n[1] 623 128\n\n\n\n\nCode\ndim(train_juice)\n\n\n[1] 623 128\n\n\n\n\nCode\ntrain_proc %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                 379\n2 1                 244\n\n\nthe juice and train_proc2 target is down sample to 1:1\n\n\nCode\ntrain_proc2 %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                 379\n2 1                 244\n\n\n\n\nCode\ntrain_juice %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                 379\n2 1                 244",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#bake-the-test-data-with-preded-recipe",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#bake-the-test-data-with-preded-recipe",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.4 bake the test data with preded recipe",
    "text": "3.4 bake the test data with preded recipe\n\n\nCode\ntest_proc &lt;- bake(data_rec, new_data = data_test)\n\n\n\n\nCode\nvalid_proc &lt;- bake(data_rec, new_data = data_valid)\n\n\njuice(pre_recipe,data=NULL) is same as bake(pre_recipe,data=hotel_train) for training data (excepted down sample)",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#model",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#model",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.5 model",
    "text": "3.5 model\ntree model\n\n\nCode\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"rpart\") %&gt;%\n  set_mode(\"classification\")\n\n\nKNN model\n\n\nCode\nknn_spec &lt;- nearest_neighbor() %&gt;%\n  set_engine(\"kknn\") %&gt;%\n  set_mode(\"classification\")",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#trainning",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#trainning",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.6 trainning",
    "text": "3.6 trainning\n\n\nCode\nknn_fit &lt;- knn_spec %&gt;%\n  fit(target_variable ~ ., data = train_juice)\n\nknn_fit\n\n\nparsnip model object\n\n\nCall:\nkknn::train.kknn(formula = target_variable ~ ., data = data,     ks = min_rows(5, data, 5))\n\nType of response variable: nominal\nMinimal misclassification: 0.481203\nBest kernel: optimal\nBest k: 5\n\n\n\n\nCode\ntree_fit &lt;- tree_spec %&gt;%\n  fit(target_variable ~ ., data = train_juice)\n\ntree_fit\n\n\nparsnip model object\n\nn= 623 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n  1) root 623 244 0 (0.60834671 0.39165329)  \n    2) Sex_male&gt;=-0.3181194 406  84 0 (0.79310345 0.20689655)  \n      4) Age&gt;=-1.588093 389  70 0 (0.82005141 0.17994859) *\n      5) Age&lt; -1.588093 17   3 1 (0.17647059 0.82352941) *\n    3) Sex_male&lt; -0.3181194 217  57 1 (0.26267281 0.73732719)  \n      6) Pclass&gt;=0.2640325 91  42 0 (0.53846154 0.46153846)  \n       12) Fare&gt;=-0.1653079 16   1 0 (0.93750000 0.06250000) *\n       13) Fare&lt; -0.1653079 75  34 1 (0.45333333 0.54666667)  \n         26) Embarked_S&gt;=-0.4947473 42  18 0 (0.57142857 0.42857143)  \n           52) Fare&gt;=-0.3321481 9   2 0 (0.77777778 0.22222222) *\n           53) Fare&lt; -0.3321481 33  16 0 (0.51515152 0.48484848)  \n            106) Fare&lt; -0.4658063 23   8 0 (0.65217391 0.34782609) *\n            107) Fare&gt;=-0.4658063 10   2 1 (0.20000000 0.80000000) *\n         27) Embarked_S&lt; -0.4947473 33  10 1 (0.30303030 0.69696970) *\n      7) Pclass&lt; 0.2640325 126   8 1 (0.06349206 0.93650794) *",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#evaluate",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#evaluate",
    "title": "Level 2 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\nMake predictions on the testing data\n\n\nCode\npredictions &lt;- predict(tree_fit,test_proc) \n\npredictions_probability &lt;- predict(tree_fit,test_proc,type=\"prob\")\n\n\n\n\nCode\ndata_test_result=cbind(data_test,predictions,predictions_probability) \n\n\n\n\nCode\nconf_mat(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction   0   1\n         0 108  22\n         1   5  44\n\n\n\n\nCode\nmetrics(data_test_result, target_variable, .pred_class)\n\n\n# A tibble: 2 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.849\n2 kap      binary         0.658\n\n\n\n\nCode\naccuracy(data_test_result, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.849\n\n\n\n\nCode\nsens(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 sens    binary         0.956\n\n\n\n\nCode\nspec(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 spec    binary         0.667\n\n\nAccuracy = (TN + TP)/(TN+TP+FN+FP) = (Number of correct assessments)/Number of all assessments)\nSensitivity = TP/(TP + FN) = (Number of true positive assessment)/(Number of all positive assessment)\nSpecificity = TN/(TN + FP) = (Number of true negative assessment)/(Number of all negative assessment)\n\n\nCode\nall_metrics &lt;- metric_set(accuracy, sens, spec)\n\nall_metrics(data_test_result, truth = target_variable,estimate = .pred_class)\n\n\n# A tibble: 3 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.849\n2 sens     binary         0.956\n3 spec     binary         0.667\n\n\n\n\nCode\nconf_mat(data_test_result, truth = target_variable,estimate = .pred_class) %&gt;% \n  summary()\n\n\n# A tibble: 13 × 3\n   .metric              .estimator .estimate\n   &lt;chr&gt;                &lt;chr&gt;          &lt;dbl&gt;\n 1 accuracy             binary         0.849\n 2 kap                  binary         0.658\n 3 sens                 binary         0.956\n 4 spec                 binary         0.667\n 5 ppv                  binary         0.831\n 6 npv                  binary         0.898\n 7 mcc                  binary         0.673\n 8 j_index              binary         0.622\n 9 bal_accuracy         binary         0.811\n10 detection_prevalence binary         0.726\n11 precision            binary         0.831\n12 recall               binary         0.956\n13 f_meas               binary         0.889\n\n\n\n\nCode\nroc_auc(data_test_result, truth = target_variable, .pred_0)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 roc_auc binary         0.862\n\n\n\n\nCode\nroc_curve(data_test_result, truth = target_variable, .pred_0) %&gt;% \n  autoplot()",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#save-model",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#save-model",
    "title": "Level 2 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(tree_fit)\n\n\n847.89 kB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(tree_fit)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 2 classification model.RDS')",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 2 classification Tidy Modeling.html#make-predication",
    "href": "titanic classification model/Level 2 classification Tidy Modeling.html#make-predication",
    "title": "Level 2 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 2 classification model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,valid_proc)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 0          \n2 1          \n3 1          \n4 0          \n5 0          \n6 0          \n\n\n\n\nCode\nfinal_prediction_data=cbind(valid_proc,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 49 13\n         1  8 19\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.764\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                  57\n2 1                  32\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 0              62\n2 1              27\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 49 13\n         1  8 19",
    "crumbs": [
      "titanic classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html",
    "title": "Level 1 classification Tidy Modeling",
    "section": "",
    "text": "Level 1 classification Tidy Modeling: using basic Tidymodel package.",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#read-data",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#read-data",
    "title": "Level 1 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\nhttps://www.kaggle.com/competitions/titanic/data\n\n\nCode\nlibrary(tidyverse)\ntrain = read_csv(\"data/train.csv\")\n\ntest=read_csv(\"data/test.csv\")",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#eda",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#eda",
    "title": "Level 1 classification Tidy Modeling",
    "section": "2.2 EDA",
    "text": "2.2 EDA\n\n\nCode\nglimpse(train)\n\n\nRows: 891\nColumns: 12\n$ PassengerId &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ Survived    &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1…\n$ Pclass      &lt;dbl&gt; 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, 3…\n$ Name        &lt;chr&gt; \"Braund, Mr. Owen Harris\", \"Cumings, Mrs. John Bradley (Fl…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"female\", \"female\", \"male\", \"male\", \"mal…\n$ Age         &lt;dbl&gt; 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14, …\n$ SibSp       &lt;dbl&gt; 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"A/5 21171\", \"PC 17599\", \"STON/O2. 3101282\", \"113803\", \"37…\n$ Fare        &lt;dbl&gt; 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625,…\n$ Cabin       &lt;chr&gt; NA, \"C85\", NA, \"C123\", NA, NA, \"E46\", NA, NA, NA, \"G6\", \"C…\n$ Embarked    &lt;chr&gt; \"S\", \"C\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"C\", \"S\", \"S\"…\n\n\n\n\nCode\nglimpse(test)\n\n\nRows: 418\nColumns: 11\n$ PassengerId &lt;dbl&gt; 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903…\n$ Pclass      &lt;dbl&gt; 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 1, 2, 1, 2, 2, 3, 3, 3…\n$ Name        &lt;chr&gt; \"Kelly, Mr. James\", \"Wilkes, Mrs. James (Ellen Needs)\", \"M…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"female\", \"male\", \"femal…\n$ Age         &lt;dbl&gt; 34.5, 47.0, 62.0, 27.0, 22.0, 14.0, 30.0, 26.0, 18.0, 21.0…\n$ SibSp       &lt;dbl&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"330911\", \"363272\", \"240276\", \"315154\", \"3101298\", \"7538\",…\n$ Fare        &lt;dbl&gt; 7.8292, 7.0000, 9.6875, 8.6625, 12.2875, 9.2250, 7.6292, 2…\n$ Cabin       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"B45\", NA,…\n$ Embarked    &lt;chr&gt; \"Q\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"C\", \"S\", \"S\", \"S\"…\n\n\n\n\nCode\ntrain %&gt;%\n  count(Survived)\n\n\n# A tibble: 2 × 2\n  Survived     n\n     &lt;dbl&gt; &lt;int&gt;\n1        0   549\n2        1   342",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#plotting",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#plotting",
    "title": "Level 1 classification Tidy Modeling",
    "section": "2.3 plotting",
    "text": "2.3 plotting\n\n\nCode\nlibrary(skimr)\n\nskim(train)\n\n\n\nData summary\n\n\nName\ntrain\n\n\nNumber of rows\n891\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nName\n0\n1.00\n12\n82\n0\n891\n0\n\n\nSex\n0\n1.00\n4\n6\n0\n2\n0\n\n\nTicket\n0\n1.00\n3\n18\n0\n681\n0\n\n\nCabin\n687\n0.23\n1\n15\n0\n147\n0\n\n\nEmbarked\n2\n1.00\n1\n1\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPassengerId\n0\n1.0\n446.00\n257.35\n1.00\n223.50\n446.00\n668.5\n891.00\n▇▇▇▇▇\n\n\nSurvived\n0\n1.0\n0.38\n0.49\n0.00\n0.00\n0.00\n1.0\n1.00\n▇▁▁▁▅\n\n\nPclass\n0\n1.0\n2.31\n0.84\n1.00\n2.00\n3.00\n3.0\n3.00\n▃▁▃▁▇\n\n\nAge\n177\n0.8\n29.70\n14.53\n0.42\n20.12\n28.00\n38.0\n80.00\n▂▇▅▂▁\n\n\nSibSp\n0\n1.0\n0.52\n1.10\n0.00\n0.00\n0.00\n1.0\n8.00\n▇▁▁▁▁\n\n\nParch\n0\n1.0\n0.38\n0.81\n0.00\n0.00\n0.00\n0.0\n6.00\n▇▁▁▁▁\n\n\nFare\n0\n1.0\n32.20\n49.69\n0.00\n7.91\n14.45\n31.0\n512.33\n▇▁▁▁▁",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#data-split",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#data-split",
    "title": "Level 1 classification Tidy Modeling",
    "section": "2.4 data split",
    "text": "2.4 data split\n\n\nPrepare & Split Data\ntrain_df &lt;- train %&gt;%mutate(Survived=as.factor(Survived)) %&gt;% select(-Name,-Ticket) %&gt;% \n\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=Survived)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=train_df, prop = c(0.7,0.1))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 623  10\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 179  10\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 89 10",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#recipe",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#recipe",
    "title": "Level 1 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\ndid not use recipe at this case",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#model",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#model",
    "title": "Level 1 classification Tidy Modeling",
    "section": "3.2 model",
    "text": "3.2 model\ndecision tree model\n\n\nCode\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"rpart\") %&gt;%\n  set_mode(\"classification\")\n\n\nKNN model\n\n\nCode\nknn_spec &lt;- nearest_neighbor() %&gt;%\n  set_engine(\"kknn\") %&gt;%\n  set_mode(\"classification\")",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#trainning",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#trainning",
    "title": "Level 1 classification Tidy Modeling",
    "section": "3.3 trainning",
    "text": "3.3 trainning\n\n\nCode\nknn_fit &lt;- knn_spec %&gt;%\n  fit(target_variable ~ ., data = data_train)\n\nknn_fit\n\n\nparsnip model object\n\n\nCall:\nkknn::train.kknn(formula = target_variable ~ ., data = data,     ks = min_rows(5, data, 5))\n\nType of response variable: nominal\nMinimal misclassification: 0.3684211\nBest kernel: optimal\nBest k: 5\n\n\n\n\nCode\ntree_fit &lt;- tree_spec %&gt;%\n  fit(target_variable ~ ., data = data_train)\n\ntree_fit\n\n\nparsnip model object\n\nn= 623 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n  1) root 623 244 0 (0.60834671 0.39165329)  \n    2) Sex=male 406  84 0 (0.79310345 0.20689655)  \n      4) Cabin=A14,A19,A32,A5,B102,B19,B22,B30,B37,B38,B51 B53 B55,B71,B94,C118,C123,C124,C128,C23 C25 C27,C30,C46,C65,C68,C82,C83,C86,C87,C95,D,D26,D30,D48,E38,E58,E63,E67,F G63,F G73,F38,T 288  36 0 (0.87500000 0.12500000) *\n      5) Cabin=A20,A23,A31,A34,B20,B41,B49,B50,B96 B98,C104,C106,C126,C148,C22 C26,C47,C52,C70,C92,C93,D10 D12,D33,D35,D49,D56,E10,E12,E121,E24,E25,E50,F2,F4 118  48 0 (0.59322034 0.40677966)  \n       10) Pclass&gt;=1.5 88  20 0 (0.77272727 0.22727273)  \n         20) Age&gt;=6.5 75  10 0 (0.86666667 0.13333333) *\n         21) Age&lt; 6.5 13   3 1 (0.23076923 0.76923077) *\n       11) Pclass&lt; 1.5 30   2 1 (0.06666667 0.93333333) *\n    3) Sex=female 217  57 1 (0.26267281 0.73732719)  \n      6) Pclass&gt;=2.5 91  42 0 (0.53846154 0.46153846)  \n       12) Fare&gt;=24.80835 16   1 0 (0.93750000 0.06250000) *\n       13) Fare&lt; 24.80835 75  34 1 (0.45333333 0.54666667)  \n         26) Embarked=S 42  18 0 (0.57142857 0.42857143)  \n           52) Fare&gt;=17.35 9   2 0 (0.77777778 0.22222222) *\n           53) Fare&lt; 17.35 33  16 0 (0.51515152 0.48484848)  \n            106) Fare&lt; 11.375 23   8 0 (0.65217391 0.34782609) *\n            107) Fare&gt;=11.375 10   2 1 (0.20000000 0.80000000) *\n         27) Embarked=C,Q 33  10 1 (0.30303030 0.69696970) *\n      7) Pclass&lt; 2.5 126   8 1 (0.06349206 0.93650794) *",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#evaluate",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#evaluate",
    "title": "Level 1 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\nMake predictions on the testing data\n\n\nCode\npredictions &lt;- predict(tree_fit,data_test) \n\npredictions_probability &lt;- predict(tree_fit,data_test,type=\"prob\")\n\n\n\n\nCode\ndata_test_result=cbind(data_test,predictions,predictions_probability) \n\n\n\n\nCode\nconf_mat(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction   0   1\n         0 105  19\n         1   8  47\n\n\n\n\nCode\nmetrics(data_test_result, target_variable, .pred_class)\n\n\n# A tibble: 2 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.849\n2 kap      binary         0.664\n\n\n\n\nCode\naccuracy(data_test_result, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.849\n\n\n\n\nCode\nsens(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 sens    binary         0.929\n\n\n\n\nCode\nspec(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 spec    binary         0.712\n\n\n\n\nCode\nall_metrics &lt;- metric_set(accuracy, sens, spec)\n\nall_metrics(data_test_result, truth = target_variable,estimate = .pred_class)\n\n\n# A tibble: 3 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.849\n2 sens     binary         0.929\n3 spec     binary         0.712\n\n\n\n\nCode\nconf_mat(data_test_result, truth = target_variable,estimate = .pred_class) %&gt;% \n  summary()\n\n\n# A tibble: 13 × 3\n   .metric              .estimator .estimate\n   &lt;chr&gt;                &lt;chr&gt;          &lt;dbl&gt;\n 1 accuracy             binary         0.849\n 2 kap                  binary         0.664\n 3 sens                 binary         0.929\n 4 spec                 binary         0.712\n 5 ppv                  binary         0.847\n 6 npv                  binary         0.855\n 7 mcc                  binary         0.671\n 8 j_index              binary         0.641\n 9 bal_accuracy         binary         0.821\n10 detection_prevalence binary         0.693\n11 precision            binary         0.847\n12 recall               binary         0.929\n13 f_meas               binary         0.886\n\n\n\n\nCode\nroc_auc(data_test_result, truth = target_variable, .pred_0)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 roc_auc binary         0.881\n\n\n\n\nCode\nroc_curve(data_test_result, truth = target_variable, .pred_0) %&gt;% \n  autoplot()",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#save-model",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#save-model",
    "title": "Level 1 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(tree_fit)\n\n\n130.17 kB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(tree_fit)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 1 classification tree hotel model.RDS')",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 1 classification Tidy Modeling.html#make-predication",
    "href": "titanic classification model/Level 1 classification Tidy Modeling.html#make-predication",
    "title": "Level 1 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 1 classification tree hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,data_valid)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 0          \n2 1          \n3 1          \n4 0          \n5 0          \n6 0",
    "crumbs": [
      "titanic classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html",
    "title": "Level 3 classification Tidy Modeling",
    "section": "",
    "text": "Level 3 classification Tidy Modeling:",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#read-data",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#read-data",
    "title": "Level 3 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\nhttps://www.kaggle.com/competitions/titanic/data\n\n\nCode\nlibrary(tidyverse)\ntrain = read_csv(\"data/train.csv\")\n\ntest=read_csv(\"data/test.csv\")",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#eda",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#eda",
    "title": "Level 3 classification Tidy Modeling",
    "section": "2.2 EDA",
    "text": "2.2 EDA\n\n\nCode\nglimpse(train)\n\n\nRows: 891\nColumns: 12\n$ PassengerId &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ Survived    &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1…\n$ Pclass      &lt;dbl&gt; 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, 3…\n$ Name        &lt;chr&gt; \"Braund, Mr. Owen Harris\", \"Cumings, Mrs. John Bradley (Fl…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"female\", \"female\", \"male\", \"male\", \"mal…\n$ Age         &lt;dbl&gt; 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14, …\n$ SibSp       &lt;dbl&gt; 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"A/5 21171\", \"PC 17599\", \"STON/O2. 3101282\", \"113803\", \"37…\n$ Fare        &lt;dbl&gt; 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625,…\n$ Cabin       &lt;chr&gt; NA, \"C85\", NA, \"C123\", NA, NA, \"E46\", NA, NA, NA, \"G6\", \"C…\n$ Embarked    &lt;chr&gt; \"S\", \"C\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"C\", \"S\", \"S\"…\n\n\n\n\nCode\nglimpse(test)\n\n\nRows: 418\nColumns: 11\n$ PassengerId &lt;dbl&gt; 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903…\n$ Pclass      &lt;dbl&gt; 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 1, 2, 1, 2, 2, 3, 3, 3…\n$ Name        &lt;chr&gt; \"Kelly, Mr. James\", \"Wilkes, Mrs. James (Ellen Needs)\", \"M…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"female\", \"male\", \"femal…\n$ Age         &lt;dbl&gt; 34.5, 47.0, 62.0, 27.0, 22.0, 14.0, 30.0, 26.0, 18.0, 21.0…\n$ SibSp       &lt;dbl&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"330911\", \"363272\", \"240276\", \"315154\", \"3101298\", \"7538\",…\n$ Fare        &lt;dbl&gt; 7.8292, 7.0000, 9.6875, 8.6625, 12.2875, 9.2250, 7.6292, 2…\n$ Cabin       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"B45\", NA,…\n$ Embarked    &lt;chr&gt; \"Q\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"C\", \"S\", \"S\", \"S\"…\n\n\n\n\nCode\ntrain %&gt;%\n  count(Survived)\n\n\n# A tibble: 2 × 2\n  Survived     n\n     &lt;dbl&gt; &lt;int&gt;\n1        0   549\n2        1   342",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#plotting",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#plotting",
    "title": "Level 3 classification Tidy Modeling",
    "section": "2.3 plotting",
    "text": "2.3 plotting\n\n\nCode\nlibrary(skimr)\n\nskim(train)\n\n\n\nData summary\n\n\nName\ntrain\n\n\nNumber of rows\n891\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nName\n0\n1.00\n12\n82\n0\n891\n0\n\n\nSex\n0\n1.00\n4\n6\n0\n2\n0\n\n\nTicket\n0\n1.00\n3\n18\n0\n681\n0\n\n\nCabin\n687\n0.23\n1\n15\n0\n147\n0\n\n\nEmbarked\n2\n1.00\n1\n1\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPassengerId\n0\n1.0\n446.00\n257.35\n1.00\n223.50\n446.00\n668.5\n891.00\n▇▇▇▇▇\n\n\nSurvived\n0\n1.0\n0.38\n0.49\n0.00\n0.00\n0.00\n1.0\n1.00\n▇▁▁▁▅\n\n\nPclass\n0\n1.0\n2.31\n0.84\n1.00\n2.00\n3.00\n3.0\n3.00\n▃▁▃▁▇\n\n\nAge\n177\n0.8\n29.70\n14.53\n0.42\n20.12\n28.00\n38.0\n80.00\n▂▇▅▂▁\n\n\nSibSp\n0\n1.0\n0.52\n1.10\n0.00\n0.00\n0.00\n1.0\n8.00\n▇▁▁▁▁\n\n\nParch\n0\n1.0\n0.38\n0.81\n0.00\n0.00\n0.00\n0.0\n6.00\n▇▁▁▁▁\n\n\nFare\n0\n1.0\n32.20\n49.69\n0.00\n7.91\n14.45\n31.0\n512.33\n▇▁▁▁▁",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#data-split",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#data-split",
    "title": "Level 3 classification Tidy Modeling",
    "section": "2.4 data split",
    "text": "2.4 data split\n\n\nPrepare & Split Data\ntrain_df &lt;- train %&gt;%mutate(Survived=as.factor(Survived)) %&gt;% select(-Name) %&gt;% \n\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=Survived)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=train_df, prop = c(0.7,0.1))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 623  11\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 179  11\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 89 11",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#recipe",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#recipe",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  step_impute_knn(all_predictors(), neighbors = 5) %&gt;%\n  #step_downsample(target_variable) %&gt;%\n  #step_novel(Ticket) %&gt;%\n  step_rm(Ticket) %&gt;% \n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#prep-the-recipe",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#prep-the-recipe",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.2 prep the recipe",
    "text": "3.2 prep the recipe\n\n\nCode\ndata_rec=data_rec %&gt;% prep()\n\n\n\n\nCode\ndata_rec",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#bake-the-train-data-with-preded-recipe",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#bake-the-train-data-with-preded-recipe",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.3 bake the train data with preded recipe",
    "text": "3.3 bake the train data with preded recipe\n\n\nCode\ntrain_proc &lt;- bake(data_rec, new_data = data_train)\n\n\n\n\nCode\ntrain_proc2 &lt;- bake(data_rec, new_data = NULL)\n\n\n\n\nCode\ntrain_juice &lt;-juice(data_rec)\n\n\nthe difference between train_proc and train_juice is that the train_juice is been down sample.\n\n\nCode\ndim(train_proc)\n\n\n[1] 623 128\n\n\n\n\nCode\ndim(train_proc2)\n\n\n[1] 623 128\n\n\n\n\nCode\ndim(train_juice)\n\n\n[1] 623 128\n\n\n\n\nCode\ntrain_proc %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                 379\n2 1                 244\n\n\nthe juice and train_proc2 target is down sample to 1:1\n\n\nCode\ntrain_proc2 %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                 379\n2 1                 244\n\n\n\n\nCode\ntrain_juice %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                 379\n2 1                 244",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#bake-the-test-data-with-preded-recipe",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#bake-the-test-data-with-preded-recipe",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.4 bake the test data with preded recipe",
    "text": "3.4 bake the test data with preded recipe\n\n\nCode\ntest_proc &lt;- bake(data_rec, new_data = data_test)\n\n\n\n\nCode\ntest_proc %&gt;%count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                 113\n2 1                  66\n\n\n\n\nCode\ndata_valid %&gt;%count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                  57\n2 1                  32\n\n\n\n\nCode\nvalid_proc &lt;- bake(data_rec, new_data = data_valid)\n\n\njuice(pre_recipe,data=NULL) is same as bake(pre_recipe,data=hotel_train) for training data (excepted down sample)",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#model",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#model",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.5 model",
    "text": "3.5 model\ntree model\n\n\nCode\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"rpart\") %&gt;%\n  set_mode(\"classification\")\n\n\nKNN model\n\n\nCode\nknn_spec &lt;- nearest_neighbor() %&gt;%\n  set_engine(\"kknn\") %&gt;%\n  set_mode(\"classification\")",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#trainning",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#trainning",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.6 trainning",
    "text": "3.6 trainning\n\n\nCode\nknn_fit &lt;- knn_spec %&gt;%\n  fit(target_variable ~ ., data = train_juice)\n\nknn_fit\n\n\nparsnip model object\n\n\nCall:\nkknn::train.kknn(formula = target_variable ~ ., data = data,     ks = min_rows(5, data, 5))\n\nType of response variable: nominal\nMinimal misclassification: 0.2536116\nBest kernel: optimal\nBest k: 5\n\n\n\n\nCode\ntree_fit &lt;- tree_spec %&gt;%\n  fit(target_variable ~ ., data = train_juice)\n\ntree_fit\n\n\nparsnip model object\n\nn= 623 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n  1) root 623 244 0 (0.60834671 0.39165329)  \n    2) Sex_male&gt;=-0.3181194 406  84 0 (0.79310345 0.20689655)  \n      4) Age&gt;=-1.700165 388  70 0 (0.81958763 0.18041237) *\n      5) Age&lt; -1.700165 18   4 1 (0.22222222 0.77777778) *\n    3) Sex_male&lt; -0.3181194 217  57 1 (0.26267281 0.73732719)  \n      6) Pclass&gt;=0.2640325 91  42 0 (0.53846154 0.46153846)  \n       12) Fare&gt;=-0.1653079 16   1 0 (0.93750000 0.06250000) *\n       13) Fare&lt; -0.1653079 75  34 1 (0.45333333 0.54666667)  \n         26) Embarked_S&gt;=-0.4915368 42  18 0 (0.57142857 0.42857143)  \n           52) Fare&gt;=-0.3321481 9   2 0 (0.77777778 0.22222222) *\n           53) Fare&lt; -0.3321481 33  16 0 (0.51515152 0.48484848)  \n            106) Fare&lt; -0.4658063 23   8 0 (0.65217391 0.34782609) *\n            107) Fare&gt;=-0.4658063 10   2 1 (0.20000000 0.80000000) *\n         27) Embarked_S&lt; -0.4915368 33  10 1 (0.30303030 0.69696970) *\n      7) Pclass&lt; 0.2640325 126   8 1 (0.06349206 0.93650794) *",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#evaluate",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#evaluate",
    "title": "Level 3 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\n\n\nCode\n#mc_cv default is 25\nset.seed(1234)\nvalidation_splits &lt;- mc_cv(train_juice, prop = 0.9, strata = target_variable\n                           #,times=3\n                           )\nvalidation_splits\n\n\n# Monte Carlo cross-validation (0.9/0.1) with 25 resamples  using stratification \n# A tibble: 25 × 2\n   splits           id        \n   &lt;list&gt;           &lt;chr&gt;     \n 1 &lt;split [560/63]&gt; Resample01\n 2 &lt;split [560/63]&gt; Resample02\n 3 &lt;split [560/63]&gt; Resample03\n 4 &lt;split [560/63]&gt; Resample04\n 5 &lt;split [560/63]&gt; Resample05\n 6 &lt;split [560/63]&gt; Resample06\n 7 &lt;split [560/63]&gt; Resample07\n 8 &lt;split [560/63]&gt; Resample08\n 9 &lt;split [560/63]&gt; Resample09\n10 &lt;split [560/63]&gt; Resample10\n# ℹ 15 more rows\n\n\nKKN:\n\n\nCode\nknn_res &lt;- knn_spec %&gt;% fit_resamples(\n  target_variable ~ .,\n  validation_splits,\n  control = control_resamples(save_pred = TRUE)\n)\n\nknn_res %&gt;%collect_metrics()\n\n\n# A tibble: 2 × 6\n  .metric  .estimator  mean     n std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary     0.726    25 0.0118  Preprocessor1_Model1\n2 roc_auc  binary     0.773    25 0.00998 Preprocessor1_Model1\n\n\nTree model:\n\n\nCode\ntree_res &lt;- tree_spec %&gt;% fit_resamples(\n  target_variable ~ .,\n  validation_splits,\n  control = control_resamples(save_pred = TRUE)\n)\n\ntree_res %&gt;%collect_metrics()\n\n\n# A tibble: 2 × 6\n  .metric  .estimator  mean     n std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary     0.788    25  0.0115 Preprocessor1_Model1\n2 roc_auc  binary     0.815    25  0.0117 Preprocessor1_Model1\n\n\n\n\nCode\nknn_res %&gt;%\n  unnest(.predictions) %&gt;%\n  mutate(model = \"kknn\") %&gt;%\n  bind_rows(tree_res %&gt;%\n    unnest(.predictions) %&gt;%\n    mutate(model = \"rpart\")) %&gt;%\n  group_by(model) %&gt;%\n  roc_curve(target_variable, .pred_0) %&gt;%\n  ggplot(aes(x = 1 - specificity, y = sensitivity, color = model)) +\n  geom_line(size = 1.5) +\n  geom_abline(\n    lty = 2, alpha = 0.5,\n    color = \"gray50\",\n    size = 1.2\n  )",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#save-model",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#save-model",
    "title": "Level 3 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(tree_fit)\n\n\n847.94 kB\n\n\nCode\nobj_size(knn_fit)\n\n\n814.76 kB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(knn_fit)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 2 classification KNN hotel model.RDS')",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 3 classification Tidy Modeling.html#make-predication",
    "href": "titanic classification model/Level 3 classification Tidy Modeling.html#make-predication",
    "title": "Level 3 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 2 classification KNN hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,valid_proc)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 0          \n2 0          \n3 1          \n4 0          \n5 1          \n6 0          \n\n\n\n\nCode\nfinal_prediction_data=cbind(valid_proc,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 43 10\n         1 14 22\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.730\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                  57\n2 1                  32\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 0              53\n2 1              36\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 43 10\n         1 14 22",
    "crumbs": [
      "titanic classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 0 classification Tidy Modeling.html",
    "href": "titanic classification model/Level 0 classification Tidy Modeling.html",
    "title": "Level 0 classification Tidy Modeling",
    "section": "",
    "text": "data download form kaggle\n\n\nCode\nlibrary(tidyverse)\ntrain = read_csv(\"data/train.csv\")\n\ntest=read_csv(\"data/test.csv\")\n\n\nData have 891 record and 12 variable\n\n\nCode\nglimpse(train)\n\n\nRows: 891\nColumns: 12\n$ PassengerId &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ Survived    &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1…\n$ Pclass      &lt;dbl&gt; 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, 3…\n$ Name        &lt;chr&gt; \"Braund, Mr. Owen Harris\", \"Cumings, Mrs. John Bradley (Fl…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"female\", \"female\", \"male\", \"male\", \"mal…\n$ Age         &lt;dbl&gt; 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14, …\n$ SibSp       &lt;dbl&gt; 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"A/5 21171\", \"PC 17599\", \"STON/O2. 3101282\", \"113803\", \"37…\n$ Fare        &lt;dbl&gt; 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625,…\n$ Cabin       &lt;chr&gt; NA, \"C85\", NA, \"C123\", NA, NA, \"E46\", NA, NA, NA, \"G6\", \"C…\n$ Embarked    &lt;chr&gt; \"S\", \"C\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"C\", \"S\", \"S\"…\n\n\n\n\nCode\ntrain %&gt;% group_by(Survived) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   Survived [2]\n  Survived     n\n     &lt;dbl&gt; &lt;int&gt;\n1        0   549\n2        1   342\n\n\n\n\n\nAccuracy=TP+TN+FP+FN\nPrecision — Out of all the examples that predicted as positive, how many are really positive?\n\nPrecision=TP/(TP+FP)\n\nRecall/Sensitivity(True Positive rate) — Out of all the positive examples, how many are predicted as positive?\n\nRecall=TP/(TP+FN)\n\nSpecificity(True Negative rate)— Out of all the people that do not have the disease, how many got negative results?\nFalse Negative Rate tells us what proportion of the positive class got incorrectly classified by the classifier\n\nSpecificity=TN/(TN+FP)\n\nFalse Positive rate=1-Specificity\nFalse Negative Rat=FN/(TP+FN)",
    "crumbs": [
      "titanic classification model",
      "Level 0 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 0 classification Tidy Modeling.html#measurement",
    "href": "titanic classification model/Level 0 classification Tidy Modeling.html#measurement",
    "title": "Level 0 classification Tidy Modeling",
    "section": "",
    "text": "Accuracy=TP+TN+FP+FN\nPrecision — Out of all the examples that predicted as positive, how many are really positive?\n\nPrecision=TP/(TP+FP)\n\nRecall/Sensitivity(True Positive rate) — Out of all the positive examples, how many are predicted as positive?\n\nRecall=TP/(TP+FN)\n\nSpecificity(True Negative rate)— Out of all the people that do not have the disease, how many got negative results?\nFalse Negative Rate tells us what proportion of the positive class got incorrectly classified by the classifier\n\nSpecificity=TN/(TN+FP)\n\nFalse Positive rate=1-Specificity\nFalse Negative Rat=FN/(TP+FN)",
    "crumbs": [
      "titanic classification model",
      "Level 0 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html",
    "title": "Level 2 classification Tidy Modeling",
    "section": "",
    "text": "Level 2 classification Tidy Modeling:",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#read-data",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#read-data",
    "title": "Level 2 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\n\n\nCode\nlibrary(tidyverse)\n\nhotels &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n\n\nhotel_stays &lt;- hotels %&gt;%\n  filter(is_canceled == 0) %&gt;%\n  mutate(\n    children = case_when(\n      children + babies &gt; 0 ~ \"children\",\n      TRUE ~ \"none\"\n    ),\n    required_car_parking_spaces = case_when(\n      required_car_parking_spaces &gt; 0 ~ \"parking\",\n      TRUE ~ \"none\"\n    )\n  ) %&gt;%\n  select(-is_canceled, -reservation_status, -babies)",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#plotting-and-eda",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#plotting-and-eda",
    "title": "Level 2 classification Tidy Modeling",
    "section": "2.2 plotting and EDA",
    "text": "2.2 plotting and EDA\n\n\nCode\nhotel_stays %&gt;%\n  count(children)\n\n\n# A tibble: 2 × 2\n  children     n\n  &lt;chr&gt;    &lt;int&gt;\n1 children  6073\n2 none     69093\n\n\n\n\nCode\nlibrary(skimr)\n\nskim(hotel_stays)\n\n\n\nData summary\n\n\nName\nhotel_stays\n\n\nNumber of rows\n75166\n\n\nNumber of columns\n29\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nDate\n1\n\n\ncharacter\n14\n\n\nnumeric\n14\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nreservation_status_date\n0\n1\n2015-07-01\n2017-09-14\n2016-09-01\n805\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nhotel\n0\n1\n10\n12\n0\n2\n0\n\n\narrival_date_month\n0\n1\n3\n9\n0\n12\n0\n\n\nchildren\n0\n1\n4\n8\n0\n2\n0\n\n\nmeal\n0\n1\n2\n9\n0\n5\n0\n\n\ncountry\n0\n1\n2\n4\n0\n166\n0\n\n\nmarket_segment\n0\n1\n6\n13\n0\n7\n0\n\n\ndistribution_channel\n0\n1\n3\n9\n0\n5\n0\n\n\nreserved_room_type\n0\n1\n1\n1\n0\n9\n0\n\n\nassigned_room_type\n0\n1\n1\n1\n0\n10\n0\n\n\ndeposit_type\n0\n1\n10\n10\n0\n3\n0\n\n\nagent\n0\n1\n1\n4\n0\n315\n0\n\n\ncompany\n0\n1\n1\n4\n0\n332\n0\n\n\ncustomer_type\n0\n1\n5\n15\n0\n4\n0\n\n\nrequired_car_parking_spaces\n0\n1\n4\n7\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nlead_time\n0\n1\n79.98\n91.11\n0.00\n9.0\n45.0\n124\n737\n▇▂▁▁▁\n\n\narrival_date_year\n0\n1\n2016.15\n0.70\n2015.00\n2016.0\n2016.0\n2017\n2017\n▃▁▇▁▆\n\n\narrival_date_week_number\n0\n1\n27.08\n13.90\n1.00\n16.0\n28.0\n38\n53\n▆▇▇▇▆\n\n\narrival_date_day_of_month\n0\n1\n15.84\n8.78\n1.00\n8.0\n16.0\n23\n31\n▇▇▇▇▆\n\n\nstays_in_weekend_nights\n0\n1\n0.93\n0.99\n0.00\n0.0\n1.0\n2\n19\n▇▁▁▁▁\n\n\nstays_in_week_nights\n0\n1\n2.46\n1.92\n0.00\n1.0\n2.0\n3\n50\n▇▁▁▁▁\n\n\nadults\n0\n1\n1.83\n0.51\n0.00\n2.0\n2.0\n2\n4\n▁▂▇▁▁\n\n\nis_repeated_guest\n0\n1\n0.04\n0.20\n0.00\n0.0\n0.0\n0\n1\n▇▁▁▁▁\n\n\nprevious_cancellations\n0\n1\n0.02\n0.27\n0.00\n0.0\n0.0\n0\n13\n▇▁▁▁▁\n\n\nprevious_bookings_not_canceled\n0\n1\n0.20\n1.81\n0.00\n0.0\n0.0\n0\n72\n▇▁▁▁▁\n\n\nbooking_changes\n0\n1\n0.29\n0.74\n0.00\n0.0\n0.0\n0\n21\n▇▁▁▁▁\n\n\ndays_in_waiting_list\n0\n1\n1.59\n14.78\n0.00\n0.0\n0.0\n0\n379\n▇▁▁▁▁\n\n\nadr\n0\n1\n99.99\n49.21\n-6.38\n67.5\n92.5\n125\n510\n▇▆▁▁▁\n\n\ntotal_of_special_requests\n0\n1\n0.71\n0.83\n0.00\n0.0\n1.0\n1\n5\n▇▁▁▁▁\n\n\n\n\n\n\n\nCode\nhotel_stays %&gt;%\n  mutate(arrival_date_month = factor(arrival_date_month,\n    levels = month.name\n  )) %&gt;%\n  count(hotel, arrival_date_month, children) %&gt;%\n  group_by(hotel, children) %&gt;%\n  mutate(proportion = n / sum(n)) %&gt;%\n  ggplot(aes(arrival_date_month, proportion, fill = children)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  facet_wrap(~hotel, nrow = 2) +\n  labs(\n    x = NULL,\n    y = \"Proportion of hotel stays\",\n    fill = NULL\n  )",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#data-split",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#data-split",
    "title": "Level 2 classification Tidy Modeling",
    "section": "2.3 data split",
    "text": "2.3 data split\n\n\nPrepare & Split Data\nhotels_df &lt;- hotel_stays %&gt;%\n  select(\n    children, hotel, arrival_date_month, meal, adr, adults,\n    required_car_parking_spaces, total_of_special_requests,\n    stays_in_week_nights, stays_in_weekend_nights\n  ) %&gt;%\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=children)%&gt;% sample_n(50000)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=hotels_df, prop = c(0.7,0.2))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 35000    10\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 5000   10\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 10000    10",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#recipe",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#recipe",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\nbecasue the target class is not balance so using downsample\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  step_downsample(target_variable) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#prep-the-recipe",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#prep-the-recipe",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.2 prep the recipe",
    "text": "3.2 prep the recipe\n\n\nCode\ndata_rec=data_rec %&gt;% prep()\n\n\n\n\nCode\ndata_rec",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#bake-the-train-data-with-preded-recipe",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#bake-the-train-data-with-preded-recipe",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.3 bake the train data with preded recipe",
    "text": "3.3 bake the train data with preded recipe\n\n\nCode\ntrain_proc &lt;- bake(data_rec, new_data = data_train)\n\n\n\n\nCode\ntrain_proc2 &lt;- bake(data_rec, new_data = NULL)\n\n\n\n\nCode\ntrain_juice &lt;-juice(data_rec)\n\n\nthe difference between train_proc and train_juice is that the train_juice is been down sample.\n\n\nCode\ndim(train_proc)\n\n\n[1] 35000    23\n\n\n\n\nCode\ndim(train_proc2)\n\n\n[1] 5694   23\n\n\n\n\nCode\ndim(train_juice)\n\n\n[1] 5694   23\n\n\n\n\nCode\ntrain_proc %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children         2847\n2 none            32153\n\n\nthe juice and train_proc2 target is down sample to 1:1\n\n\nCode\ntrain_proc2 %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children         2847\n2 none             2847\n\n\n\n\nCode\ntrain_juice %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children         2847\n2 none             2847",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#bake-the-test-data-with-preded-recipe",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#bake-the-test-data-with-preded-recipe",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.4 bake the test data with preded recipe",
    "text": "3.4 bake the test data with preded recipe\n\n\nCode\ntest_proc &lt;- bake(data_rec, new_data = data_test)\n\n\n\n\nCode\nvalid_proc &lt;- bake(data_rec, new_data = data_valid)\n\n\njuice(pre_recipe,data=NULL) is same as bake(pre_recipe,data=hotel_train) for training data (excepted down sample)",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#model",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#model",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.5 model",
    "text": "3.5 model\ntree model\n\n\nCode\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"rpart\") %&gt;%\n  set_mode(\"classification\")\n\n\nKNN model\n\n\nCode\nknn_spec &lt;- nearest_neighbor() %&gt;%\n  set_engine(\"kknn\") %&gt;%\n  set_mode(\"classification\")",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#trainning",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#trainning",
    "title": "Level 2 classification Tidy Modeling",
    "section": "3.6 trainning",
    "text": "3.6 trainning\n\n\nCode\nknn_fit &lt;- knn_spec %&gt;%\n  fit(target_variable ~ ., data = train_juice)\n\nknn_fit\n\n\nparsnip model object\n\n\nCall:\nkknn::train.kknn(formula = target_variable ~ ., data = data,     ks = min_rows(5, data, 5))\n\nType of response variable: nominal\nMinimal misclassification: 0.2774851\nBest kernel: optimal\nBest k: 5\n\n\n\n\nCode\ntree_fit &lt;- tree_spec %&gt;%\n  fit(target_variable ~ ., data = train_juice)\n\ntree_fit\n\n\nparsnip model object\n\nn= 5694 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n1) root 5694 2847 children (0.5000000 0.5000000)  \n  2) adr&gt;=0.3007318 1835  366 children (0.8005450 0.1994550) *\n  3) adr&lt; 0.3007318 3859 1378 none (0.3570873 0.6429127)  \n    6) total_of_special_requests&gt;=0.6566462 817  334 children (0.5911873 0.4088127) *\n    7) total_of_special_requests&lt; 0.6566462 3042  895 none (0.2942143 0.7057857) *",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#evaluate",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#evaluate",
    "title": "Level 2 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\nMake predictions on the testing data\n\n\nCode\npredictions &lt;- predict(tree_fit,test_proc) \n\npredictions_probability &lt;- predict(tree_fit,test_proc,type=\"prob\")\n\n\n\n\nCode\ndata_test_result=cbind(data_test,predictions,predictions_probability) \n\n\n\n\nCode\nconf_mat(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      278 1136\n  none          129 3457\n\n\n\n\nCode\nmetrics(data_test_result, target_variable, .pred_class)\n\n\n# A tibble: 2 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.747\n2 kap      binary         0.205\n\n\n\n\nCode\naccuracy(data_test_result, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.747\n\n\n\n\nCode\nsens(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 sens    binary         0.683\n\n\n\n\nCode\nspec(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 spec    binary         0.753\n\n\nAccuracy = (TN + TP)/(TN+TP+FN+FP) = (Number of correct assessments)/Number of all assessments)\nSensitivity = TP/(TP + FN) = (Number of true positive assessment)/(Number of all positive assessment)\nSpecificity = TN/(TN + FP) = (Number of true negative assessment)/(Number of all negative assessment)\n\n\nCode\nall_metrics &lt;- metric_set(accuracy, sens, spec)\n\nall_metrics(data_test_result, truth = target_variable,estimate = .pred_class)\n\n\n# A tibble: 3 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.747\n2 sens     binary         0.683\n3 spec     binary         0.753\n\n\n\n\nCode\nconf_mat(data_test_result, truth = target_variable,estimate = .pred_class) %&gt;% \n  summary()\n\n\n# A tibble: 13 × 3\n   .metric              .estimator .estimate\n   &lt;chr&gt;                &lt;chr&gt;          &lt;dbl&gt;\n 1 accuracy             binary         0.747\n 2 kap                  binary         0.205\n 3 sens                 binary         0.683\n 4 spec                 binary         0.753\n 5 ppv                  binary         0.197\n 6 npv                  binary         0.964\n 7 mcc                  binary         0.265\n 8 j_index              binary         0.436\n 9 bal_accuracy         binary         0.718\n10 detection_prevalence binary         0.283\n11 precision            binary         0.197\n12 recall               binary         0.683\n13 f_meas               binary         0.305\n\n\n\n\nCode\nroc_auc(data_test_result, truth = target_variable, .pred_children)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 roc_auc binary         0.735\n\n\n\n\nCode\nroc_curve(data_test_result, truth = target_variable, .pred_children) %&gt;% \n  autoplot()",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#save-model",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#save-model",
    "title": "Level 2 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(tree_fit)\n\n\n1.15 MB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(tree_fit)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 2 classification tree hotel model.RDS')",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 2 classification Tidy Modeling.html#make-predication",
    "href": "hote classification model/Level 2 classification Tidy Modeling.html#make-predication",
    "title": "Level 2 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 2 classification tree hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,valid_proc)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 none       \n2 children   \n3 none       \n4 children   \n5 none       \n6 none       \n\n\n\n\nCode\nfinal_prediction_data=cbind(valid_proc,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      546 2299\n  none          253 6902\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.745\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children          799\n2 none             9201\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 children     2845\n2 none         7155\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      546 2299\n  none          253 6902",
    "crumbs": [
      "hote classification model",
      "Level 2 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html",
    "title": "Level 1 classification Tidy Modeling",
    "section": "",
    "text": "Level 1 classification Tidy Modeling: using basic Tidymodel package.",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html#read-data",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html#read-data",
    "title": "Level 1 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\n\n\nCode\nlibrary(tidyverse)\n\nhotels &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n\n\nhotel_stays &lt;- hotels %&gt;%\n  filter(is_canceled == 0) %&gt;%\n  mutate(\n    children = case_when(\n      children + babies &gt; 0 ~ \"children\",\n      TRUE ~ \"none\"\n    ),\n    required_car_parking_spaces = case_when(\n      required_car_parking_spaces &gt; 0 ~ \"parking\",\n      TRUE ~ \"none\"\n    )\n  ) %&gt;%\n  select(-is_canceled, -reservation_status, -babies)",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html#plotting",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html#plotting",
    "title": "Level 1 classification Tidy Modeling",
    "section": "2.2 plotting",
    "text": "2.2 plotting\n\n\nCode\nhotel_stays %&gt;%\n  mutate(arrival_date_month = factor(arrival_date_month,\n    levels = month.name\n  )) %&gt;%\n  count(hotel, arrival_date_month, children) %&gt;%\n  group_by(hotel, children) %&gt;%\n  mutate(proportion = n / sum(n)) %&gt;%\n  ggplot(aes(arrival_date_month, proportion, fill = children)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  facet_wrap(~hotel, nrow = 2) +\n  labs(\n    x = NULL,\n    y = \"Proportion of hotel stays\",\n    fill = NULL\n  )",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html#data-split",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html#data-split",
    "title": "Level 1 classification Tidy Modeling",
    "section": "2.3 data split",
    "text": "2.3 data split\n\n\nPrepare & Split Data\nhotels_df &lt;- hotel_stays %&gt;%\n  select(\n    children, hotel, arrival_date_month, meal, adr, adults,\n    required_car_parking_spaces, total_of_special_requests,\n    stays_in_week_nights, stays_in_weekend_nights\n  ) %&gt;%\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=children) %&gt;% sample_n(10000)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=hotels_df, prop = c(0.7,0.2))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 7000   10\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 1000   10\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 2000   10",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html#recipe",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html#recipe",
    "title": "Level 1 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\ndid not use recipe at this case",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html#model",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html#model",
    "title": "Level 1 classification Tidy Modeling",
    "section": "3.2 model",
    "text": "3.2 model\ndecision tree model\n\n\nCode\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"rpart\") %&gt;%\n  set_mode(\"classification\")\n\n\nKNN model\n\n\nCode\nknn_spec &lt;- nearest_neighbor() %&gt;%\n  set_engine(\"kknn\") %&gt;%\n  set_mode(\"classification\")",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html#trainning",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html#trainning",
    "title": "Level 1 classification Tidy Modeling",
    "section": "3.3 trainning",
    "text": "3.3 trainning\n\n\nCode\nknn_fit &lt;- knn_spec %&gt;%\n  fit(target_variable ~ ., data = data_train)\n\nknn_fit\n\n\nparsnip model object\n\n\nCall:\nkknn::train.kknn(formula = target_variable ~ ., data = data,     ks = min_rows(5, data, 5))\n\nType of response variable: nominal\nMinimal misclassification: 0.08085714\nBest kernel: optimal\nBest k: 5\n\n\n\n\nCode\ntree_fit &lt;- tree_spec %&gt;%\n  fit(target_variable ~ ., data = data_train)\n\ntree_fit\n\n\nparsnip model object\n\nn= 7000 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n 1) root 7000 557 none (0.07957143 0.92042857)  \n   2) adr&gt;=173.175 553 198 none (0.35804702 0.64195298)  \n     4) arrival_date_month=April,December,February,January,July,June,March,November,October 261 121 none (0.46360153 0.53639847)  \n       8) hotel=City Hotel 153  64 children (0.58169935 0.41830065)  \n        16) adults&lt; 2.5 107  27 children (0.74766355 0.25233645) *\n        17) adults&gt;=2.5 46   9 none (0.19565217 0.80434783) *\n       9) hotel=Resort Hotel 108  32 none (0.29629630 0.70370370) *\n     5) arrival_date_month=August,May,September 292  77 none (0.26369863 0.73630137) *\n   3) adr&lt; 173.175 6447 359 none (0.05568481 0.94431519)  \n     6) adults&lt; 0.5 32  13 children (0.59375000 0.40625000)  \n      12) adr&gt;=3 22   3 children (0.86363636 0.13636364) *\n      13) adr&lt; 3 10   0 none (0.00000000 1.00000000) *\n     7) adults&gt;=0.5 6415 340 none (0.05300078 0.94699922) *",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html#evaluate",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html#evaluate",
    "title": "Level 1 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\nMake predictions on the testing data\n\n\nCode\npredictions &lt;- predict(tree_fit,data_test) \n\npredictions_probability &lt;- predict(tree_fit,data_test,type=\"prob\")\n\n\n\n\nCode\ndata_test_result=cbind(data_test,predictions,predictions_probability) \n\n\n\n\nCode\nconf_mat(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children        8    4\n  none           59  929\n\n\n\n\nCode\nmetrics(data_test_result, target_variable, .pred_class)\n\n\n# A tibble: 2 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.937\n2 kap      binary         0.186\n\n\n\n\nCode\naccuracy(data_test_result, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.937\n\n\n\n\nCode\nsens(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 sens    binary         0.119\n\n\n\n\nCode\nspec(data_test_result, truth = target_variable,\n    estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 spec    binary         0.996\n\n\n\n\nCode\nall_metrics &lt;- metric_set(accuracy, sens, spec)\n\nall_metrics(data_test_result, truth = target_variable,estimate = .pred_class)\n\n\n# A tibble: 3 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.937\n2 sens     binary         0.119\n3 spec     binary         0.996\n\n\n\n\nCode\nconf_mat(data_test_result, truth = target_variable,estimate = .pred_class) %&gt;% \n  summary()\n\n\n# A tibble: 13 × 3\n   .metric              .estimator .estimate\n   &lt;chr&gt;                &lt;chr&gt;          &lt;dbl&gt;\n 1 accuracy             binary         0.937\n 2 kap                  binary         0.186\n 3 sens                 binary         0.119\n 4 spec                 binary         0.996\n 5 ppv                  binary         0.667\n 6 npv                  binary         0.940\n 7 mcc                  binary         0.264\n 8 j_index              binary         0.115\n 9 bal_accuracy         binary         0.558\n10 detection_prevalence binary         0.012\n11 precision            binary         0.667\n12 recall               binary         0.119\n13 f_meas               binary         0.203\n\n\nROC:receiver operating characteristic curve\n\n\nCode\nroc_curve(data_test_result, truth = target_variable, .pred_children) %&gt;% \n  autoplot()\n\n\n\n\n\n\n\n\n\nAUC:Area under ROC Curve\n\n\nCode\nroc_auc(data_test_result, truth = target_variable, .pred_children)\n\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 roc_auc binary         0.649",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html#save-model",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html#save-model",
    "title": "Level 1 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(tree_fit)\n\n\n546.30 kB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(tree_fit)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 1 classification tree hotel model.RDS')",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 1 classification Tidy Modeling.html#make-predication",
    "href": "hote classification model/Level 1 classification Tidy Modeling.html#make-predication",
    "title": "Level 1 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 1 classification tree hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,data_valid)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 none       \n2 none       \n3 none       \n4 none       \n5 children   \n6 none",
    "crumbs": [
      "hote classification model",
      "Level 1 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html",
    "title": "Level 3 classification Tidy Modeling",
    "section": "",
    "text": "Level 3 classification Tidy Modeling:",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#read-data",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#read-data",
    "title": "Level 3 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\n\n\nCode\nlibrary(tidyverse)\n\nhotels &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n\n\nhotel_stays &lt;- hotels %&gt;%\n  filter(is_canceled == 0) %&gt;%\n  mutate(\n    children = case_when(\n      children + babies &gt; 0 ~ \"children\",\n      TRUE ~ \"none\"\n    ),\n    required_car_parking_spaces = case_when(\n      required_car_parking_spaces &gt; 0 ~ \"parking\",\n      TRUE ~ \"none\"\n    )\n  ) %&gt;%\n  select(-is_canceled, -reservation_status, -babies)",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#plotting-and-eda",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#plotting-and-eda",
    "title": "Level 3 classification Tidy Modeling",
    "section": "2.2 plotting and EDA",
    "text": "2.2 plotting and EDA\n\n\nCode\nhotel_stays %&gt;%\n  count(children)\n\n\n# A tibble: 2 × 2\n  children     n\n  &lt;chr&gt;    &lt;int&gt;\n1 children  6073\n2 none     69093\n\n\n\n\nCode\nlibrary(skimr)\n\nskim(hotel_stays)\n\n\n\nData summary\n\n\nName\nhotel_stays\n\n\nNumber of rows\n75166\n\n\nNumber of columns\n29\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nDate\n1\n\n\ncharacter\n14\n\n\nnumeric\n14\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nreservation_status_date\n0\n1\n2015-07-01\n2017-09-14\n2016-09-01\n805\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nhotel\n0\n1\n10\n12\n0\n2\n0\n\n\narrival_date_month\n0\n1\n3\n9\n0\n12\n0\n\n\nchildren\n0\n1\n4\n8\n0\n2\n0\n\n\nmeal\n0\n1\n2\n9\n0\n5\n0\n\n\ncountry\n0\n1\n2\n4\n0\n166\n0\n\n\nmarket_segment\n0\n1\n6\n13\n0\n7\n0\n\n\ndistribution_channel\n0\n1\n3\n9\n0\n5\n0\n\n\nreserved_room_type\n0\n1\n1\n1\n0\n9\n0\n\n\nassigned_room_type\n0\n1\n1\n1\n0\n10\n0\n\n\ndeposit_type\n0\n1\n10\n10\n0\n3\n0\n\n\nagent\n0\n1\n1\n4\n0\n315\n0\n\n\ncompany\n0\n1\n1\n4\n0\n332\n0\n\n\ncustomer_type\n0\n1\n5\n15\n0\n4\n0\n\n\nrequired_car_parking_spaces\n0\n1\n4\n7\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nlead_time\n0\n1\n79.98\n91.11\n0.00\n9.0\n45.0\n124\n737\n▇▂▁▁▁\n\n\narrival_date_year\n0\n1\n2016.15\n0.70\n2015.00\n2016.0\n2016.0\n2017\n2017\n▃▁▇▁▆\n\n\narrival_date_week_number\n0\n1\n27.08\n13.90\n1.00\n16.0\n28.0\n38\n53\n▆▇▇▇▆\n\n\narrival_date_day_of_month\n0\n1\n15.84\n8.78\n1.00\n8.0\n16.0\n23\n31\n▇▇▇▇▆\n\n\nstays_in_weekend_nights\n0\n1\n0.93\n0.99\n0.00\n0.0\n1.0\n2\n19\n▇▁▁▁▁\n\n\nstays_in_week_nights\n0\n1\n2.46\n1.92\n0.00\n1.0\n2.0\n3\n50\n▇▁▁▁▁\n\n\nadults\n0\n1\n1.83\n0.51\n0.00\n2.0\n2.0\n2\n4\n▁▂▇▁▁\n\n\nis_repeated_guest\n0\n1\n0.04\n0.20\n0.00\n0.0\n0.0\n0\n1\n▇▁▁▁▁\n\n\nprevious_cancellations\n0\n1\n0.02\n0.27\n0.00\n0.0\n0.0\n0\n13\n▇▁▁▁▁\n\n\nprevious_bookings_not_canceled\n0\n1\n0.20\n1.81\n0.00\n0.0\n0.0\n0\n72\n▇▁▁▁▁\n\n\nbooking_changes\n0\n1\n0.29\n0.74\n0.00\n0.0\n0.0\n0\n21\n▇▁▁▁▁\n\n\ndays_in_waiting_list\n0\n1\n1.59\n14.78\n0.00\n0.0\n0.0\n0\n379\n▇▁▁▁▁\n\n\nadr\n0\n1\n99.99\n49.21\n-6.38\n67.5\n92.5\n125\n510\n▇▆▁▁▁\n\n\ntotal_of_special_requests\n0\n1\n0.71\n0.83\n0.00\n0.0\n1.0\n1\n5\n▇▁▁▁▁\n\n\n\n\n\n\n\nCode\nhotel_stays %&gt;%\n  mutate(arrival_date_month = factor(arrival_date_month,\n    levels = month.name\n  )) %&gt;%\n  count(hotel, arrival_date_month, children) %&gt;%\n  group_by(hotel, children) %&gt;%\n  mutate(proportion = n / sum(n)) %&gt;%\n  ggplot(aes(arrival_date_month, proportion, fill = children)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  facet_wrap(~hotel, nrow = 2) +\n  labs(\n    x = NULL,\n    y = \"Proportion of hotel stays\",\n    fill = NULL\n  )",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#data-split",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#data-split",
    "title": "Level 3 classification Tidy Modeling",
    "section": "2.3 data split",
    "text": "2.3 data split\n\n\nPrepare & Split Data\nhotels_df &lt;- hotel_stays %&gt;%\n  select(\n    children, hotel, arrival_date_month, meal, adr, adults,\n    required_car_parking_spaces, total_of_special_requests,\n    stays_in_week_nights, stays_in_weekend_nights\n  ) %&gt;%\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=children) %&gt;% sample_n(50000)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=hotels_df, prop = c(0.7,0.2))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 35000    10\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 5000   10\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 10000    10",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#recipe",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#recipe",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\nbecasue the target class is not balance so using downsample\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  step_downsample(target_variable) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#prep-the-recipe",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#prep-the-recipe",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.2 prep the recipe",
    "text": "3.2 prep the recipe\n\n\nCode\ndata_rec=data_rec %&gt;% prep()\n\n\n\n\nCode\ndata_rec",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#bake-the-train-data-with-preded-recipe",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#bake-the-train-data-with-preded-recipe",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.3 bake the train data with preded recipe",
    "text": "3.3 bake the train data with preded recipe\n\n\nCode\ntrain_proc &lt;- bake(data_rec, new_data = data_train)\n\n\n\n\nCode\ntrain_proc2 &lt;- bake(data_rec, new_data = NULL)\n\n\n\n\nCode\ntrain_juice &lt;-juice(data_rec)\n\n\nthe difference between train_proc and train_juice is that the train_juice is been down sample.\n\n\nCode\ndim(train_proc)\n\n\n[1] 35000    23\n\n\n\n\nCode\ndim(train_proc2)\n\n\n[1] 5716   23\n\n\n\n\nCode\ndim(train_juice)\n\n\n[1] 5716   23\n\n\n\n\nCode\ntrain_proc %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children         2858\n2 none            32142\n\n\nthe juice and train_proc2 target is down sample to 1:1\n\n\nCode\ntrain_proc2 %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children         2858\n2 none             2858\n\n\n\n\nCode\ntrain_juice %&gt;%\n  count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children         2858\n2 none             2858",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#bake-the-test-data-with-preded-recipe",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#bake-the-test-data-with-preded-recipe",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.4 bake the test data with preded recipe",
    "text": "3.4 bake the test data with preded recipe\n\n\nCode\ntest_proc &lt;- bake(data_rec, new_data = data_test)\n\n\n\n\nCode\ntest_proc %&gt;%count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children          420\n2 none             4580\n\n\n\n\nCode\ndata_valid %&gt;%count(target_variable)\n\n\n# A tibble: 2 × 2\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children          812\n2 none             9188\n\n\n\n\nCode\nvalid_proc &lt;- bake(data_rec, new_data = data_valid)\n\n\njuice(pre_recipe,data=NULL) is same as bake(pre_recipe,data=hotel_train) for training data (excepted down sample)",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#model",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#model",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.5 model",
    "text": "3.5 model\ntree model\n\n\nCode\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"rpart\") %&gt;%\n  set_mode(\"classification\")\n\n\nKNN model\n\n\nCode\nknn_spec &lt;- nearest_neighbor() %&gt;%\n  set_engine(\"kknn\") %&gt;%\n  set_mode(\"classification\")",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#trainning",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#trainning",
    "title": "Level 3 classification Tidy Modeling",
    "section": "3.6 trainning",
    "text": "3.6 trainning\n\n\nCode\nknn_fit &lt;- knn_spec %&gt;%\n  fit(target_variable ~ ., data = train_juice)\n\nknn_fit\n\n\nparsnip model object\n\n\nCall:\nkknn::train.kknn(formula = target_variable ~ ., data = data,     ks = min_rows(5, data, 5))\n\nType of response variable: nominal\nMinimal misclassification: 0.2687194\nBest kernel: optimal\nBest k: 5\n\n\n\n\nCode\ntree_fit &lt;- tree_spec %&gt;%\n  fit(target_variable ~ ., data = train_juice)\n\ntree_fit\n\n\nparsnip model object\n\nn= 5716 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n1) root 5716 2858 children (0.5000000 0.5000000)  \n  2) adr&gt;=0.27695 1921  383 children (0.8006247 0.1993753) *\n  3) adr&lt; 0.27695 3795 1320 none (0.3478261 0.6521739)  \n    6) total_of_special_requests&gt;=0.6497175 786  336 children (0.5725191 0.4274809) *\n    7) total_of_special_requests&lt; 0.6497175 3009  870 none (0.2891326 0.7108674) *",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#evaluate",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#evaluate",
    "title": "Level 3 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\n\n\nCode\n#mc_cv default is 25\nset.seed(1234)\nvalidation_splits &lt;- mc_cv(train_juice, prop = 0.9, strata = target_variable\n                           #,times=3\n                           )\nvalidation_splits\n\n\n# Monte Carlo cross-validation (0.9/0.1) with 25 resamples  using stratification \n# A tibble: 25 × 2\n   splits             id        \n   &lt;list&gt;             &lt;chr&gt;     \n 1 &lt;split [5144/572]&gt; Resample01\n 2 &lt;split [5144/572]&gt; Resample02\n 3 &lt;split [5144/572]&gt; Resample03\n 4 &lt;split [5144/572]&gt; Resample04\n 5 &lt;split [5144/572]&gt; Resample05\n 6 &lt;split [5144/572]&gt; Resample06\n 7 &lt;split [5144/572]&gt; Resample07\n 8 &lt;split [5144/572]&gt; Resample08\n 9 &lt;split [5144/572]&gt; Resample09\n10 &lt;split [5144/572]&gt; Resample10\n# ℹ 15 more rows\n\n\nKKN:\n\n\nCode\nknn_res &lt;- knn_spec %&gt;% fit_resamples(\n  target_variable ~ .,\n  validation_splits,\n  control = control_resamples(save_pred = TRUE)\n)\n\nknn_res %&gt;%collect_metrics()\n\n\n# A tibble: 2 × 6\n  .metric  .estimator  mean     n std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary     0.728    25 0.00333 Preprocessor1_Model1\n2 roc_auc  binary     0.792    25 0.00331 Preprocessor1_Model1\n\n\nTree model:\n\n\nCode\ntree_res &lt;- tree_spec %&gt;% fit_resamples(\n  target_variable ~ .,\n  validation_splits,\n  control = control_resamples(save_pred = TRUE)\n)\n\ntree_res %&gt;%collect_metrics()\n\n\n# A tibble: 2 × 6\n  .metric  .estimator  mean     n std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary     0.722    25 0.00303 Preprocessor1_Model1\n2 roc_auc  binary     0.744    25 0.00354 Preprocessor1_Model1\n\n\n\n\nCode\nknn_res %&gt;%\n  unnest(.predictions) %&gt;%\n  mutate(model = \"kknn\") %&gt;%\n  bind_rows(tree_res %&gt;%\n    unnest(.predictions) %&gt;%\n    mutate(model = \"rpart\")) %&gt;%\n  group_by(model) %&gt;%\n  roc_curve(target_variable, .pred_children) %&gt;%\n  ggplot(aes(x = 1 - specificity, y = sensitivity, color = model)) +\n  geom_line(size = 1.5) +\n  geom_abline(\n    lty = 2, alpha = 0.5,\n    color = \"gray50\",\n    size = 1.2\n  )",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#save-model",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#save-model",
    "title": "Level 3 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(tree_fit)\n\n\n1.15 MB\n\n\nCode\nobj_size(knn_fit)\n\n\n1.10 MB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(knn_fit)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 2 classification KNN hotel model.RDS')",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 3 classification Tidy Modeling.html#make-predication",
    "href": "hote classification model/Level 3 classification Tidy Modeling.html#make-predication",
    "title": "Level 3 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 2 classification KNN hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,valid_proc)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 none       \n2 children   \n3 none       \n4 children   \n5 children   \n6 none       \n\n\n\n\nCode\nfinal_prediction_data=cbind(valid_proc,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      581 2333\n  none          231 6855\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.744\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children          812\n2 none             9188\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 children     2914\n2 none         7086\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      581 2333\n  none          231 6855",
    "crumbs": [
      "hote classification model",
      "Level 3 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 0 classification Tidy Modeling.html",
    "href": "hote classification model/Level 0 classification Tidy Modeling.html",
    "title": "Level 0 classification Tidy Modeling",
    "section": "",
    "text": "data download from github\n\n\nCode\nlibrary(tidyverse)\n\nhotels &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n\n\nData have 119390 record and 32 variable\n\n\nCode\nglimpse(hotels)\n\n\nRows: 119,390\nColumns: 32\n$ hotel                          &lt;chr&gt; \"Resort Hotel\", \"Resort Hotel\", \"Resort…\n$ is_canceled                    &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, …\n$ lead_time                      &lt;dbl&gt; 342, 737, 7, 13, 14, 14, 0, 9, 85, 75, …\n$ arrival_date_year              &lt;dbl&gt; 2015, 2015, 2015, 2015, 2015, 2015, 201…\n$ arrival_date_month             &lt;chr&gt; \"July\", \"July\", \"July\", \"July\", \"July\",…\n$ arrival_date_week_number       &lt;dbl&gt; 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,…\n$ arrival_date_day_of_month      &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ stays_in_weekend_nights        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ stays_in_week_nights           &lt;dbl&gt; 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, …\n$ adults                         &lt;dbl&gt; 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ children                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ babies                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ meal                           &lt;chr&gt; \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB…\n$ country                        &lt;chr&gt; \"PRT\", \"PRT\", \"GBR\", \"GBR\", \"GBR\", \"GBR…\n$ market_segment                 &lt;chr&gt; \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ distribution_channel           &lt;chr&gt; \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ is_repeated_guest              &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_cancellations         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_bookings_not_canceled &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ reserved_room_type             &lt;chr&gt; \"C\", \"C\", \"A\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ assigned_room_type             &lt;chr&gt; \"C\", \"C\", \"C\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ booking_changes                &lt;dbl&gt; 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ deposit_type                   &lt;chr&gt; \"No Deposit\", \"No Deposit\", \"No Deposit…\n$ agent                          &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"304\", \"240\", \"…\n$ company                        &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n$ days_in_waiting_list           &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ customer_type                  &lt;chr&gt; \"Transient\", \"Transient\", \"Transient\", …\n$ adr                            &lt;dbl&gt; 0.00, 0.00, 75.00, 75.00, 98.00, 98.00,…\n$ required_car_parking_spaces    &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ total_of_special_requests      &lt;dbl&gt; 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 3, …\n$ reservation_status             &lt;chr&gt; \"Check-Out\", \"Check-Out\", \"Check-Out\", …\n$ reservation_status_date        &lt;date&gt; 2015-07-01, 2015-07-01, 2015-07-02, 20…\n\n\n\n\nCode\nhotels %&gt;% group_by(children) %&gt;% count()\n\n\n# A tibble: 6 × 2\n# Groups:   children [6]\n  children      n\n     &lt;dbl&gt;  &lt;int&gt;\n1        0 110796\n2        1   4861\n3        2   3652\n4        3     76\n5       10      1\n6       NA      4\n\n\n\n\n\nAccuracy=TP+TN+FP+FN\nPrecision — Out of all the examples that predicted as positive, how many are really positive?\n\nPrecision=TP/(TP+FP)\n\nRecall/Sensitivity(True Positive rate) — Out of all the positive examples, how many are predicted as positive?\n\nRecall=TP/(TP+FN)\n\nSpecificity(True Negative rate)— Out of all the people that do not have the disease, how many got negative results?\nFalse Negative Rate tells us what proportion of the positive class got incorrectly classified by the classifier\n\nSpecificity=TN/(TN+FP)\n\nFalse Positive rate=1-Specificity\nFalse Negative Rat=FN/(TP+FN)",
    "crumbs": [
      "hote classification model",
      "Level 0 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 0 classification Tidy Modeling.html#measurement",
    "href": "hote classification model/Level 0 classification Tidy Modeling.html#measurement",
    "title": "Level 0 classification Tidy Modeling",
    "section": "",
    "text": "Accuracy=TP+TN+FP+FN\nPrecision — Out of all the examples that predicted as positive, how many are really positive?\n\nPrecision=TP/(TP+FP)\n\nRecall/Sensitivity(True Positive rate) — Out of all the positive examples, how many are predicted as positive?\n\nRecall=TP/(TP+FN)\n\nSpecificity(True Negative rate)— Out of all the people that do not have the disease, how many got negative results?\nFalse Negative Rate tells us what proportion of the positive class got incorrectly classified by the classifier\n\nSpecificity=TN/(TN+FP)\n\nFalse Positive rate=1-Specificity\nFalse Negative Rat=FN/(TP+FN)",
    "crumbs": [
      "hote classification model",
      "Level 0 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "house price regression model/Level 0 Regression Tidy Modeling.html",
    "href": "house price regression model/Level 0 Regression Tidy Modeling.html",
    "title": "Level 0 Regression Tidy Modeling",
    "section": "",
    "text": "data download form kaggle\n\n\nCode\nlibrary(tidyverse)\ntrain = read_csv(\"data/train.csv\")\n\ntest=read_csv(\"data/test.csv\")\n\n\nData have 1460 record and 81 variable\n\n\nCode\nglimpse(train)\n\n\nRows: 1,460\nColumns: 81\n$ Id            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1…\n$ MSSubClass    &lt;dbl&gt; 60, 20, 60, 70, 60, 50, 20, 60, 50, 190, 20, 60, 20, 20,…\n$ MSZoning      &lt;chr&gt; \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RL\", \"RM\", \"R…\n$ LotFrontage   &lt;dbl&gt; 65, 80, 68, 60, 84, 85, 75, NA, 51, 50, 70, 85, NA, 91, …\n$ LotArea       &lt;dbl&gt; 8450, 9600, 11250, 9550, 14260, 14115, 10084, 10382, 612…\n$ Street        &lt;chr&gt; \"Pave\", \"Pave\", \"Pave\", \"Pave\", \"Pave\", \"Pave\", \"Pave\", …\n$ Alley         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ LotShape      &lt;chr&gt; \"Reg\", \"Reg\", \"IR1\", \"IR1\", \"IR1\", \"IR1\", \"Reg\", \"IR1\", …\n$ LandContour   &lt;chr&gt; \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", \"Lvl\", …\n$ Utilities     &lt;chr&gt; \"AllPub\", \"AllPub\", \"AllPub\", \"AllPub\", \"AllPub\", \"AllPu…\n$ LotConfig     &lt;chr&gt; \"Inside\", \"FR2\", \"Inside\", \"Corner\", \"FR2\", \"Inside\", \"I…\n$ LandSlope     &lt;chr&gt; \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", \"Gtl\", …\n$ Neighborhood  &lt;chr&gt; \"CollgCr\", \"Veenker\", \"CollgCr\", \"Crawfor\", \"NoRidge\", \"…\n$ Condition1    &lt;chr&gt; \"Norm\", \"Feedr\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\",…\n$ Condition2    &lt;chr&gt; \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", \"Norm\", …\n$ BldgType      &lt;chr&gt; \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", \"1Fam\", …\n$ HouseStyle    &lt;chr&gt; \"2Story\", \"1Story\", \"2Story\", \"2Story\", \"2Story\", \"1.5Fi…\n$ OverallQual   &lt;dbl&gt; 7, 6, 7, 7, 8, 5, 8, 7, 7, 5, 5, 9, 5, 7, 6, 7, 6, 4, 5,…\n$ OverallCond   &lt;dbl&gt; 5, 8, 5, 5, 5, 5, 5, 6, 5, 6, 5, 5, 6, 5, 5, 8, 7, 5, 5,…\n$ YearBuilt     &lt;dbl&gt; 2003, 1976, 2001, 1915, 2000, 1993, 2004, 1973, 1931, 19…\n$ YearRemodAdd  &lt;dbl&gt; 2003, 1976, 2002, 1970, 2000, 1995, 2005, 1973, 1950, 19…\n$ RoofStyle     &lt;chr&gt; \"Gable\", \"Gable\", \"Gable\", \"Gable\", \"Gable\", \"Gable\", \"G…\n$ RoofMatl      &lt;chr&gt; \"CompShg\", \"CompShg\", \"CompShg\", \"CompShg\", \"CompShg\", \"…\n$ Exterior1st   &lt;chr&gt; \"VinylSd\", \"MetalSd\", \"VinylSd\", \"Wd Sdng\", \"VinylSd\", \"…\n$ Exterior2nd   &lt;chr&gt; \"VinylSd\", \"MetalSd\", \"VinylSd\", \"Wd Shng\", \"VinylSd\", \"…\n$ MasVnrType    &lt;chr&gt; \"BrkFace\", \"None\", \"BrkFace\", \"None\", \"BrkFace\", \"None\",…\n$ MasVnrArea    &lt;dbl&gt; 196, 0, 162, 0, 350, 0, 186, 240, 0, 0, 0, 286, 0, 306, …\n$ ExterQual     &lt;chr&gt; \"Gd\", \"TA\", \"Gd\", \"TA\", \"Gd\", \"TA\", \"Gd\", \"TA\", \"TA\", \"T…\n$ ExterCond     &lt;chr&gt; \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"T…\n$ Foundation    &lt;chr&gt; \"PConc\", \"CBlock\", \"PConc\", \"BrkTil\", \"PConc\", \"Wood\", \"…\n$ BsmtQual      &lt;chr&gt; \"Gd\", \"Gd\", \"Gd\", \"TA\", \"Gd\", \"Gd\", \"Ex\", \"Gd\", \"TA\", \"T…\n$ BsmtCond      &lt;chr&gt; \"TA\", \"TA\", \"TA\", \"Gd\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"T…\n$ BsmtExposure  &lt;chr&gt; \"No\", \"Gd\", \"Mn\", \"No\", \"Av\", \"No\", \"Av\", \"Mn\", \"No\", \"N…\n$ BsmtFinType1  &lt;chr&gt; \"GLQ\", \"ALQ\", \"GLQ\", \"ALQ\", \"GLQ\", \"GLQ\", \"GLQ\", \"ALQ\", …\n$ BsmtFinSF1    &lt;dbl&gt; 706, 978, 486, 216, 655, 732, 1369, 859, 0, 851, 906, 99…\n$ BsmtFinType2  &lt;chr&gt; \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"Unf\", \"BLQ\", …\n$ BsmtFinSF2    &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ BsmtUnfSF     &lt;dbl&gt; 150, 284, 434, 540, 490, 64, 317, 216, 952, 140, 134, 17…\n$ TotalBsmtSF   &lt;dbl&gt; 856, 1262, 920, 756, 1145, 796, 1686, 1107, 952, 991, 10…\n$ Heating       &lt;chr&gt; \"GasA\", \"GasA\", \"GasA\", \"GasA\", \"GasA\", \"GasA\", \"GasA\", …\n$ HeatingQC     &lt;chr&gt; \"Ex\", \"Ex\", \"Ex\", \"Gd\", \"Ex\", \"Ex\", \"Ex\", \"Ex\", \"Gd\", \"E…\n$ CentralAir    &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ Electrical    &lt;chr&gt; \"SBrkr\", \"SBrkr\", \"SBrkr\", \"SBrkr\", \"SBrkr\", \"SBrkr\", \"S…\n$ `1stFlrSF`    &lt;dbl&gt; 856, 1262, 920, 961, 1145, 796, 1694, 1107, 1022, 1077, …\n$ `2ndFlrSF`    &lt;dbl&gt; 854, 0, 866, 756, 1053, 566, 0, 983, 752, 0, 0, 1142, 0,…\n$ LowQualFinSF  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ GrLivArea     &lt;dbl&gt; 1710, 1262, 1786, 1717, 2198, 1362, 1694, 2090, 1774, 10…\n$ BsmtFullBath  &lt;dbl&gt; 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,…\n$ BsmtHalfBath  &lt;dbl&gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ FullBath      &lt;dbl&gt; 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 3, 1, 2, 1, 1, 1, 2, 1,…\n$ HalfBath      &lt;dbl&gt; 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,…\n$ BedroomAbvGr  &lt;dbl&gt; 3, 3, 3, 3, 4, 1, 3, 3, 2, 2, 3, 4, 2, 3, 2, 2, 2, 2, 3,…\n$ KitchenAbvGr  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1,…\n$ KitchenQual   &lt;chr&gt; \"Gd\", \"TA\", \"Gd\", \"Gd\", \"Gd\", \"TA\", \"Gd\", \"TA\", \"TA\", \"T…\n$ TotRmsAbvGrd  &lt;dbl&gt; 8, 6, 6, 7, 9, 5, 7, 7, 8, 5, 5, 11, 4, 7, 5, 5, 5, 6, 6…\n$ Functional    &lt;chr&gt; \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", \"Typ\", …\n$ Fireplaces    &lt;dbl&gt; 0, 1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 2, 0, 1, 1, 0, 1, 0, 0,…\n$ FireplaceQu   &lt;chr&gt; NA, \"TA\", \"TA\", \"Gd\", \"TA\", NA, \"Gd\", \"TA\", \"TA\", \"TA\", …\n$ GarageType    &lt;chr&gt; \"Attchd\", \"Attchd\", \"Attchd\", \"Detchd\", \"Attchd\", \"Attch…\n$ GarageYrBlt   &lt;dbl&gt; 2003, 1976, 2001, 1998, 2000, 1993, 2004, 1973, 1931, 19…\n$ GarageFinish  &lt;chr&gt; \"RFn\", \"RFn\", \"RFn\", \"Unf\", \"RFn\", \"Unf\", \"RFn\", \"RFn\", …\n$ GarageCars    &lt;dbl&gt; 2, 2, 2, 3, 3, 2, 2, 2, 2, 1, 1, 3, 1, 3, 1, 2, 2, 2, 2,…\n$ GarageArea    &lt;dbl&gt; 548, 460, 608, 642, 836, 480, 636, 484, 468, 205, 384, 7…\n$ GarageQual    &lt;chr&gt; \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"Fa\", \"G…\n$ GarageCond    &lt;chr&gt; \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"TA\", \"T…\n$ PavedDrive    &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"…\n$ WoodDeckSF    &lt;dbl&gt; 0, 298, 0, 0, 192, 40, 255, 235, 90, 0, 0, 147, 140, 160…\n$ OpenPorchSF   &lt;dbl&gt; 61, 0, 42, 35, 84, 30, 57, 204, 0, 4, 0, 21, 0, 33, 213,…\n$ EnclosedPorch &lt;dbl&gt; 0, 0, 0, 272, 0, 0, 0, 228, 205, 0, 0, 0, 0, 0, 176, 0, …\n$ `3SsnPorch`   &lt;dbl&gt; 0, 0, 0, 0, 0, 320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ ScreenPorch   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, …\n$ PoolArea      &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ PoolQC        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ Fence         &lt;chr&gt; NA, NA, NA, NA, NA, \"MnPrv\", NA, NA, NA, NA, NA, NA, NA,…\n$ MiscFeature   &lt;chr&gt; NA, NA, NA, NA, NA, \"Shed\", NA, \"Shed\", NA, NA, NA, NA, …\n$ MiscVal       &lt;dbl&gt; 0, 0, 0, 0, 0, 700, 0, 350, 0, 0, 0, 0, 0, 0, 0, 0, 700,…\n$ MoSold        &lt;dbl&gt; 2, 5, 9, 2, 12, 10, 8, 11, 4, 1, 2, 7, 9, 8, 5, 7, 3, 10…\n$ YrSold        &lt;dbl&gt; 2008, 2007, 2008, 2006, 2008, 2009, 2007, 2009, 2008, 20…\n$ SaleType      &lt;chr&gt; \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"WD\", \"W…\n$ SaleCondition &lt;chr&gt; \"Normal\", \"Normal\", \"Normal\", \"Abnorml\", \"Normal\", \"Norm…\n$ SalePrice     &lt;dbl&gt; 208500, 181500, 223500, 140000, 250000, 143000, 307000, …\n\n\n\n\nCode\noptions(scipen = 999)\nggplot(train, aes(SalePrice)) + \n  geom_histogram()\n\n\n\n\n\n\n\n\n\n\n\n\nMean absolute error (MAE)\n\nThe MAE measures the average magnitude of the errors in a set of forecasts, without considering their direction. It measures accuracy for continuous variables. The equation is given in the library references. Expressed in words, the MAE is the average over the verification sample of the absolute values of the differences between forecast and the corresponding observation. The MAE is a linear score which means that all the individual differences are weighted equally in the average.\n\nRoot Mean Squared Error (RMSE)\n\n\nThe RMSE is a quadratic scoring rule which measures the average magnitude of the error. The equation for the RMSE is given in both of the references. Expressing the formula in words, the difference between forecast and corresponding observed values are each squared and then averaged over the sample. Finally, the square root of the average is taken. Since the errors are squared before they are averaged, the RMSE gives a relatively high weight to large errors. This means the RMSE is most useful when large errors are particularly undesirable.\nBoth the MAE and RMSE can range from 0 to ∞. They are negatively-oriented scores: Lower values are better.",
    "crumbs": [
      "house price regression model",
      "Level 0 Regression Tidy Modeling"
    ]
  },
  {
    "objectID": "house price regression model/Level 0 Regression Tidy Modeling.html#measurement",
    "href": "house price regression model/Level 0 Regression Tidy Modeling.html#measurement",
    "title": "Level 0 Regression Tidy Modeling",
    "section": "",
    "text": "Mean absolute error (MAE)\n\nThe MAE measures the average magnitude of the errors in a set of forecasts, without considering their direction. It measures accuracy for continuous variables. The equation is given in the library references. Expressed in words, the MAE is the average over the verification sample of the absolute values of the differences between forecast and the corresponding observation. The MAE is a linear score which means that all the individual differences are weighted equally in the average.\n\nRoot Mean Squared Error (RMSE)\n\n\nThe RMSE is a quadratic scoring rule which measures the average magnitude of the error. The equation for the RMSE is given in both of the references. Expressing the formula in words, the difference between forecast and corresponding observed values are each squared and then averaged over the sample. Finally, the square root of the average is taken. Since the errors are squared before they are averaged, the RMSE gives a relatively high weight to large errors. This means the RMSE is most useful when large errors are particularly undesirable.\nBoth the MAE and RMSE can range from 0 to ∞. They are negatively-oriented scores: Lower values are better.",
    "crumbs": [
      "house price regression model",
      "Level 0 Regression Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html",
    "title": "Level 4 classification Tidy Modeling",
    "section": "",
    "text": "Level 4 classification Tidy Modeling:",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#read-data",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#read-data",
    "title": "Level 4 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\n\n\nCode\nlibrary(tidyverse)\n\nhotels &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n\n\nhotel_stays &lt;- hotels %&gt;%\n  filter(is_canceled == 0) %&gt;%\n  mutate(\n    children = case_when(\n      children + babies &gt; 0 ~ \"children\",\n      TRUE ~ \"none\"\n    ),\n    required_car_parking_spaces = case_when(\n      required_car_parking_spaces &gt; 0 ~ \"parking\",\n      TRUE ~ \"none\"\n    )\n  ) %&gt;%\n  select(-is_canceled, -reservation_status, -babies)",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#plotting-and-eda",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#plotting-and-eda",
    "title": "Level 4 classification Tidy Modeling",
    "section": "2.2 plotting and EDA",
    "text": "2.2 plotting and EDA\n\n\nCode\nhotel_stays %&gt;%\n  count(children)\n\n\n# A tibble: 2 × 2\n  children     n\n  &lt;chr&gt;    &lt;int&gt;\n1 children  6073\n2 none     69093\n\n\n\n\nCode\nlibrary(skimr)\n\nskim(hotel_stays)\n\n\n\nData summary\n\n\nName\nhotel_stays\n\n\nNumber of rows\n75166\n\n\nNumber of columns\n29\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nDate\n1\n\n\ncharacter\n14\n\n\nnumeric\n14\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nreservation_status_date\n0\n1\n2015-07-01\n2017-09-14\n2016-09-01\n805\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nhotel\n0\n1\n10\n12\n0\n2\n0\n\n\narrival_date_month\n0\n1\n3\n9\n0\n12\n0\n\n\nchildren\n0\n1\n4\n8\n0\n2\n0\n\n\nmeal\n0\n1\n2\n9\n0\n5\n0\n\n\ncountry\n0\n1\n2\n4\n0\n166\n0\n\n\nmarket_segment\n0\n1\n6\n13\n0\n7\n0\n\n\ndistribution_channel\n0\n1\n3\n9\n0\n5\n0\n\n\nreserved_room_type\n0\n1\n1\n1\n0\n9\n0\n\n\nassigned_room_type\n0\n1\n1\n1\n0\n10\n0\n\n\ndeposit_type\n0\n1\n10\n10\n0\n3\n0\n\n\nagent\n0\n1\n1\n4\n0\n315\n0\n\n\ncompany\n0\n1\n1\n4\n0\n332\n0\n\n\ncustomer_type\n0\n1\n5\n15\n0\n4\n0\n\n\nrequired_car_parking_spaces\n0\n1\n4\n7\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nlead_time\n0\n1\n79.98\n91.11\n0.00\n9.0\n45.0\n124\n737\n▇▂▁▁▁\n\n\narrival_date_year\n0\n1\n2016.15\n0.70\n2015.00\n2016.0\n2016.0\n2017\n2017\n▃▁▇▁▆\n\n\narrival_date_week_number\n0\n1\n27.08\n13.90\n1.00\n16.0\n28.0\n38\n53\n▆▇▇▇▆\n\n\narrival_date_day_of_month\n0\n1\n15.84\n8.78\n1.00\n8.0\n16.0\n23\n31\n▇▇▇▇▆\n\n\nstays_in_weekend_nights\n0\n1\n0.93\n0.99\n0.00\n0.0\n1.0\n2\n19\n▇▁▁▁▁\n\n\nstays_in_week_nights\n0\n1\n2.46\n1.92\n0.00\n1.0\n2.0\n3\n50\n▇▁▁▁▁\n\n\nadults\n0\n1\n1.83\n0.51\n0.00\n2.0\n2.0\n2\n4\n▁▂▇▁▁\n\n\nis_repeated_guest\n0\n1\n0.04\n0.20\n0.00\n0.0\n0.0\n0\n1\n▇▁▁▁▁\n\n\nprevious_cancellations\n0\n1\n0.02\n0.27\n0.00\n0.0\n0.0\n0\n13\n▇▁▁▁▁\n\n\nprevious_bookings_not_canceled\n0\n1\n0.20\n1.81\n0.00\n0.0\n0.0\n0\n72\n▇▁▁▁▁\n\n\nbooking_changes\n0\n1\n0.29\n0.74\n0.00\n0.0\n0.0\n0\n21\n▇▁▁▁▁\n\n\ndays_in_waiting_list\n0\n1\n1.59\n14.78\n0.00\n0.0\n0.0\n0\n379\n▇▁▁▁▁\n\n\nadr\n0\n1\n99.99\n49.21\n-6.38\n67.5\n92.5\n125\n510\n▇▆▁▁▁\n\n\ntotal_of_special_requests\n0\n1\n0.71\n0.83\n0.00\n0.0\n1.0\n1\n5\n▇▁▁▁▁\n\n\n\n\n\n\n\nCode\nhotel_stays %&gt;%\n  mutate(arrival_date_month = factor(arrival_date_month,\n    levels = month.name\n  )) %&gt;%\n  count(hotel, arrival_date_month, children) %&gt;%\n  group_by(hotel, children) %&gt;%\n  mutate(proportion = n / sum(n)) %&gt;%\n  ggplot(aes(arrival_date_month, proportion, fill = children)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  facet_wrap(~hotel, nrow = 2) +\n  labs(\n    x = NULL,\n    y = \"Proportion of hotel stays\",\n    fill = NULL\n  )",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#data-split",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#data-split",
    "title": "Level 4 classification Tidy Modeling",
    "section": "2.3 data split",
    "text": "2.3 data split\n\n\nPrepare & Split Data\nall_hotels_df &lt;- hotel_stays %&gt;%\n  select(\n    children, hotel, arrival_date_month, meal, adr, adults,\n    required_car_parking_spaces, total_of_special_requests,\n    stays_in_week_nights, stays_in_weekend_nights\n  ) %&gt;%\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=children) %&gt;% mutate(rownum= row_number())\n\nhotels_df=all_hotels_df%&gt;% sample_n(50000) \n\nhold_hotels_df &lt;- anti_join(all_hotels_df, hotels_df, by='rownum')\n\n\n#all_hotels_df=all_hotels_df %&gt;% select(-rownum)\n#hotels_df=hotels_df %&gt;% select(-rownum)\n#all_hotels_df=all_hotels_df %&gt;% select(-rownum)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=hotels_df, prop = c(0.7,0.2))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 35000    11\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 5000   11\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 10000    11\n\n\n10 fold for tunning\n\n\nCode\nset.seed(234)\nfolds &lt;- vfold_cv(data_train)",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#recipe",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#recipe",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\nbecasue the target class is not balance so using downsample\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  step_rm(rownum) %&gt;% \n  step_downsample(target_variable) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#model",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#model",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.2 model",
    "text": "3.2 model\ntree model with cost_complexity and tree_depth to tune\n\n\nCode\ntune_spec &lt;- \n  decision_tree(\n    cost_complexity = tune(),\n    tree_depth = tune()\n  ) %&gt;% \n  set_engine(\"rpart\") %&gt;% \n  set_mode(\"classification\")\n\n\n\n\nCode\ntune_spec\n\n\nDecision Tree Model Specification (classification)\n\nMain Arguments:\n  cost_complexity = tune()\n  tree_depth = tune()\n\nComputational engine: rpart \n\n\n\n\nCode\ntree_grid &lt;- grid_regular(cost_complexity(),\n                          tree_depth(),\n                          levels = 5)\n\ntree_grid\n\n\n# A tibble: 25 × 2\n   cost_complexity tree_depth\n             &lt;dbl&gt;      &lt;int&gt;\n 1    0.0000000001          1\n 2    0.0000000178          1\n 3    0.00000316            1\n 4    0.000562              1\n 5    0.1                   1\n 6    0.0000000001          4\n 7    0.0000000178          4\n 8    0.00000316            4\n 9    0.000562              4\n10    0.1                   4\n# ℹ 15 more rows\n\n\n\n\nCode\ntree_grid %&gt;% count(tree_depth)\n\n\n# A tibble: 5 × 2\n  tree_depth     n\n       &lt;int&gt; &lt;int&gt;\n1          1     5\n2          4     5\n3          8     5\n4         11     5\n5         15     5",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#workflow",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#workflow",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.3 workflow",
    "text": "3.3 workflow\n\n\nCode\nmodel_workflow =\n  workflow() %&gt;% \n  add_model(tune_spec) %&gt;% \n  add_recipe(data_rec)\n\n\n\n\nCode\ncntl   &lt;- control_grid(save_pred     = TRUE,\n                       save_workflow = TRUE)",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#training-and-tunning",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#training-and-tunning",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.4 training and tunning",
    "text": "3.4 training and tunning\n\n\nCode\ntree_res = model_workflow %&gt;% \n  tune_grid(\n    resamples = folds,\n    grid = tree_grid,\n    control   = cntl\n    )\n\n\n\n\nCode\ntree_res\n\n\n# Tuning results\n# 10-fold cross-validation \n# A tibble: 10 × 5\n   splits               id     .metrics          .notes           .predictions\n   &lt;list&gt;               &lt;chr&gt;  &lt;list&gt;            &lt;list&gt;           &lt;list&gt;      \n 1 &lt;split [31500/3500]&gt; Fold01 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 2 &lt;split [31500/3500]&gt; Fold02 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 3 &lt;split [31500/3500]&gt; Fold03 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 4 &lt;split [31500/3500]&gt; Fold04 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 5 &lt;split [31500/3500]&gt; Fold05 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 6 &lt;split [31500/3500]&gt; Fold06 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 7 &lt;split [31500/3500]&gt; Fold07 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 8 &lt;split [31500/3500]&gt; Fold08 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 9 &lt;split [31500/3500]&gt; Fold09 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n10 &lt;split [31500/3500]&gt; Fold10 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n\n\n\n\nCode\ntree_res %&gt;% \n  collect_metrics()\n\n\n# A tibble: 50 × 8\n   cost_complexity tree_depth .metric  .estimator  mean     n std_err .config   \n             &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;     \n 1    0.0000000001          1 accuracy binary     0.800    10 0.0142  Preproces…\n 2    0.0000000001          1 roc_auc  binary     0.695    10 0.00329 Preproces…\n 3    0.0000000178          1 accuracy binary     0.800    10 0.0142  Preproces…\n 4    0.0000000178          1 roc_auc  binary     0.695    10 0.00329 Preproces…\n 5    0.00000316            1 accuracy binary     0.800    10 0.0142  Preproces…\n 6    0.00000316            1 roc_auc  binary     0.695    10 0.00329 Preproces…\n 7    0.000562              1 accuracy binary     0.800    10 0.0142  Preproces…\n 8    0.000562              1 roc_auc  binary     0.695    10 0.00329 Preproces…\n 9    0.1                   1 accuracy binary     0.800    10 0.0142  Preproces…\n10    0.1                   1 roc_auc  binary     0.695    10 0.00329 Preproces…\n# ℹ 40 more rows\n\n\n\n\nCode\ntree_res %&gt;%\n  collect_metrics() %&gt;%\n  mutate(tree_depth = factor(tree_depth)) %&gt;%\n  ggplot(aes(cost_complexity, mean, color = tree_depth)) +\n  geom_line(size = 1.5, alpha = 0.6) +\n  geom_point(size = 2) +\n  facet_wrap(~ .metric, scales = \"free\", nrow = 2) +\n  scale_x_log10(labels = scales::label_number()) +\n  scale_color_viridis_d(option = \"plasma\", begin = .9, end = 0)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntree_res %&gt;%\n  show_best(\"accuracy\")\n\n\n# A tibble: 5 × 8\n  cost_complexity tree_depth .metric  .estimator  mean     n std_err .config    \n            &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;      \n1    0.0000000001          1 accuracy binary     0.800    10  0.0142 Preprocess…\n2    0.0000000178          1 accuracy binary     0.800    10  0.0142 Preprocess…\n3    0.00000316            1 accuracy binary     0.800    10  0.0142 Preprocess…\n4    0.000562              1 accuracy binary     0.800    10  0.0142 Preprocess…\n5    0.1                   1 accuracy binary     0.800    10  0.0142 Preprocess…\n\n\n\n\nCode\nbest_tree &lt;- tree_res %&gt;%\n  select_best(\"accuracy\")\n\nbest_tree\n\n\n# A tibble: 1 × 3\n  cost_complexity tree_depth .config              \n            &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;                \n1    0.0000000001          1 Preprocessor1_Model01\n\n\n\n\nCode\nfinal_wf &lt;- \n  model_workflow %&gt;% \n  finalize_workflow(best_tree)\n\n\nfinal_wf\n\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_rm()\n• step_downsample()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nDecision Tree Model Specification (classification)\n\nMain Arguments:\n  cost_complexity = 1e-10\n  tree_depth = 1\n\nComputational engine: rpart",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#last-fit",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#last-fit",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.5 last fit",
    "text": "3.5 last fit\n\n\nCode\nfinal_fit &lt;- \n  final_wf %&gt;%\n  last_fit(data_split)",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#evaluate",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#evaluate",
    "title": "Level 4 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\n\n\nCode\nfinal_fit %&gt;%\n  collect_metrics()\n\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.836 Preprocessor1_Model1\n2 roc_auc  binary         0.698 Preprocessor1_Model1\n\n\n\n\nCode\nfinal_fit %&gt;%\n  collect_predictions() %&gt;% \n  roc_curve(target_variable, .pred_children) %&gt;% \n  autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nfinal_tree &lt;- extract_workflow(final_fit)\nfinal_tree\n\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_rm()\n• step_downsample()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nn= 5632 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n1) root 5632 2816 children (0.5000000 0.5000000)  \n  2) adr&gt;=0.2929481 1847  390 children (0.7888468 0.2111532) *\n  3) adr&lt; 0.2929481 3785 1359 none (0.3590489 0.6409511) *\n\n\n\n\nCode\nlibrary(vip)\n\nfinal_tree %&gt;% \n  extract_fit_parsnip() %&gt;% \n  vip()",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#save-model",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#save-model",
    "title": "Level 4 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(final_tree)\n\n\n3.46 MB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(final_tree)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 4 classification decision tree hotel model.RDS')",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 4 classification Tidy Modeling.html#make-predication",
    "href": "hote classification model/Level 4 classification Tidy Modeling.html#make-predication",
    "title": "Level 4 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 4 classification decision tree hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,data_valid)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 none       \n2 children   \n3 none       \n4 none       \n5 none       \n6 none       \n\n\n\n\nCode\nfinal_prediction_data=cbind(data_valid,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      425 1246\n  none          394 7935\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.836\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children          819\n2 none             9181\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 children     1671\n2 none         8329\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      425 1246\n  none          394 7935",
    "crumbs": [
      "hote classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html",
    "title": "Level 5 classification Tidy Modeling",
    "section": "",
    "text": "Level 5 classification Tidy Modeling:",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#read-data",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#read-data",
    "title": "Level 5 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\n\n\nCode\nlibrary(tidyverse)\n\nhotels &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n\n\nhotel_stays &lt;- hotels %&gt;%\n  filter(is_canceled == 0) %&gt;%\n  mutate(\n    children = case_when(\n      children + babies &gt; 0 ~ \"children\",\n      TRUE ~ \"none\"\n    ),\n    required_car_parking_spaces = case_when(\n      required_car_parking_spaces &gt; 0 ~ \"parking\",\n      TRUE ~ \"none\"\n    )\n  ) %&gt;%\n  select(-is_canceled, -reservation_status, -babies)",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#plotting-and-eda",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#plotting-and-eda",
    "title": "Level 5 classification Tidy Modeling",
    "section": "2.2 plotting and EDA",
    "text": "2.2 plotting and EDA\n\n\nCode\nhotel_stays %&gt;%\n  count(children)\n\n\n# A tibble: 2 × 2\n  children     n\n  &lt;chr&gt;    &lt;int&gt;\n1 children  6073\n2 none     69093\n\n\n\n\nCode\nlibrary(skimr)\n\nskim(hotel_stays)\n\n\n\nData summary\n\n\nName\nhotel_stays\n\n\nNumber of rows\n75166\n\n\nNumber of columns\n29\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nDate\n1\n\n\ncharacter\n14\n\n\nnumeric\n14\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nreservation_status_date\n0\n1\n2015-07-01\n2017-09-14\n2016-09-01\n805\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nhotel\n0\n1\n10\n12\n0\n2\n0\n\n\narrival_date_month\n0\n1\n3\n9\n0\n12\n0\n\n\nchildren\n0\n1\n4\n8\n0\n2\n0\n\n\nmeal\n0\n1\n2\n9\n0\n5\n0\n\n\ncountry\n0\n1\n2\n4\n0\n166\n0\n\n\nmarket_segment\n0\n1\n6\n13\n0\n7\n0\n\n\ndistribution_channel\n0\n1\n3\n9\n0\n5\n0\n\n\nreserved_room_type\n0\n1\n1\n1\n0\n9\n0\n\n\nassigned_room_type\n0\n1\n1\n1\n0\n10\n0\n\n\ndeposit_type\n0\n1\n10\n10\n0\n3\n0\n\n\nagent\n0\n1\n1\n4\n0\n315\n0\n\n\ncompany\n0\n1\n1\n4\n0\n332\n0\n\n\ncustomer_type\n0\n1\n5\n15\n0\n4\n0\n\n\nrequired_car_parking_spaces\n0\n1\n4\n7\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nlead_time\n0\n1\n79.98\n91.11\n0.00\n9.0\n45.0\n124\n737\n▇▂▁▁▁\n\n\narrival_date_year\n0\n1\n2016.15\n0.70\n2015.00\n2016.0\n2016.0\n2017\n2017\n▃▁▇▁▆\n\n\narrival_date_week_number\n0\n1\n27.08\n13.90\n1.00\n16.0\n28.0\n38\n53\n▆▇▇▇▆\n\n\narrival_date_day_of_month\n0\n1\n15.84\n8.78\n1.00\n8.0\n16.0\n23\n31\n▇▇▇▇▆\n\n\nstays_in_weekend_nights\n0\n1\n0.93\n0.99\n0.00\n0.0\n1.0\n2\n19\n▇▁▁▁▁\n\n\nstays_in_week_nights\n0\n1\n2.46\n1.92\n0.00\n1.0\n2.0\n3\n50\n▇▁▁▁▁\n\n\nadults\n0\n1\n1.83\n0.51\n0.00\n2.0\n2.0\n2\n4\n▁▂▇▁▁\n\n\nis_repeated_guest\n0\n1\n0.04\n0.20\n0.00\n0.0\n0.0\n0\n1\n▇▁▁▁▁\n\n\nprevious_cancellations\n0\n1\n0.02\n0.27\n0.00\n0.0\n0.0\n0\n13\n▇▁▁▁▁\n\n\nprevious_bookings_not_canceled\n0\n1\n0.20\n1.81\n0.00\n0.0\n0.0\n0\n72\n▇▁▁▁▁\n\n\nbooking_changes\n0\n1\n0.29\n0.74\n0.00\n0.0\n0.0\n0\n21\n▇▁▁▁▁\n\n\ndays_in_waiting_list\n0\n1\n1.59\n14.78\n0.00\n0.0\n0.0\n0\n379\n▇▁▁▁▁\n\n\nadr\n0\n1\n99.99\n49.21\n-6.38\n67.5\n92.5\n125\n510\n▇▆▁▁▁\n\n\ntotal_of_special_requests\n0\n1\n0.71\n0.83\n0.00\n0.0\n1.0\n1\n5\n▇▁▁▁▁\n\n\n\n\n\n\n\nCode\nhotel_stays %&gt;%\n  mutate(arrival_date_month = factor(arrival_date_month,\n    levels = month.name\n  )) %&gt;%\n  count(hotel, arrival_date_month, children) %&gt;%\n  group_by(hotel, children) %&gt;%\n  mutate(proportion = n / sum(n)) %&gt;%\n  ggplot(aes(arrival_date_month, proportion, fill = children)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  facet_wrap(~hotel, nrow = 2) +\n  labs(\n    x = NULL,\n    y = \"Proportion of hotel stays\",\n    fill = NULL\n  )",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#data-split",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#data-split",
    "title": "Level 5 classification Tidy Modeling",
    "section": "2.3 data split",
    "text": "2.3 data split\n\n\nPrepare & Split Data\nall_hotels_df &lt;- hotel_stays %&gt;%\n  select(\n    children, hotel, arrival_date_month, meal, adr, adults,\n    required_car_parking_spaces, total_of_special_requests,\n    stays_in_week_nights, stays_in_weekend_nights\n  ) %&gt;%\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=children) %&gt;% mutate(rownum= row_number())\n\nhotels_df=all_hotels_df%&gt;% sample_n(50000) \n\nhold_hotels_df &lt;- anti_join(all_hotels_df, hotels_df, by='rownum')\n\n\n#all_hotels_df=all_hotels_df %&gt;% select(-rownum)\n#hotels_df=hotels_df %&gt;% select(-rownum)\n#all_hotels_df=all_hotels_df %&gt;% select(-rownum)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=hotels_df, prop = c(0.7,0.2))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 35000    11\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 5000   11\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 10000    11\n\n\n10 fold for tunning\n\n\nCode\nset.seed(234)\nfolds &lt;- vfold_cv(data_train)",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#recipe",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#recipe",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\nbecasue the target class is not balance so using downsample\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  step_rm(rownum) %&gt;% \n  step_downsample(target_variable) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#model",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#model",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.2 model",
    "text": "3.2 model\ntree model with cost_complexity and tree_depth to tune\n\n\nCode\ntune_spec &lt;- \n  decision_tree(\n    cost_complexity = tune(),\n    tree_depth = tune()\n  ) %&gt;% \n  set_engine(\"rpart\") %&gt;% \n  set_mode(\"classification\")\n\n\n\n\nCode\ntune_spec\n\n\nDecision Tree Model Specification (classification)\n\nMain Arguments:\n  cost_complexity = tune()\n  tree_depth = tune()\n\nComputational engine: rpart \n\n\n\n\nCode\ntune_spec |&gt; \n  extract_parameter_set_dials()\n\n\nCollection of 2 parameters for tuning\n\n      identifier            type    object\n cost_complexity cost_complexity nparam[+]\n      tree_depth      tree_depth nparam[+]\n\n\n\n\nCode\nnum_leaves()\n\n\nNumber of Leaves (quantitative)\nRange: [5, 100]\n\n\ntunning grid\n\n\nCode\ngrid_tune &lt;- \n  tune_spec |&gt; \n  extract_parameter_set_dials() |&gt; \n  grid_latin_hypercube(size = 200)\n\n\n\n\nCode\ngrid_tune |&gt; glimpse(width = 200)\n\n\nRows: 200\nColumns: 2\n$ cost_complexity &lt;dbl&gt; 1.261316e-07, 1.039957e-04, 5.167414e-03, 3.694176e-04, 2.289054e-09, 1.567029e-04, 3.242447e-03, 4.373541e-09, 1.341326e-07, 5.984753e-03, 2.577958e-03, 1.130172e-09, 8.8965…\n$ tree_depth      &lt;int&gt; 7, 10, 3, 6, 3, 4, 13, 11, 15, 1, 11, 7, 4, 12, 8, 8, 9, 14, 10, 5, 4, 4, 7, 12, 2, 7, 13, 2, 14, 10, 13, 5, 14, 10, 13, 9, 15, 11, 14, 2, 8, 11, 5, 2, 11, 3, 1, 13, 10, 4, 1…\n\n\n\n\nCode\ngrid_tune %&gt;% count(tree_depth)\n\n\n# A tibble: 15 × 2\n   tree_depth     n\n        &lt;int&gt; &lt;int&gt;\n 1          1     7\n 2          2    15\n 3          3    14\n 4          4    14\n 5          5    15\n 6          6    14\n 7          7    14\n 8          8    14\n 9          9    14\n10         10    15\n11         11    14\n12         12    14\n13         13    15\n14         14    14\n15         15     7",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#workflow",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#workflow",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.3 workflow",
    "text": "3.3 workflow\n\n\nCode\nlibrary(finetune)\ncntl &lt;- control_race(save_pred     = TRUE,\n                          save_workflow = TRUE)\n\n\n\n\nCode\nmodel_workflow =\n  workflow() %&gt;% \n  add_model(tune_spec) %&gt;% \n  add_recipe(data_rec)",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#training-and-tunning",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#training-and-tunning",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.4 training and tunning",
    "text": "3.4 training and tunning\nusing tune_race_anova() instead of tune_grid()\n\n\nCode\nlibrary(finetune)\ndoParallel::registerDoParallel()\n\ntree_res = model_workflow %&gt;% \n  tune_race_anova(\n    resamples = folds,\n    grid = grid_tune,\n    control   = cntl\n    )\n\n\n\n\nCode\nautoplot(tree_res)\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_race(tree_res)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntree_res %&gt;% \n  collect_metrics()\n\n\n# A tibble: 144 × 8\n   cost_complexity tree_depth .metric  .estimator  mean     n std_err .config   \n             &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;     \n 1   0.000104              10 accuracy binary     0.750    10 0.00493 Preproces…\n 2   0.000104              10 roc_auc  binary     0.819    10 0.00355 Preproces…\n 3   0.00000000437         11 accuracy binary     0.750    10 0.00462 Preproces…\n 4   0.00000000437         11 roc_auc  binary     0.819    10 0.00344 Preproces…\n 5   0.000000134           15 accuracy binary     0.749    10 0.00488 Preproces…\n 6   0.000000134           15 roc_auc  binary     0.815    10 0.00297 Preproces…\n 7   0.00000708            12 accuracy binary     0.753    10 0.00507 Preproces…\n 8   0.00000708            12 roc_auc  binary     0.819    10 0.00314 Preproces…\n 9   0.0000000485           9 accuracy binary     0.750    10 0.0110  Preproces…\n10   0.0000000485           9 roc_auc  binary     0.818    10 0.00374 Preproces…\n# ℹ 134 more rows\n\n\n\n\nCode\ntree_res %&gt;%\n  collect_metrics() %&gt;%\n  mutate(tree_depth = factor(tree_depth)) %&gt;%\n  ggplot(aes(cost_complexity, mean, color = tree_depth)) +\n  geom_line(size = 1.5, alpha = 0.6) +\n  geom_point(size = 2) +\n  facet_wrap(~ .metric, scales = \"free\", nrow = 2) +\n  scale_x_log10(labels = scales::label_number()) +\n  scale_color_viridis_d(option = \"plasma\", begin = .9, end = 0)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntree_res %&gt;%\n  show_best()\n\n\n# A tibble: 5 × 8\n  cost_complexity tree_depth .metric .estimator  mean     n std_err .config     \n            &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;       \n1        1.23e- 6         13 roc_auc binary     0.819    10 0.00336 Preprocesso…\n2        3.01e- 8         13 roc_auc binary     0.819    10 0.00336 Preprocesso…\n3        1.77e- 9         13 roc_auc binary     0.819    10 0.00336 Preprocesso…\n4        3.42e- 9         13 roc_auc binary     0.819    10 0.00336 Preprocesso…\n5        6.62e-10         13 roc_auc binary     0.819    10 0.00336 Preprocesso…\n\n\n\n\nCode\nbest_tree &lt;- tree_res %&gt;%\n  select_best()\n\nbest_tree\n\n\n# A tibble: 1 × 3\n  cost_complexity tree_depth .config               \n            &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;                 \n1      0.00000123         13 Preprocessor1_Model051\n\n\n\n\nCode\nfinal_wf &lt;- \n  model_workflow %&gt;% \n  finalize_workflow(best_tree)\n\n\nfinal_wf\n\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_rm()\n• step_downsample()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nDecision Tree Model Specification (classification)\n\nMain Arguments:\n  cost_complexity = 1.22703060123996e-06\n  tree_depth = 13\n\nComputational engine: rpart",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#last-fit",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#last-fit",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.5 last fit",
    "text": "3.5 last fit\n\n\nCode\nfinal_fit &lt;- \n  final_wf %&gt;%\n  last_fit(data_split)",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#evaluate",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#evaluate",
    "title": "Level 5 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\n\n\nCode\nfinal_fit %&gt;%\n  collect_metrics()\n\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.768 Preprocessor1_Model1\n2 roc_auc  binary         0.828 Preprocessor1_Model1\n\n\nAccuracy = (TN + TP)/(TN+TP+FN+FP) = (Number of correct assessments)/Number of all assessments)\nSensitivity = TP/(TP + FN) = (Number of true positive assessment)/(Number of all positive assessment)\nSpecificity = TN/(TN + FP) = (Number of true negative assessment)/(Number of all negative assessment)\n\n\nCode\nall_metrics &lt;- metric_set(accuracy, sens, spec)\n\na=final_fit %&gt;% collect_predictions()\n\nall_metrics(a, truth = target_variable,estimate = .pred_class)\n\n\n# A tibble: 3 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.768\n2 sens     binary         0.744\n3 spec     binary         0.770\n\n\n\n\nCode\nfinal_fit %&gt;%\n  collect_predictions() %&gt;% \n  roc_curve(target_variable, .pred_children) %&gt;% \n  autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nfinal_tree &lt;- extract_workflow(final_fit)\nfinal_tree\n\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_rm()\n• step_downsample()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nn= 5536 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n    1) root 5536 2768 children (0.50000000 0.50000000)  \n      2) adr&gt;=0.1582763 2068  494 children (0.76112186 0.23887814)  \n        4) adr&gt;=0.7955561 1105  148 children (0.86606335 0.13393665)  \n          8) adults&lt; 1.238833 970  101 children (0.89587629 0.10412371)  \n           16) adults&gt;=-0.821299 937   88 children (0.90608324 0.09391676)  \n             32) hotel_Resort.Hotel&lt; 0.2111871 491   23 children (0.95315682 0.04684318) *\n             33) hotel_Resort.Hotel&gt;=0.2111871 446   65 children (0.85426009 0.14573991)  \n               66) adr&gt;=2.86807 34    0 children (1.00000000 0.00000000) *\n               67) adr&lt; 2.86807 412   65 children (0.84223301 0.15776699)  \n                134) stays_in_week_nights&lt; -0.5658941 86    8 children (0.90697674 0.09302326) *\n                135) stays_in_week_nights&gt;=-0.5658941 326   57 children (0.82515337 0.17484663)  \n                  270) stays_in_week_nights&gt;=-0.03283476 253   38 children (0.84980237 0.15019763) *\n                  271) stays_in_week_nights&lt; -0.03283476 73   19 children (0.73972603 0.26027397)  \n                    542) total_of_special_requests&lt; -0.4525203 25    3 children (0.88000000 0.12000000) *\n                    543) total_of_special_requests&gt;=-0.4525203 48   16 children (0.66666667 0.33333333)  \n                     1086) adr&lt; 1.400318 21    5 children (0.76190476 0.23809524) *\n                     1087) adr&gt;=1.400318 27   11 children (0.59259259 0.40740741)  \n                       2174) adr&gt;=1.68397 20    7 children (0.65000000 0.35000000) *\n                       2175) adr&lt; 1.68397 7    3 none (0.42857143 0.57142857) *\n           17) adults&lt; -0.821299 33   13 children (0.60606061 0.39393939)  \n             34) arrival_date_month_September&lt; 1.683847 23    6 children (0.73913043 0.26086957) *\n             35) arrival_date_month_September&gt;=1.683847 10    3 none (0.30000000 0.70000000) *\n          9) adults&gt;=1.238833 135   47 children (0.65185185 0.34814815)  \n           18) adr&gt;=1.697519 56   11 children (0.80357143 0.19642857) *\n           19) adr&lt; 1.697519 79   36 children (0.54430380 0.45569620)  \n             38) hotel_Resort.Hotel&gt;=0.2111871 35   10 children (0.71428571 0.28571429)  \n               76) stays_in_weekend_nights&lt; -0.4949081 10    0 children (1.00000000 0.00000000) *\n               77) stays_in_weekend_nights&gt;=-0.4949081 25   10 children (0.60000000 0.40000000)  \n                154) meal_HB&lt; 1.074111 17    5 children (0.70588235 0.29411765) *\n                155) meal_HB&gt;=1.074111 8    3 none (0.37500000 0.62500000) *\n             39) hotel_Resort.Hotel&lt; 0.2111871 44   18 none (0.40909091 0.59090909)  \n               78) meal_HB&lt; 1.074111 35   17 none (0.48571429 0.51428571)  \n                156) total_of_special_requests&lt; 0.6249646 23    9 children (0.60869565 0.39130435)  \n                  312) adr&gt;=1.00166 14    4 children (0.71428571 0.28571429) *\n                  313) adr&lt; 1.00166 9    4 none (0.44444444 0.55555556) *\n                157) total_of_special_requests&gt;=0.6249646 12    3 none (0.25000000 0.75000000) *\n               79) meal_HB&gt;=1.074111 9    1 none (0.11111111 0.88888889) *\n        5) adr&lt; 0.7955561 963  346 children (0.64070613 0.35929387)  \n         10) adults&lt; 1.238833 863  272 children (0.68482039 0.31517961)  \n           20) total_of_special_requests&gt;=0.6249646 298   64 children (0.78523490 0.21476510)  \n             40) stays_in_week_nights&gt;=-0.5658941 209   35 children (0.83253589 0.16746411)  \n               80) arrival_date_month_September&lt; 1.683847 195   29 children (0.85128205 0.14871795)  \n                160) stays_in_week_nights&lt; 2.099402 184   25 children (0.86413043 0.13586957)  \n                  320) adr&lt; 0.321661 55    3 children (0.94545455 0.05454545) *\n                  321) adr&gt;=0.321661 129   22 children (0.82945736 0.17054264)  \n\n...\nand 256 more lines.\n\n\n\n\nCode\nlibrary(vip)\n\nfinal_tree %&gt;% \n  extract_fit_parsnip() %&gt;% \n  vip()",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#save-model",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#save-model",
    "title": "Level 5 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(final_tree)\n\n\n3.51 MB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(final_tree)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 5 classification decision tree hotel model.RDS')",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 5 classification Tidy Modeling.html#make-predication",
    "href": "hote classification model/Level 5 classification Tidy Modeling.html#make-predication",
    "title": "Level 5 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 5 classification decision tree hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,data_valid)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 none       \n2 none       \n3 none       \n4 children   \n5 none       \n6 none       \n\n\n\n\nCode\nfinal_prediction_data=cbind(data_valid,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      554 2098\n  none          238 7110\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.766\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children          792\n2 none             9208\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 children     2652\n2 none         7348\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      554 2098\n  none          238 7110",
    "crumbs": [
      "hote classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html",
    "title": "Level 6 classification Tidy Modeling",
    "section": "",
    "text": "Level 6 classification Tidy Modeling:",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#read-data",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#read-data",
    "title": "Level 6 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\n\n\nCode\nlibrary(tidyverse)\n\nhotels &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n\n\nhotel_stays &lt;- hotels %&gt;%\n  filter(is_canceled == 0) %&gt;%\n  mutate(\n    children = case_when(\n      children + babies &gt; 0 ~ \"children\",\n      TRUE ~ \"none\"\n    ),\n    required_car_parking_spaces = case_when(\n      required_car_parking_spaces &gt; 0 ~ \"parking\",\n      TRUE ~ \"none\"\n    )\n  ) %&gt;%\n  select(-is_canceled, -reservation_status, -babies)",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#plotting-and-eda",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#plotting-and-eda",
    "title": "Level 6 classification Tidy Modeling",
    "section": "2.2 plotting and EDA",
    "text": "2.2 plotting and EDA\n\n\nCode\nhotel_stays %&gt;%\n  count(children)\n\n\n# A tibble: 2 × 2\n  children     n\n  &lt;chr&gt;    &lt;int&gt;\n1 children  6073\n2 none     69093\n\n\n\n\nCode\nlibrary(skimr)\n\nskim(hotel_stays)\n\n\n\nData summary\n\n\nName\nhotel_stays\n\n\nNumber of rows\n75166\n\n\nNumber of columns\n29\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nDate\n1\n\n\ncharacter\n14\n\n\nnumeric\n14\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: Date\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nmedian\nn_unique\n\n\n\n\nreservation_status_date\n0\n1\n2015-07-01\n2017-09-14\n2016-09-01\n805\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nhotel\n0\n1\n10\n12\n0\n2\n0\n\n\narrival_date_month\n0\n1\n3\n9\n0\n12\n0\n\n\nchildren\n0\n1\n4\n8\n0\n2\n0\n\n\nmeal\n0\n1\n2\n9\n0\n5\n0\n\n\ncountry\n0\n1\n2\n4\n0\n166\n0\n\n\nmarket_segment\n0\n1\n6\n13\n0\n7\n0\n\n\ndistribution_channel\n0\n1\n3\n9\n0\n5\n0\n\n\nreserved_room_type\n0\n1\n1\n1\n0\n9\n0\n\n\nassigned_room_type\n0\n1\n1\n1\n0\n10\n0\n\n\ndeposit_type\n0\n1\n10\n10\n0\n3\n0\n\n\nagent\n0\n1\n1\n4\n0\n315\n0\n\n\ncompany\n0\n1\n1\n4\n0\n332\n0\n\n\ncustomer_type\n0\n1\n5\n15\n0\n4\n0\n\n\nrequired_car_parking_spaces\n0\n1\n4\n7\n0\n2\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nlead_time\n0\n1\n79.98\n91.11\n0.00\n9.0\n45.0\n124\n737\n▇▂▁▁▁\n\n\narrival_date_year\n0\n1\n2016.15\n0.70\n2015.00\n2016.0\n2016.0\n2017\n2017\n▃▁▇▁▆\n\n\narrival_date_week_number\n0\n1\n27.08\n13.90\n1.00\n16.0\n28.0\n38\n53\n▆▇▇▇▆\n\n\narrival_date_day_of_month\n0\n1\n15.84\n8.78\n1.00\n8.0\n16.0\n23\n31\n▇▇▇▇▆\n\n\nstays_in_weekend_nights\n0\n1\n0.93\n0.99\n0.00\n0.0\n1.0\n2\n19\n▇▁▁▁▁\n\n\nstays_in_week_nights\n0\n1\n2.46\n1.92\n0.00\n1.0\n2.0\n3\n50\n▇▁▁▁▁\n\n\nadults\n0\n1\n1.83\n0.51\n0.00\n2.0\n2.0\n2\n4\n▁▂▇▁▁\n\n\nis_repeated_guest\n0\n1\n0.04\n0.20\n0.00\n0.0\n0.0\n0\n1\n▇▁▁▁▁\n\n\nprevious_cancellations\n0\n1\n0.02\n0.27\n0.00\n0.0\n0.0\n0\n13\n▇▁▁▁▁\n\n\nprevious_bookings_not_canceled\n0\n1\n0.20\n1.81\n0.00\n0.0\n0.0\n0\n72\n▇▁▁▁▁\n\n\nbooking_changes\n0\n1\n0.29\n0.74\n0.00\n0.0\n0.0\n0\n21\n▇▁▁▁▁\n\n\ndays_in_waiting_list\n0\n1\n1.59\n14.78\n0.00\n0.0\n0.0\n0\n379\n▇▁▁▁▁\n\n\nadr\n0\n1\n99.99\n49.21\n-6.38\n67.5\n92.5\n125\n510\n▇▆▁▁▁\n\n\ntotal_of_special_requests\n0\n1\n0.71\n0.83\n0.00\n0.0\n1.0\n1\n5\n▇▁▁▁▁\n\n\n\n\n\n\n\nCode\nhotel_stays %&gt;%\n  mutate(arrival_date_month = factor(arrival_date_month,\n    levels = month.name\n  )) %&gt;%\n  count(hotel, arrival_date_month, children) %&gt;%\n  group_by(hotel, children) %&gt;%\n  mutate(proportion = n / sum(n)) %&gt;%\n  ggplot(aes(arrival_date_month, proportion, fill = children)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  facet_wrap(~hotel, nrow = 2) +\n  labs(\n    x = NULL,\n    y = \"Proportion of hotel stays\",\n    fill = NULL\n  )",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#data-split",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#data-split",
    "title": "Level 6 classification Tidy Modeling",
    "section": "2.3 data split",
    "text": "2.3 data split\n\n\nPrepare & Split Data\nall_hotels_df &lt;- hotel_stays %&gt;%\n  select(\n    children, hotel, arrival_date_month, meal, adr, adults,\n    required_car_parking_spaces, total_of_special_requests,\n    stays_in_week_nights, stays_in_weekend_nights\n  ) %&gt;%\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=children) %&gt;% mutate(rownum= row_number())\n\nhotels_df=all_hotels_df%&gt;% sample_n(50000) \n\nhold_hotels_df &lt;- anti_join(all_hotels_df, hotels_df, by='rownum')\n\n\n#all_hotels_df=all_hotels_df %&gt;% select(-rownum)\n#hotels_df=hotels_df %&gt;% select(-rownum)\n#all_hotels_df=all_hotels_df %&gt;% select(-rownum)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=hotels_df, prop = c(0.7,0.2))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 35000    11\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 5000   11\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 10000    11\n\n\n10 fold for tunning\n\n\nCode\nset.seed(234)\nfolds &lt;- vfold_cv(data_train)",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#recipe",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#recipe",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\nbecasue the target class is not balance so using downsample\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  step_rm(rownum) %&gt;% \n  step_downsample(target_variable) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#model",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#model",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.2 model",
    "text": "3.2 model\n\n3.2.1 decision tree model with cost_complexity and tree_depth to tune\n\n\nCode\ntune_spec &lt;- \n  decision_tree(\n    cost_complexity = tune(),\n    tree_depth = tune()\n  ) %&gt;% \n  set_engine(\"rpart\") %&gt;% \n  set_mode(\"classification\")\n\n\n\n\nCode\ntune_spec |&gt; \n  extract_parameter_set_dials()\n\n\nCollection of 2 parameters for tuning\n\n      identifier            type    object\n cost_complexity cost_complexity nparam[+]\n      tree_depth      tree_depth nparam[+]\n\n\n\n\nCode\ndecision_tree_tune_grid &lt;- \n  tune_spec |&gt; \n  extract_parameter_set_dials() |&gt; \n  grid_latin_hypercube(size = 100)\n\n\n\n\n3.2.2 logistic glm model\n\n\nCode\nglm_spec &lt;-\n  logistic_reg(penalty = 1) |&gt;\n  set_engine(\"glm\")\n\n\n\n\n3.2.3 KNN model\n\n\nCode\nknn_spec &lt;- nearest_neighbor() %&gt;%\n  set_engine(\"kknn\") %&gt;%\n  set_mode(\"classification\")\n\nknn_spec\n\n\nK-Nearest Neighbor Model Specification (classification)\n\nComputational engine: kknn \n\n\n\n\n3.2.4 XG Boost tree\n\n\nCode\nxgb_spec &lt;- boost_tree(\n  trees = 10,\n  tree_depth = tune(), min_n = tune(),\n  loss_reduction = tune(),                     ## first three: model complexity\n  sample_size = tune(),  mtry=tune(),       ## randomness\n  learn_rate = tune()                          ## step size\n) %&gt;%\n  set_engine(\"xgboost\") %&gt;%\n  set_mode(\"classification\")\n\nxgb_spec\n\n\nBoosted Tree Model Specification (classification)\n\nMain Arguments:\n  mtry = tune()\n  trees = 10\n  min_n = tune()\n  tree_depth = tune()\n  learn_rate = tune()\n  loss_reduction = tune()\n  sample_size = tune()\n\nComputational engine: xgboost \n\n\nxgb tunning grid\n\n\nCode\nxgb_tune_grid= grid_latin_hypercube(\n  tree_depth(),learn_rate(),loss_reduction(),min_n(),\n  sample_size=sample_prop(),finalize(mtry(),data_train),\n  size=50)\n\nhead(xgb_tune_grid)\n\n\n# A tibble: 6 × 6\n  tree_depth learn_rate loss_reduction min_n sample_size  mtry\n       &lt;int&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt; &lt;int&gt;\n1          2   3.42e- 6       8.02e- 9    32       0.734     3\n2          7   4.05e- 5       2.42e- 1    25       0.393     7\n3         14   4.98e- 4       5.17e-10     4       0.465     3\n4         12   4.33e- 8       8.46e- 7     8       0.485     9\n5         10   4.00e-10       2.81e- 5    14       0.387     9\n6          7   7.24e- 5       8.03e- 2     9       0.105    11\n\n\n\n\n3.2.5 lightGBM Boost tree\n\n\nCode\nlightgbm_spec &lt;- boost_tree(\n  trees = 10,\n  tree_depth = tune(), min_n = tune(),\n  loss_reduction = tune(),                     ## first three: model complexity\n  sample_size = tune(),   mtry=tune(),     ## randomness\n  learn_rate = tune()                          ## step size\n) %&gt;%\n  set_engine(\"lightgbm\") %&gt;%\n  set_mode(\"classification\")\n\nlightgbm_spec\n\n\nBoosted Tree Model Specification (classification)\n\nMain Arguments:\n  mtry = tune()\n  trees = 10\n  min_n = tune()\n  tree_depth = tune()\n  learn_rate = tune()\n  loss_reduction = tune()\n  sample_size = tune()\n\nComputational engine: lightgbm \n\n\n\n\nCode\nlightgbm_grid= grid_latin_hypercube(\n  tree_depth(),learn_rate(),loss_reduction(),min_n(),\n  sample_size=sample_prop(),finalize(mtry(),data_train),\n  size=50)\n\nhead(lightgbm_grid)\n\n\n# A tibble: 6 × 6\n  tree_depth learn_rate loss_reduction min_n sample_size  mtry\n       &lt;int&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt; &lt;int&gt;\n1         10   1.14e-10       1.09e- 3    13       0.682     1\n2          6   1.25e- 5       1.81e+ 1    19       0.265     6\n3          2   3.59e- 6       1.55e- 5    18       0.860     8\n4          3   5.01e- 8       2.34e-10    20       0.108     6\n5         15   2.98e- 2       2.05e- 6    21       0.341     5\n6         13   2.28e- 3       2.52e- 7    34       0.124     4",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#workflow-set",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#workflow-set",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.3 workflow set",
    "text": "3.3 workflow set\n\n\nCode\nlibrary(finetune)\ncntl   &lt;- control_grid(save_pred     = TRUE,\n                       save_workflow = TRUE)\n\n\nusing workflow set instead of workflow to combine many models.\n\n\nCode\nworkflow_set &lt;-\n  workflow_set(\n    preproc = list(data_rec),\n    models = list(glm   = glm_spec,\n                  tree  = tune_spec,\n                  knn=knn_spec,\n                  xgb=xgb_spec,\n                  lightgbm=lightgbm_spec\n                  )\n  ) %&gt;% option_add(grid = decision_tree_tune_grid, id = \"recipe_tree\")  %&gt;% \n  option_add(grid = xgb_tune_grid, id = \"recipe_xgb\")  %&gt;% \n  option_add(grid = lightgbm_grid, id = \"recipe_lightgbm\") \n\n\n\n\nCode\nworkflow_set %&gt;%\n  option_add_parameters()\n\n\n# A workflow set/tibble: 5 × 4\n  wflow_id        info             option    result    \n  &lt;chr&gt;           &lt;list&gt;           &lt;list&gt;    &lt;list&gt;    \n1 recipe_glm      &lt;tibble [1 × 4]&gt; &lt;opts[0]&gt; &lt;list [0]&gt;\n2 recipe_tree     &lt;tibble [1 × 4]&gt; &lt;opts[2]&gt; &lt;list [0]&gt;\n3 recipe_knn      &lt;tibble [1 × 4]&gt; &lt;opts[0]&gt; &lt;list [0]&gt;\n4 recipe_xgb      &lt;tibble [1 × 4]&gt; &lt;opts[2]&gt; &lt;list [0]&gt;\n5 recipe_lightgbm &lt;tibble [1 × 4]&gt; &lt;opts[2]&gt; &lt;list [0]&gt;",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#training-and-tunning",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#training-and-tunning",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.4 training and tunning",
    "text": "3.4 training and tunning\n\n\nCode\nlibrary(finetune)\ndoParallel::registerDoParallel()\n\nmodel_set_res = workflow_set  %&gt;% \n  workflow_map(\n              grid = 20,\n               resamples = folds,\n               control = cntl\n  )\n\n\n\n\nCode\nrank_results(model_set_res,\n             rank_metric = \"roc_auc\",\n             select_best = TRUE)  %&gt;% \n  gt()\n\n\n\n\n\n\n\n\n\nwflow_id\n.config\n.metric\nmean\nstd_err\nn\npreprocessor\nmodel\nrank\n\n\n\n\nrecipe_lightgbm\nPreprocessor1_Model05\naccuracy\n0.7753429\n0.005444929\n10\nrecipe\nboost_tree\n1\n\n\nrecipe_lightgbm\nPreprocessor1_Model05\nroc_auc\n0.8338374\n0.003198649\n10\nrecipe\nboost_tree\n1\n\n\nrecipe_xgb\nPreprocessor1_Model19\naccuracy\n0.7683143\n0.003776392\n10\nrecipe\nboost_tree\n2\n\n\nrecipe_xgb\nPreprocessor1_Model19\nroc_auc\n0.8324725\n0.002535500\n10\nrecipe\nboost_tree\n2\n\n\nrecipe_tree\nPreprocessor1_Model14\naccuracy\n0.7454571\n0.004857787\n10\nrecipe\ndecision_tree\n3\n\n\nrecipe_tree\nPreprocessor1_Model14\nroc_auc\n0.8165751\n0.002733045\n10\nrecipe\ndecision_tree\n3\n\n\nrecipe_glm\nPreprocessor1_Model1\naccuracy\n0.7679714\n0.002633277\n10\nrecipe\nlogistic_reg\n4\n\n\nrecipe_glm\nPreprocessor1_Model1\nroc_auc\n0.8056355\n0.004949732\n10\nrecipe\nlogistic_reg\n4\n\n\nrecipe_knn\nPreprocessor1_Model1\naccuracy\n0.7350857\n0.002975577\n10\nrecipe\nnearest_neighbor\n5\n\n\nrecipe_knn\nPreprocessor1_Model1\nroc_auc\n0.7891336\n0.004662742\n10\nrecipe\nnearest_neighbor\n5\n\n\n\n\n\n\n\n\n\n\nCode\nmodel_set_res |&gt; autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nmodel_set_res |&gt; autoplot( id= 'recipe_xgb')\n\n\n\n\n\n\n\n\n\nselect best model:logistic glm model\n\n\nCode\nbest_model_id &lt;- \"recipe_xgb\"\n\n\nselect best parameters\n\n\nCode\nbest_fit &lt;-\n  model_set_res |&gt;\n  extract_workflow_set_result(best_model_id) |&gt;\n  select_best(metric = \"accuracy\")\n\n\n\n\nCode\n# create workflow for best model\nfinal_workflow &lt;-\n  model_set_res |&gt;\n  extract_workflow(best_model_id) |&gt;\n  finalize_workflow(best_fit)",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#last-fit",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#last-fit",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.5 last fit",
    "text": "3.5 last fit\n\n\nCode\nfinal_fit &lt;-\n  final_workflow |&gt;\n  last_fit(data_split)",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#evaluate",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#evaluate",
    "title": "Level 6 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\n\n\nCode\nfinal_fit %&gt;%\n  collect_metrics()\n\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.783 Preprocessor1_Model1\n2 roc_auc  binary         0.820 Preprocessor1_Model1\n\n\nAccuracy = (TN + TP)/(TN+TP+FN+FP) = (Number of correct assessments)/Number of all assessments)\nSensitivity = TP/(TP + FN) = (Number of true positive assessment)/(Number of all positive assessment)\nSpecificity = TN/(TN + FP) = (Number of true negative assessment)/(Number of all negative assessment)\n\n\nCode\nall_metrics &lt;- metric_set(accuracy, sens, spec)\n\na=final_fit %&gt;% collect_predictions()\n\nall_metrics(a, truth = target_variable,estimate = .pred_class)\n\n\n# A tibble: 3 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.783\n2 sens     binary         0.676\n3 spec     binary         0.793\n\n\n\n\nCode\nfinal_fit %&gt;%\n  collect_predictions() %&gt;% \n  roc_curve(target_variable, .pred_children) %&gt;% \n  autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nfinal_tree &lt;- extract_workflow(final_fit)\nfinal_tree\n\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: boost_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_rm()\n• step_downsample()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\n##### xgb.Booster\nraw: 25.1 Kb \ncall:\n  xgboost::xgb.train(params = list(eta = 0.0899069436737191, max_depth = 5L, \n    gamma = 0.832337637488916, colsample_bytree = 1, colsample_bynode = 0.590909090909091, \n    min_child_weight = 4L, subsample = 0.618058206671849), data = x$data, \n    nrounds = 10, watchlist = x$watchlist, verbose = 0, nthread = 1, \n    objective = \"binary:logistic\")\nparams (as set within xgb.train):\n  eta = \"0.0899069436737191\", max_depth = \"5\", gamma = \"0.832337637488916\", colsample_bytree = \"1\", colsample_bynode = \"0.590909090909091\", min_child_weight = \"4\", subsample = \"0.618058206671849\", nthread = \"1\", objective = \"binary:logistic\", validate_parameters = \"TRUE\"\nxgb.attributes:\n  niter\ncallbacks:\n  cb.evaluation.log()\n# of features: 22 \nniter: 10\nnfeatures : 22 \nevaluation_log:\n     iter training_logloss\n    &lt;num&gt;            &lt;num&gt;\n        1        0.6668911\n        2        0.6447095\n---                       \n        9        0.5536486\n       10        0.5452262\n\n\n\n\nCode\nlibrary(vip)\n\nfinal_tree %&gt;% \n  extract_fit_parsnip() %&gt;% \n  vip()",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#save-model",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#save-model",
    "title": "Level 6 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(final_tree)\n\n\n3.43 MB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(final_tree)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 6 classification decision tree hotel model.RDS')",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "hote classification model/Level 6 classification Tidy Modeling.html#make-predication",
    "href": "hote classification model/Level 6 classification Tidy Modeling.html#make-predication",
    "title": "Level 6 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 6 classification decision tree hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,data_valid)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 none       \n2 none       \n3 none       \n4 none       \n5 children   \n6 none       \n\n\n\n\nCode\nfinal_prediction_data=cbind(data_valid,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      568 1900\n  none          232 7300\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.787\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 children          800\n2 none             9200\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 children     2468\n2 none         7532\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction children none\n  children      568 1900\n  none          232 7300",
    "crumbs": [
      "hote classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site:\n\nhttps://www.tidymodels.org/\n\nModeling process\n\n\n\nresource\ntidymodels website: https://www.tidymodels.org/\ntidymodels book: https://www.tmwr.org/\n\n\n\n\n Back to top"
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html",
    "title": "Level 4 classification Tidy Modeling",
    "section": "",
    "text": "Level 4 classification Tidy Modeling:",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#read-data",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#read-data",
    "title": "Level 4 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\nhttps://www.kaggle.com/competitions/titanic/data\n\n\nCode\nlibrary(tidyverse)\ntrain = read_csv(\"data/train.csv\")\n\ntest=read_csv(\"data/test.csv\")",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#eda",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#eda",
    "title": "Level 4 classification Tidy Modeling",
    "section": "2.2 EDA",
    "text": "2.2 EDA\n\n\nCode\nglimpse(train)\n\n\nRows: 891\nColumns: 12\n$ PassengerId &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ Survived    &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1…\n$ Pclass      &lt;dbl&gt; 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, 3…\n$ Name        &lt;chr&gt; \"Braund, Mr. Owen Harris\", \"Cumings, Mrs. John Bradley (Fl…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"female\", \"female\", \"male\", \"male\", \"mal…\n$ Age         &lt;dbl&gt; 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14, …\n$ SibSp       &lt;dbl&gt; 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"A/5 21171\", \"PC 17599\", \"STON/O2. 3101282\", \"113803\", \"37…\n$ Fare        &lt;dbl&gt; 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625,…\n$ Cabin       &lt;chr&gt; NA, \"C85\", NA, \"C123\", NA, NA, \"E46\", NA, NA, NA, \"G6\", \"C…\n$ Embarked    &lt;chr&gt; \"S\", \"C\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"C\", \"S\", \"S\"…\n\n\n\n\nCode\nglimpse(test)\n\n\nRows: 418\nColumns: 11\n$ PassengerId &lt;dbl&gt; 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903…\n$ Pclass      &lt;dbl&gt; 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 1, 2, 1, 2, 2, 3, 3, 3…\n$ Name        &lt;chr&gt; \"Kelly, Mr. James\", \"Wilkes, Mrs. James (Ellen Needs)\", \"M…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"female\", \"male\", \"femal…\n$ Age         &lt;dbl&gt; 34.5, 47.0, 62.0, 27.0, 22.0, 14.0, 30.0, 26.0, 18.0, 21.0…\n$ SibSp       &lt;dbl&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"330911\", \"363272\", \"240276\", \"315154\", \"3101298\", \"7538\",…\n$ Fare        &lt;dbl&gt; 7.8292, 7.0000, 9.6875, 8.6625, 12.2875, 9.2250, 7.6292, 2…\n$ Cabin       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"B45\", NA,…\n$ Embarked    &lt;chr&gt; \"Q\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"C\", \"S\", \"S\", \"S\"…\n\n\n\n\nCode\ntrain %&gt;%\n  count(Survived)\n\n\n# A tibble: 2 × 2\n  Survived     n\n     &lt;dbl&gt; &lt;int&gt;\n1        0   549\n2        1   342",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#plotting",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#plotting",
    "title": "Level 4 classification Tidy Modeling",
    "section": "2.3 plotting",
    "text": "2.3 plotting\n\n\nCode\nlibrary(skimr)\n\nskim(train)\n\n\n\nData summary\n\n\nName\ntrain\n\n\nNumber of rows\n891\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nName\n0\n1.00\n12\n82\n0\n891\n0\n\n\nSex\n0\n1.00\n4\n6\n0\n2\n0\n\n\nTicket\n0\n1.00\n3\n18\n0\n681\n0\n\n\nCabin\n687\n0.23\n1\n15\n0\n147\n0\n\n\nEmbarked\n2\n1.00\n1\n1\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPassengerId\n0\n1.0\n446.00\n257.35\n1.00\n223.50\n446.00\n668.5\n891.00\n▇▇▇▇▇\n\n\nSurvived\n0\n1.0\n0.38\n0.49\n0.00\n0.00\n0.00\n1.0\n1.00\n▇▁▁▁▅\n\n\nPclass\n0\n1.0\n2.31\n0.84\n1.00\n2.00\n3.00\n3.0\n3.00\n▃▁▃▁▇\n\n\nAge\n177\n0.8\n29.70\n14.53\n0.42\n20.12\n28.00\n38.0\n80.00\n▂▇▅▂▁\n\n\nSibSp\n0\n1.0\n0.52\n1.10\n0.00\n0.00\n0.00\n1.0\n8.00\n▇▁▁▁▁\n\n\nParch\n0\n1.0\n0.38\n0.81\n0.00\n0.00\n0.00\n0.0\n6.00\n▇▁▁▁▁\n\n\nFare\n0\n1.0\n32.20\n49.69\n0.00\n7.91\n14.45\n31.0\n512.33\n▇▁▁▁▁",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#data-split",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#data-split",
    "title": "Level 4 classification Tidy Modeling",
    "section": "2.4 data split",
    "text": "2.4 data split\n\n\nPrepare & Split Data\ntrain_df &lt;- train %&gt;%mutate(Survived=as.factor(Survived)) %&gt;% select(-Name) %&gt;% \n\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=Survived)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=train_df, prop = c(0.7,0.1))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 623  11\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 179  11\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 89 11",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#recipe",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#recipe",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  step_impute_knn(all_predictors(), neighbors = 5) %&gt;%\n  #step_downsample(target_variable) %&gt;%\n  #step_novel(Ticket) %&gt;%\n  step_rm(Ticket) %&gt;% \n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#model",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#model",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.2 model",
    "text": "3.2 model\ntree model with cost_complexity and tree_depth to tune\n\n\nCode\ntune_spec &lt;- \n  decision_tree(\n    cost_complexity = tune(),\n    tree_depth = tune()\n  ) %&gt;% \n  set_engine(\"rpart\") %&gt;% \n  set_mode(\"classification\")\n\n\n\n\nCode\ntune_spec\n\n\nDecision Tree Model Specification (classification)\n\nMain Arguments:\n  cost_complexity = tune()\n  tree_depth = tune()\n\nComputational engine: rpart \n\n\n\n\nCode\ntree_grid &lt;- grid_regular(cost_complexity(),\n                          tree_depth(),\n                          levels = 5)\n\ntree_grid\n\n\n# A tibble: 25 × 2\n   cost_complexity tree_depth\n             &lt;dbl&gt;      &lt;int&gt;\n 1    0.0000000001          1\n 2    0.0000000178          1\n 3    0.00000316            1\n 4    0.000562              1\n 5    0.1                   1\n 6    0.0000000001          4\n 7    0.0000000178          4\n 8    0.00000316            4\n 9    0.000562              4\n10    0.1                   4\n# ℹ 15 more rows\n\n\n\n\nCode\ntree_grid %&gt;% count(tree_depth)\n\n\n# A tibble: 5 × 2\n  tree_depth     n\n       &lt;int&gt; &lt;int&gt;\n1          1     5\n2          4     5\n3          8     5\n4         11     5\n5         15     5",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#workflow",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#workflow",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.3 workflow",
    "text": "3.3 workflow\n\n\nCode\nmodel_workflow =\n  workflow() %&gt;% \n  add_model(tune_spec) %&gt;% \n  add_recipe(data_rec)\n\n\n\n\nCode\ncntl   &lt;- control_grid(save_pred     = TRUE,\n                       save_workflow = TRUE)\n\n\n10 fold for tunning\n\n\nCode\nset.seed(234)\nfolds &lt;- vfold_cv(data_train)",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#training-and-tunning",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#training-and-tunning",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.4 training and tunning",
    "text": "3.4 training and tunning\n\n\nCode\ntree_res = model_workflow %&gt;% \n  tune_grid(\n    resamples = folds,\n    grid = tree_grid,\n    control   = cntl\n    )\n\n\n\n\nCode\ntree_res\n\n\n# Tuning results\n# 10-fold cross-validation \n# A tibble: 10 × 5\n   splits           id     .metrics          .notes           .predictions\n   &lt;list&gt;           &lt;chr&gt;  &lt;list&gt;            &lt;list&gt;           &lt;list&gt;      \n 1 &lt;split [560/63]&gt; Fold01 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 2 &lt;split [560/63]&gt; Fold02 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 3 &lt;split [560/63]&gt; Fold03 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 4 &lt;split [561/62]&gt; Fold04 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 5 &lt;split [561/62]&gt; Fold05 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 6 &lt;split [561/62]&gt; Fold06 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 7 &lt;split [561/62]&gt; Fold07 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 8 &lt;split [561/62]&gt; Fold08 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n 9 &lt;split [561/62]&gt; Fold09 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n10 &lt;split [561/62]&gt; Fold10 &lt;tibble [50 × 6]&gt; &lt;tibble [0 × 3]&gt; &lt;tibble&gt;    \n\n\n\n\nCode\ntree_res %&gt;% \n  collect_metrics()\n\n\n# A tibble: 50 × 8\n   cost_complexity tree_depth .metric  .estimator  mean     n std_err .config   \n             &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;     \n 1    0.0000000001          1 accuracy binary     0.774    10  0.0144 Preproces…\n 2    0.0000000001          1 roc_auc  binary     0.751    10  0.0161 Preproces…\n 3    0.0000000178          1 accuracy binary     0.774    10  0.0144 Preproces…\n 4    0.0000000178          1 roc_auc  binary     0.751    10  0.0161 Preproces…\n 5    0.00000316            1 accuracy binary     0.774    10  0.0144 Preproces…\n 6    0.00000316            1 roc_auc  binary     0.751    10  0.0161 Preproces…\n 7    0.000562              1 accuracy binary     0.774    10  0.0144 Preproces…\n 8    0.000562              1 roc_auc  binary     0.751    10  0.0161 Preproces…\n 9    0.1                   1 accuracy binary     0.774    10  0.0144 Preproces…\n10    0.1                   1 roc_auc  binary     0.751    10  0.0161 Preproces…\n# ℹ 40 more rows\n\n\n\n\nCode\ntree_res %&gt;%\n  collect_metrics() %&gt;%\n  mutate(tree_depth = factor(tree_depth)) %&gt;%\n  ggplot(aes(cost_complexity, mean, color = tree_depth)) +\n  geom_line(size = 1.5, alpha = 0.6) +\n  geom_point(size = 2) +\n  facet_wrap(~ .metric, scales = \"free\", nrow = 2) +\n  scale_x_log10(labels = scales::label_number()) +\n  scale_color_viridis_d(option = \"plasma\", begin = .9, end = 0)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntree_res %&gt;%\n  show_best(\"accuracy\")\n\n\n# A tibble: 5 × 8\n  cost_complexity tree_depth .metric  .estimator  mean     n std_err .config    \n            &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;      \n1    0.0000000001          4 accuracy binary     0.788    10  0.0179 Preprocess…\n2    0.0000000178          4 accuracy binary     0.788    10  0.0179 Preprocess…\n3    0.00000316            4 accuracy binary     0.788    10  0.0179 Preprocess…\n4    0.000562              4 accuracy binary     0.788    10  0.0179 Preprocess…\n5    0.0000000001          1 accuracy binary     0.774    10  0.0144 Preprocess…\n\n\n\n\nCode\nbest_tree &lt;- tree_res %&gt;%\n  select_best(\"accuracy\")\n\nbest_tree\n\n\n# A tibble: 1 × 3\n  cost_complexity tree_depth .config              \n            &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;                \n1    0.0000000001          4 Preprocessor1_Model06\n\n\n\n\nCode\nfinal_wf &lt;- \n  model_workflow %&gt;% \n  finalize_workflow(best_tree)\n\n\nfinal_wf\n\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_impute_knn()\n• step_rm()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nDecision Tree Model Specification (classification)\n\nMain Arguments:\n  cost_complexity = 1e-10\n  tree_depth = 4\n\nComputational engine: rpart",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#last-fit",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#last-fit",
    "title": "Level 4 classification Tidy Modeling",
    "section": "3.5 last fit",
    "text": "3.5 last fit\n\n\nCode\nfinal_fit &lt;- \n  final_wf %&gt;%\n  last_fit(data_split)",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#evaluate",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#evaluate",
    "title": "Level 4 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\n\n\nCode\nfinal_fit %&gt;%\n  collect_metrics()\n\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.844 Preprocessor1_Model1\n2 roc_auc  binary         0.861 Preprocessor1_Model1\n\n\n\n\nCode\nfinal_fit %&gt;%\n  collect_predictions() %&gt;% rename(.pred_T = 2, .pred_F = 3) %&gt;% \n  roc_curve(target_variable, .pred_T) %&gt;% \n  autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nfinal_tree &lt;- extract_workflow(final_fit)\nfinal_tree\n\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_impute_knn()\n• step_rm()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nn= 623 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n 1) root 623 244 0 (0.60834671 0.39165329)  \n   2) Sex_male&gt;=-0.3181194 406  84 0 (0.79310345 0.20689655)  \n     4) Age&gt;=-1.700165 388  70 0 (0.81958763 0.18041237) *\n     5) Age&lt; -1.700165 18   4 1 (0.22222222 0.77777778) *\n   3) Sex_male&lt; -0.3181194 217  57 1 (0.26267281 0.73732719)  \n     6) Pclass&gt;=0.2640325 91  42 0 (0.53846154 0.46153846)  \n      12) Fare&gt;=-0.1653079 16   1 0 (0.93750000 0.06250000) *\n      13) Fare&lt; -0.1653079 75  34 1 (0.45333333 0.54666667)  \n        26) Embarked_S&gt;=-0.4915368 42  18 0 (0.57142857 0.42857143) *\n        27) Embarked_S&lt; -0.4915368 33  10 1 (0.30303030 0.69696970) *\n     7) Pclass&lt; 0.2640325 126   8 1 (0.06349206 0.93650794) *\n\n\n\n\nCode\nlibrary(vip)\n\nfinal_tree %&gt;% \n  extract_fit_parsnip() %&gt;% \n  vip()",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#save-model",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#save-model",
    "title": "Level 4 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(final_tree)\n\n\n1.14 MB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(final_tree)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 4 classification decision tree hotel model.RDS')",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 4 classification Tidy Modeling.html#make-predication",
    "href": "titanic classification model/Level 4 classification Tidy Modeling.html#make-predication",
    "title": "Level 4 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 4 classification decision tree hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,data_valid)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 0          \n2 1          \n3 1          \n4 0          \n5 0          \n6 0          \n\n\n\n\nCode\nfinal_prediction_data=cbind(data_valid,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 49 13\n         1  8 19\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.764\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                  57\n2 1                  32\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 0              62\n2 1              27\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 49 13\n         1  8 19",
    "crumbs": [
      "titanic classification model",
      "Level 4 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html",
    "title": "Level 5 classification Tidy Modeling",
    "section": "",
    "text": "Level 5 classification Tidy Modeling:",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#read-data",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#read-data",
    "title": "Level 5 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\nhttps://www.kaggle.com/competitions/titanic/data\n\n\nCode\nlibrary(tidyverse)\ntrain = read_csv(\"data/train.csv\")\n\ntest=read_csv(\"data/test.csv\")",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#eda",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#eda",
    "title": "Level 5 classification Tidy Modeling",
    "section": "2.2 EDA",
    "text": "2.2 EDA\n\n\nCode\nglimpse(train)\n\n\nRows: 891\nColumns: 12\n$ PassengerId &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ Survived    &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1…\n$ Pclass      &lt;dbl&gt; 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, 3…\n$ Name        &lt;chr&gt; \"Braund, Mr. Owen Harris\", \"Cumings, Mrs. John Bradley (Fl…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"female\", \"female\", \"male\", \"male\", \"mal…\n$ Age         &lt;dbl&gt; 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14, …\n$ SibSp       &lt;dbl&gt; 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"A/5 21171\", \"PC 17599\", \"STON/O2. 3101282\", \"113803\", \"37…\n$ Fare        &lt;dbl&gt; 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625,…\n$ Cabin       &lt;chr&gt; NA, \"C85\", NA, \"C123\", NA, NA, \"E46\", NA, NA, NA, \"G6\", \"C…\n$ Embarked    &lt;chr&gt; \"S\", \"C\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"C\", \"S\", \"S\"…\n\n\n\n\nCode\nglimpse(test)\n\n\nRows: 418\nColumns: 11\n$ PassengerId &lt;dbl&gt; 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903…\n$ Pclass      &lt;dbl&gt; 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 1, 2, 1, 2, 2, 3, 3, 3…\n$ Name        &lt;chr&gt; \"Kelly, Mr. James\", \"Wilkes, Mrs. James (Ellen Needs)\", \"M…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"female\", \"male\", \"femal…\n$ Age         &lt;dbl&gt; 34.5, 47.0, 62.0, 27.0, 22.0, 14.0, 30.0, 26.0, 18.0, 21.0…\n$ SibSp       &lt;dbl&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"330911\", \"363272\", \"240276\", \"315154\", \"3101298\", \"7538\",…\n$ Fare        &lt;dbl&gt; 7.8292, 7.0000, 9.6875, 8.6625, 12.2875, 9.2250, 7.6292, 2…\n$ Cabin       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"B45\", NA,…\n$ Embarked    &lt;chr&gt; \"Q\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"C\", \"S\", \"S\", \"S\"…\n\n\n\n\nCode\ntrain %&gt;%\n  count(Survived)\n\n\n# A tibble: 2 × 2\n  Survived     n\n     &lt;dbl&gt; &lt;int&gt;\n1        0   549\n2        1   342",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#plotting",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#plotting",
    "title": "Level 5 classification Tidy Modeling",
    "section": "2.3 plotting",
    "text": "2.3 plotting\n\n\nCode\nlibrary(skimr)\n\nskim(train)\n\n\n\nData summary\n\n\nName\ntrain\n\n\nNumber of rows\n891\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nName\n0\n1.00\n12\n82\n0\n891\n0\n\n\nSex\n0\n1.00\n4\n6\n0\n2\n0\n\n\nTicket\n0\n1.00\n3\n18\n0\n681\n0\n\n\nCabin\n687\n0.23\n1\n15\n0\n147\n0\n\n\nEmbarked\n2\n1.00\n1\n1\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPassengerId\n0\n1.0\n446.00\n257.35\n1.00\n223.50\n446.00\n668.5\n891.00\n▇▇▇▇▇\n\n\nSurvived\n0\n1.0\n0.38\n0.49\n0.00\n0.00\n0.00\n1.0\n1.00\n▇▁▁▁▅\n\n\nPclass\n0\n1.0\n2.31\n0.84\n1.00\n2.00\n3.00\n3.0\n3.00\n▃▁▃▁▇\n\n\nAge\n177\n0.8\n29.70\n14.53\n0.42\n20.12\n28.00\n38.0\n80.00\n▂▇▅▂▁\n\n\nSibSp\n0\n1.0\n0.52\n1.10\n0.00\n0.00\n0.00\n1.0\n8.00\n▇▁▁▁▁\n\n\nParch\n0\n1.0\n0.38\n0.81\n0.00\n0.00\n0.00\n0.0\n6.00\n▇▁▁▁▁\n\n\nFare\n0\n1.0\n32.20\n49.69\n0.00\n7.91\n14.45\n31.0\n512.33\n▇▁▁▁▁",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#data-split",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#data-split",
    "title": "Level 5 classification Tidy Modeling",
    "section": "2.4 data split",
    "text": "2.4 data split\n\n\nPrepare & Split Data\ntrain_df &lt;- train %&gt;%mutate(Survived=as.factor(Survived)) %&gt;% select(-Name) %&gt;% \n\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=Survived)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=train_df, prop = c(0.7,0.1))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 623  11\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 179  11\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 89 11",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#recipe",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#recipe",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  step_impute_knn(all_predictors(), neighbors = 5) %&gt;%\n  #step_downsample(target_variable) %&gt;%\n  #step_novel(Ticket) %&gt;%\n  step_rm(Ticket) %&gt;% \n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#model",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#model",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.2 model",
    "text": "3.2 model\ntree model with cost_complexity and tree_depth to tune\n\n\nCode\ntune_spec &lt;- \n  decision_tree(\n    cost_complexity = tune(),\n    tree_depth = tune()\n  ) %&gt;% \n  set_engine(\"rpart\") %&gt;% \n  set_mode(\"classification\")\n\n\n\n\nCode\ntune_spec\n\n\nDecision Tree Model Specification (classification)\n\nMain Arguments:\n  cost_complexity = tune()\n  tree_depth = tune()\n\nComputational engine: rpart \n\n\n\n\nCode\ntune_spec |&gt; \n  extract_parameter_set_dials()\n\n\nCollection of 2 parameters for tuning\n\n      identifier            type    object\n cost_complexity cost_complexity nparam[+]\n      tree_depth      tree_depth nparam[+]\n\n\n\n\nCode\nnum_leaves()\n\n\nNumber of Leaves (quantitative)\nRange: [5, 100]\n\n\ntunning grid\n\n\nCode\ngrid_tune &lt;- \n  tune_spec |&gt; \n  extract_parameter_set_dials() |&gt; \n  grid_latin_hypercube(size = 200)\n\n\n\n\nCode\ngrid_tune |&gt; glimpse(width = 200)\n\n\nRows: 200\nColumns: 2\n$ cost_complexity &lt;dbl&gt; 1.604226e-02, 1.240402e-07, 2.627129e-08, 9.554920e-09, 4.573048e-07, 4.382004e-07, 7.226307e-10, 5.853203e-03, 3.898687e-03, 6.021893e-02, 2.083316e-02, 1.088783e-05, 5.4962…\n$ tree_depth      &lt;int&gt; 8, 7, 6, 4, 12, 4, 11, 5, 3, 11, 15, 1, 5, 13, 8, 12, 10, 11, 9, 4, 7, 10, 3, 6, 15, 4, 9, 10, 4, 2, 1, 4, 14, 4, 11, 8, 12, 6, 10, 12, 13, 13, 7, 7, 2, 12, 4, 3, 2, 8, 13, 3…\n\n\n\n\nCode\ngrid_tune %&gt;% count(tree_depth)\n\n\n# A tibble: 15 × 2\n   tree_depth     n\n        &lt;int&gt; &lt;int&gt;\n 1          1     7\n 2          2    15\n 3          3    13\n 4          4    15\n 5          5    14\n 6          6    15\n 7          7    14\n 8          8    14\n 9          9    14\n10         10    15\n11         11    14\n12         12    15\n13         13    14\n14         14    14\n15         15     7",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#workflow",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#workflow",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.3 workflow",
    "text": "3.3 workflow\n\n\nCode\nlibrary(finetune)\ncntl &lt;- control_race(save_pred     = TRUE,\n                          save_workflow = TRUE)\n\n\n\n\nCode\nmodel_workflow =\n  workflow() %&gt;% \n  add_model(tune_spec) %&gt;% \n  add_recipe(data_rec)\n\n\n10 fold for tunning\n\n\nCode\nset.seed(234)\nfolds &lt;- vfold_cv(data_train)",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#training-and-tunning",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#training-and-tunning",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.4 training and tunning",
    "text": "3.4 training and tunning\nusing tune_race_anova() instead of tune_grid()\n\n\nCode\nlibrary(finetune)\ndoParallel::registerDoParallel()\n\ntree_res = model_workflow %&gt;% \n  tune_race_anova(\n    resamples = folds,\n    grid = grid_tune,\n    control   = cntl\n    )\n\n\n\n\nCode\nautoplot(tree_res)\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_race(tree_res)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntree_res %&gt;% \n  collect_metrics()\n\n\n# A tibble: 68 × 8\n   cost_complexity tree_depth .metric  .estimator  mean     n std_err .config   \n             &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;     \n 1   0.000220              10 accuracy binary     0.772    10  0.0149 Preproces…\n 2   0.000220              10 roc_auc  binary     0.821    10  0.0159 Preproces…\n 3   0.0000270             11 accuracy binary     0.774    10  0.0142 Preproces…\n 4   0.0000270             11 roc_auc  binary     0.824    10  0.0150 Preproces…\n 5   0.0000000994          10 accuracy binary     0.764    10  0.0148 Preproces…\n 6   0.0000000994          10 roc_auc  binary     0.826    10  0.0147 Preproces…\n 7   0.0000000238          12 accuracy binary     0.772    10  0.0145 Preproces…\n 8   0.0000000238          12 roc_auc  binary     0.829    10  0.0144 Preproces…\n 9   0.00000000920         13 accuracy binary     0.764    10  0.0123 Preproces…\n10   0.00000000920         13 roc_auc  binary     0.823    10  0.0164 Preproces…\n# ℹ 58 more rows\n\n\n\n\nCode\ntree_res %&gt;%\n  collect_metrics() %&gt;%\n  mutate(tree_depth = factor(tree_depth)) %&gt;%\n  ggplot(aes(cost_complexity, mean, color = tree_depth)) +\n  geom_line(size = 1.5, alpha = 0.6) +\n  geom_point(size = 2) +\n  facet_wrap(~ .metric, scales = \"free\", nrow = 2) +\n  scale_x_log10(labels = scales::label_number()) +\n  scale_color_viridis_d(option = \"plasma\", begin = .9, end = 0)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntree_res %&gt;%\n  show_best()\n\n\n# A tibble: 5 × 8\n  cost_complexity tree_depth .metric .estimator  mean     n std_err .config     \n            &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;       \n1    0.0000000238         12 roc_auc binary     0.829    10  0.0144 Preprocesso…\n2    0.000000749          13 roc_auc binary     0.828    10  0.0177 Preprocesso…\n3    0.000000587          12 roc_auc binary     0.827    10  0.0155 Preprocesso…\n4    0.00000161           12 roc_auc binary     0.827    10  0.0154 Preprocesso…\n5    0.000674              8 roc_auc binary     0.826    10  0.0169 Preprocesso…\n\n\n\n\nCode\nbest_tree &lt;- tree_res %&gt;%\n  select_best()\n\nbest_tree\n\n\n# A tibble: 1 × 3\n  cost_complexity tree_depth .config               \n            &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;                 \n1    0.0000000238         12 Preprocessor1_Model040\n\n\n\n\nCode\nfinal_wf &lt;- \n  model_workflow %&gt;% \n  finalize_workflow(best_tree)\n\n\nfinal_wf\n\n\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_impute_knn()\n• step_rm()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nDecision Tree Model Specification (classification)\n\nMain Arguments:\n  cost_complexity = 2.37513046201816e-08\n  tree_depth = 12\n\nComputational engine: rpart",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#last-fit",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#last-fit",
    "title": "Level 5 classification Tidy Modeling",
    "section": "3.5 last fit",
    "text": "3.5 last fit\n\n\nCode\nfinal_fit &lt;- \n  final_wf %&gt;%\n  last_fit(data_split)",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#evaluate",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#evaluate",
    "title": "Level 5 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\n\n\nCode\nfinal_fit %&gt;%\n  collect_metrics()\n\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.816 Preprocessor1_Model1\n2 roc_auc  binary         0.885 Preprocessor1_Model1\n\n\nAccuracy = (TN + TP)/(TN+TP+FN+FP) = (Number of correct assessments)/Number of all assessments)\nSensitivity = TP/(TP + FN) = (Number of true positive assessment)/(Number of all positive assessment)\nSpecificity = TN/(TN + FP) = (Number of true negative assessment)/(Number of all negative assessment)\n\n\nCode\nall_metrics &lt;- metric_set(accuracy, sens, spec)\n\na=final_fit %&gt;% collect_predictions()\n\nall_metrics(a, truth = target_variable,estimate = .pred_class)\n\n\n# A tibble: 3 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.816\n2 sens     binary         0.903\n3 spec     binary         0.667\n\n\n\n\nCode\nfinal_fit %&gt;%\n  collect_predictions() %&gt;% rename(.pred_T = 2, .pred_F = 3) %&gt;% \n  roc_curve(target_variable, .pred_T) %&gt;% \n  autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nfinal_tree &lt;- extract_workflow(final_fit)\nfinal_tree\n\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: decision_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_impute_knn()\n• step_rm()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\nn= 623 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n   1) root 623 244 0 (0.60834671 0.39165329)  \n     2) Sex_male&gt;=-0.3181194 406  84 0 (0.79310345 0.20689655)  \n       4) Age&gt;=-1.700165 388  70 0 (0.81958763 0.18041237)  \n         8) Pclass&gt;=-0.9236371 305  39 0 (0.87213115 0.12786885)  \n          16) Fare&lt; 0.4362002 295  35 0 (0.88135593 0.11864407)  \n            32) Cabin_E121&gt;=1.925855 26   0 0 (1.00000000 0.00000000) *\n            33) Cabin_E121&lt; 1.925855 269  35 0 (0.86988848 0.13011152)  \n              66) Age&gt;=-0.6289231 209  23 0 (0.88995215 0.11004785) *\n              67) Age&lt; -0.6289231 60  12 0 (0.80000000 0.20000000)  \n               134) Embarked_S&gt;=-0.4915368 49   7 0 (0.85714286 0.14285714)  \n                 268) PassengerId&gt;=0.8547689 16   0 0 (1.00000000 0.00000000) *\n                 269) PassengerId&lt; 0.8547689 33   7 0 (0.78787879 0.21212121)  \n                   538) Fare&lt; -0.543308 8   0 0 (1.00000000 0.00000000) *\n                   539) Fare&gt;=-0.543308 25   7 0 (0.72000000 0.28000000)  \n                    1078) Fare&gt;=-0.5171166 18   3 0 (0.83333333 0.16666667) *\n                    1079) Fare&lt; -0.5171166 7   3 1 (0.42857143 0.57142857) *\n               135) Embarked_S&lt; -0.4915368 11   5 0 (0.54545455 0.45454545) *\n          17) Fare&gt;=0.4362002 10   4 0 (0.60000000 0.40000000) *\n         9) Pclass&lt; -0.9236371 83  31 0 (0.62650602 0.37349398)  \n          18) PassengerId&lt; -1.024023 15   1 0 (0.93333333 0.06666667) *\n          19) PassengerId&gt;=-1.024023 68  30 0 (0.55882353 0.44117647)  \n            38) Age&gt;=0.4276941 48  17 0 (0.64583333 0.35416667)  \n              76) SibSp&lt; -0.03494193 34   9 0 (0.73529412 0.26470588)  \n               152) Fare&gt;=0.01793593 7   0 0 (1.00000000 0.00000000) *\n               153) Fare&lt; 0.01793593 27   9 0 (0.66666667 0.33333333)  \n                 306) Fare&lt; -0.05252826 20   5 0 (0.75000000 0.25000000) *\n                 307) Fare&gt;=-0.05252826 7   3 1 (0.42857143 0.57142857) *\n              77) SibSp&gt;=-0.03494193 14   6 1 (0.42857143 0.57142857) *\n            39) Age&lt; 0.4276941 20   7 1 (0.35000000 0.65000000) *\n       5) Age&lt; -1.700165 18   4 1 (0.22222222 0.77777778) *\n     3) Sex_male&lt; -0.3181194 217  57 1 (0.26267281 0.73732719)  \n       6) Pclass&gt;=0.2640325 91  42 0 (0.53846154 0.46153846)  \n        12) Fare&gt;=-0.1653079 16   1 0 (0.93750000 0.06250000) *\n        13) Fare&lt; -0.1653079 75  34 1 (0.45333333 0.54666667)  \n          26) Embarked_S&gt;=-0.4915368 42  18 0 (0.57142857 0.42857143)  \n            52) Fare&gt;=-0.3321481 9   2 0 (0.77777778 0.22222222) *\n            53) Fare&lt; -0.3321481 33  16 0 (0.51515152 0.48484848)  \n             106) Fare&lt; -0.4658063 23   8 0 (0.65217391 0.34782609)  \n               212) PassengerId&lt; 0.1220595 14   3 0 (0.78571429 0.21428571) *\n               213) PassengerId&gt;=0.1220595 9   4 1 (0.44444444 0.55555556) *\n             107) Fare&gt;=-0.4658063 10   2 1 (0.20000000 0.80000000) *\n          27) Embarked_S&lt; -0.4915368 33  10 1 (0.30303030 0.69696970)  \n            54) Cabin_G6&lt; 1.120627 13   6 0 (0.53846154 0.46153846) *\n            55) Cabin_G6&gt;=1.120627 20   3 1 (0.15000000 0.85000000) *\n       7) Pclass&lt; 0.2640325 126   8 1 (0.06349206 0.93650794) *\n\n...\nand 0 more lines.\n\n\n\n\nCode\nlibrary(vip)\n\nfinal_tree %&gt;% \n  extract_fit_parsnip() %&gt;% \n  vip()",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#save-model",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#save-model",
    "title": "Level 5 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(final_tree)\n\n\n1.14 MB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(final_tree)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 5 classification decision tree hotel model.RDS')",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 5 classification Tidy Modeling.html#make-predication",
    "href": "titanic classification model/Level 5 classification Tidy Modeling.html#make-predication",
    "title": "Level 5 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 5 classification decision tree hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,data_valid)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 0          \n2 1          \n3 1          \n4 0          \n5 0          \n6 0          \n\n\n\n\nCode\nfinal_prediction_data=cbind(data_valid,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 47 13\n         1 10 19\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.742\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                  57\n2 1                  32\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 0              60\n2 1              29\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 47 13\n         1 10 19",
    "crumbs": [
      "titanic classification model",
      "Level 5 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html",
    "title": "Level 6 classification Tidy Modeling",
    "section": "",
    "text": "Level 6 classification Tidy Modeling:",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#read-data",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#read-data",
    "title": "Level 6 classification Tidy Modeling",
    "section": "2.1 read data",
    "text": "2.1 read data\nhttps://www.kaggle.com/competitions/titanic/data\n\n\nCode\nlibrary(tidyverse)\ntrain = read_csv(\"data/train.csv\")\n\ntest=read_csv(\"data/test.csv\")",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#eda",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#eda",
    "title": "Level 6 classification Tidy Modeling",
    "section": "2.2 EDA",
    "text": "2.2 EDA\n\n\nCode\nglimpse(train)\n\n\nRows: 891\nColumns: 12\n$ PassengerId &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ Survived    &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1…\n$ Pclass      &lt;dbl&gt; 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2, 3, 2, 3, 3…\n$ Name        &lt;chr&gt; \"Braund, Mr. Owen Harris\", \"Cumings, Mrs. John Bradley (Fl…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"female\", \"female\", \"male\", \"male\", \"mal…\n$ Age         &lt;dbl&gt; 22, 38, 26, 35, 35, NA, 54, 2, 27, 14, 4, 58, 20, 39, 14, …\n$ SibSp       &lt;dbl&gt; 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 4, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0, 1, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"A/5 21171\", \"PC 17599\", \"STON/O2. 3101282\", \"113803\", \"37…\n$ Fare        &lt;dbl&gt; 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.4583, 51.8625,…\n$ Cabin       &lt;chr&gt; NA, \"C85\", NA, \"C123\", NA, NA, \"E46\", NA, NA, NA, \"G6\", \"C…\n$ Embarked    &lt;chr&gt; \"S\", \"C\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"C\", \"S\", \"S\"…\n\n\n\n\nCode\nglimpse(test)\n\n\nRows: 418\nColumns: 11\n$ PassengerId &lt;dbl&gt; 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903…\n$ Pclass      &lt;dbl&gt; 3, 3, 2, 3, 3, 3, 3, 2, 3, 3, 3, 1, 1, 2, 1, 2, 2, 3, 3, 3…\n$ Name        &lt;chr&gt; \"Kelly, Mr. James\", \"Wilkes, Mrs. James (Ellen Needs)\", \"M…\n$ Sex         &lt;chr&gt; \"male\", \"female\", \"male\", \"male\", \"female\", \"male\", \"femal…\n$ Age         &lt;dbl&gt; 34.5, 47.0, 62.0, 27.0, 22.0, 14.0, 30.0, 26.0, 18.0, 21.0…\n$ SibSp       &lt;dbl&gt; 0, 1, 0, 0, 1, 0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0…\n$ Parch       &lt;dbl&gt; 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Ticket      &lt;chr&gt; \"330911\", \"363272\", \"240276\", \"315154\", \"3101298\", \"7538\",…\n$ Fare        &lt;dbl&gt; 7.8292, 7.0000, 9.6875, 8.6625, 12.2875, 9.2250, 7.6292, 2…\n$ Cabin       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"B45\", NA,…\n$ Embarked    &lt;chr&gt; \"Q\", \"S\", \"Q\", \"S\", \"S\", \"S\", \"Q\", \"S\", \"C\", \"S\", \"S\", \"S\"…\n\n\n\n\nCode\ntrain %&gt;%\n  count(Survived)\n\n\n# A tibble: 2 × 2\n  Survived     n\n     &lt;dbl&gt; &lt;int&gt;\n1        0   549\n2        1   342",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#plotting",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#plotting",
    "title": "Level 6 classification Tidy Modeling",
    "section": "2.3 plotting",
    "text": "2.3 plotting\n\n\nCode\nlibrary(skimr)\n\nskim(train)\n\n\n\nData summary\n\n\nName\ntrain\n\n\nNumber of rows\n891\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nName\n0\n1.00\n12\n82\n0\n891\n0\n\n\nSex\n0\n1.00\n4\n6\n0\n2\n0\n\n\nTicket\n0\n1.00\n3\n18\n0\n681\n0\n\n\nCabin\n687\n0.23\n1\n15\n0\n147\n0\n\n\nEmbarked\n2\n1.00\n1\n1\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nPassengerId\n0\n1.0\n446.00\n257.35\n1.00\n223.50\n446.00\n668.5\n891.00\n▇▇▇▇▇\n\n\nSurvived\n0\n1.0\n0.38\n0.49\n0.00\n0.00\n0.00\n1.0\n1.00\n▇▁▁▁▅\n\n\nPclass\n0\n1.0\n2.31\n0.84\n1.00\n2.00\n3.00\n3.0\n3.00\n▃▁▃▁▇\n\n\nAge\n177\n0.8\n29.70\n14.53\n0.42\n20.12\n28.00\n38.0\n80.00\n▂▇▅▂▁\n\n\nSibSp\n0\n1.0\n0.52\n1.10\n0.00\n0.00\n0.00\n1.0\n8.00\n▇▁▁▁▁\n\n\nParch\n0\n1.0\n0.38\n0.81\n0.00\n0.00\n0.00\n0.0\n6.00\n▇▁▁▁▁\n\n\nFare\n0\n1.0\n32.20\n49.69\n0.00\n7.91\n14.45\n31.0\n512.33\n▇▁▁▁▁",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#data-split",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#data-split",
    "title": "Level 6 classification Tidy Modeling",
    "section": "2.4 data split",
    "text": "2.4 data split\n\n\nPrepare & Split Data\ntrain_df &lt;- train %&gt;%mutate(Survived=as.factor(Survived)) %&gt;% select(-Name) %&gt;% \n\n  mutate_if(is.character, factor) %&gt;% rename(target_variable=Survived)\n\n\n\n\nCode\nset.seed(1234)\n\ndata_split &lt;- initial_validation_split(data=train_df, prop = c(0.7,0.1))\n\ndata_train=training(data_split)  \n\ndata_test=testing(data_split)  \n\ndata_valid=validation(data_split)\n\n\n\n\nCode\ndim(data_train)\n\n\n[1] 623  11\n\n\n\n\nCode\ndim(data_test)\n\n\n[1] 179  11\n\n\n\n\nCode\ndim(data_valid)\n\n\n[1] 89 11",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#recipe",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#recipe",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.1 recipe",
    "text": "3.1 recipe\n\n\nCode\ndata_rec &lt;- recipe(target_variable ~ ., data = data_train) %&gt;%\n  step_impute_knn(all_predictors(), neighbors = 5) %&gt;%\n  #step_downsample(target_variable) %&gt;%\n  #step_novel(Ticket) %&gt;%\n  step_rm(Ticket) %&gt;% \n  step_dummy(all_nominal(), -all_outcomes()) %&gt;%\n  step_zv(all_numeric()) %&gt;%\n  step_normalize(all_numeric())",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#model",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#model",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.2 model",
    "text": "3.2 model\n\n3.2.1 decision tree model with cost_complexity and tree_depth to tune\n\n\nCode\ntune_spec &lt;- \n  decision_tree(\n    cost_complexity = tune(),\n    tree_depth = tune()\n  ) %&gt;% \n  set_engine(\"rpart\") %&gt;% \n  set_mode(\"classification\")\n\n\n\n\nCode\ntune_spec |&gt; \n  extract_parameter_set_dials()\n\n\nCollection of 2 parameters for tuning\n\n      identifier            type    object\n cost_complexity cost_complexity nparam[+]\n      tree_depth      tree_depth nparam[+]\n\n\n\n\nCode\ndecision_tree_tune_grid &lt;- \n  tune_spec |&gt; \n  extract_parameter_set_dials() |&gt; \n  grid_latin_hypercube(size = 100)\n\n\n\n\n3.2.2 logistic glm model\n\n\nCode\nglm_spec &lt;-\n  logistic_reg(penalty = 1) |&gt;\n  set_engine(\"glm\")\n\n\n\n\n3.2.3 KNN model\n\n\nCode\nknn_spec &lt;- nearest_neighbor() %&gt;%\n  set_engine(\"kknn\") %&gt;%\n  set_mode(\"classification\")\n\nknn_spec\n\n\nK-Nearest Neighbor Model Specification (classification)\n\nComputational engine: kknn \n\n\n\n\n3.2.4 XG Boost tree\n\n\nCode\nxgb_spec &lt;- boost_tree(\n  trees = 10,\n  tree_depth = tune(), min_n = tune(),\n  loss_reduction = tune(),                     ## first three: model complexity\n  sample_size = tune(),  mtry=tune(),       ## randomness\n  learn_rate = tune()                          ## step size\n) %&gt;%\n  set_engine(\"xgboost\") %&gt;%\n  set_mode(\"classification\")\n\nxgb_spec\n\n\nBoosted Tree Model Specification (classification)\n\nMain Arguments:\n  mtry = tune()\n  trees = 10\n  min_n = tune()\n  tree_depth = tune()\n  learn_rate = tune()\n  loss_reduction = tune()\n  sample_size = tune()\n\nComputational engine: xgboost \n\n\nxgb tunning grid\n\n\nCode\nxgb_tune_grid= grid_latin_hypercube(\n  tree_depth(),learn_rate(),loss_reduction(),min_n(),\n  sample_size=sample_prop(),finalize(mtry(),data_train),\n  size=50)\n\nhead(xgb_tune_grid)\n\n\n# A tibble: 6 × 6\n  tree_depth learn_rate loss_reduction min_n sample_size  mtry\n       &lt;int&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt; &lt;int&gt;\n1          6   3.33e- 5       2.32e+ 1    34       0.746     2\n2          6   6.19e- 4       2.32e- 2    22       0.580     5\n3          5   3.66e- 2       4.50e-10    24       0.949     1\n4          9   9.47e-10       2.06e- 5     2       0.340    11\n5          9   9.81e- 2       5.39e- 8     7       0.787     3\n6         12   2.50e- 6       6.99e- 3    16       0.151     5\n\n\n\n\n3.2.5 lightGBM Boost tree\n\n\nCode\nlightgbm_spec &lt;- boost_tree(\n  trees = 10,\n  tree_depth = tune(), min_n = tune(),\n  loss_reduction = tune(),                     ## first three: model complexity\n  sample_size = tune(),   mtry=tune(),     ## randomness\n  learn_rate = tune()                          ## step size\n) %&gt;%\n  set_engine(\"lightgbm\") %&gt;%\n  set_mode(\"classification\")\n\nlightgbm_spec\n\n\nBoosted Tree Model Specification (classification)\n\nMain Arguments:\n  mtry = tune()\n  trees = 10\n  min_n = tune()\n  tree_depth = tune()\n  learn_rate = tune()\n  loss_reduction = tune()\n  sample_size = tune()\n\nComputational engine: lightgbm \n\n\n\n\nCode\nlightgbm_grid= grid_latin_hypercube(\n  tree_depth(),learn_rate(),loss_reduction(),min_n(),\n  sample_size=sample_prop(),finalize(mtry(),data_train),\n  size=50)\n\nhead(lightgbm_grid)\n\n\n# A tibble: 6 × 6\n  tree_depth   learn_rate loss_reduction min_n sample_size  mtry\n       &lt;int&gt;        &lt;dbl&gt;          &lt;dbl&gt; &lt;int&gt;       &lt;dbl&gt; &lt;int&gt;\n1         12 0.00000156         6.09e-10    14       0.917     6\n2          3 0.0134             5.25e- 6    22       0.151     1\n3          2 0.0000000634       1.79e-10    15       0.132     5\n4          6 0.0206             1.84e- 5    19       0.863     9\n5          6 0.00000358         4.57e- 1    38       0.818     8\n6          4 0.00384            3.55e- 4    15       0.552     4",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#workflow-set",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#workflow-set",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.3 workflow set",
    "text": "3.3 workflow set\n\n\nCode\nlibrary(finetune)\ncntl   &lt;- control_grid(save_pred     = TRUE,\n                       save_workflow = TRUE)\n\n\nusing workflow set instead of workflow to combine many models.\n\n\nCode\nworkflow_set &lt;-\n  workflow_set(\n    preproc = list(data_rec),\n    models = list(glm   = glm_spec,\n                  tree  = tune_spec,\n                  knn=knn_spec,\n                  xgb=xgb_spec,\n                  lightgbm=lightgbm_spec\n                  )\n  ) %&gt;% option_add(grid = decision_tree_tune_grid, id = \"recipe_tree\")  %&gt;% \n  option_add(grid = xgb_tune_grid, id = \"recipe_xgb\")  %&gt;% \n  option_add(grid = lightgbm_grid, id = \"recipe_lightgbm\") \n\n\n\n\nCode\nworkflow_set %&gt;%\n  option_add_parameters()\n\n\n# A workflow set/tibble: 5 × 4\n  wflow_id        info             option    result    \n  &lt;chr&gt;           &lt;list&gt;           &lt;list&gt;    &lt;list&gt;    \n1 recipe_glm      &lt;tibble [1 × 4]&gt; &lt;opts[0]&gt; &lt;list [0]&gt;\n2 recipe_tree     &lt;tibble [1 × 4]&gt; &lt;opts[2]&gt; &lt;list [0]&gt;\n3 recipe_knn      &lt;tibble [1 × 4]&gt; &lt;opts[0]&gt; &lt;list [0]&gt;\n4 recipe_xgb      &lt;tibble [1 × 4]&gt; &lt;opts[2]&gt; &lt;list [0]&gt;\n5 recipe_lightgbm &lt;tibble [1 × 4]&gt; &lt;opts[2]&gt; &lt;list [0]&gt;\n\n\n10 fold for tunning\n\n\nCode\nset.seed(234)\nfolds &lt;- vfold_cv(data_train)",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#training-and-tunning",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#training-and-tunning",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.4 training and tunning",
    "text": "3.4 training and tunning\n\n\nCode\nlibrary(finetune)\ndoParallel::registerDoParallel()\n\nmodel_set_res = workflow_set  %&gt;% \n  workflow_map(\n              grid = 20,\n               resamples = folds,\n               control = cntl\n  )\n\n\n\n\nCode\nrank_results(model_set_res,\n             rank_metric = \"roc_auc\",\n             select_best = TRUE)  %&gt;% \n  gt()\n\n\n\n\n\n\n\n\n\nwflow_id\n.config\n.metric\nmean\nstd_err\nn\npreprocessor\nmodel\nrank\n\n\n\n\nrecipe_lightgbm\nPreprocessor1_Model11\naccuracy\n0.7936508\nNA\n1\nrecipe\nboost_tree\n1\n\n\nrecipe_lightgbm\nPreprocessor1_Model11\nroc_auc\n0.8580931\nNA\n1\nrecipe\nboost_tree\n1\n\n\nrecipe_xgb\nPreprocessor1_Model15\naccuracy\n0.7753200\n0.01560805\n10\nrecipe\nboost_tree\n2\n\n\nrecipe_xgb\nPreprocessor1_Model15\nroc_auc\n0.8420451\n0.01413536\n10\nrecipe\nboost_tree\n2\n\n\nrecipe_tree\nPreprocessor1_Model16\naccuracy\n0.7737071\n0.01347475\n10\nrecipe\ndecision_tree\n3\n\n\nrecipe_tree\nPreprocessor1_Model16\nroc_auc\n0.8286531\n0.01502116\n10\nrecipe\ndecision_tree\n3\n\n\nrecipe_knn\nPreprocessor1_Model1\naccuracy\n0.7063236\n0.01911126\n10\nrecipe\nnearest_neighbor\n4\n\n\nrecipe_knn\nPreprocessor1_Model1\nroc_auc\n0.7420401\n0.01885929\n10\nrecipe\nnearest_neighbor\n4\n\n\nrecipe_glm\nPreprocessor1_Model1\naccuracy\n0.7398105\n0.01844242\n10\nrecipe\nlogistic_reg\n5\n\n\nrecipe_glm\nPreprocessor1_Model1\nroc_auc\n0.7301929\n0.03339075\n10\nrecipe\nlogistic_reg\n5\n\n\n\n\n\n\n\n\n\n\nCode\nmodel_set_res |&gt; autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nmodel_set_res |&gt; autoplot( id= 'recipe_xgb')\n\n\n\n\n\n\n\n\n\nselect best model:logistic glm model\n\n\nCode\nbest_model_id &lt;- \"recipe_xgb\"\n\n\nselect best parameters\n\n\nCode\nbest_fit &lt;-\n  model_set_res |&gt;\n  extract_workflow_set_result(best_model_id) |&gt;\n  select_best(metric = \"accuracy\")\n\n\n\n\nCode\n# create workflow for best model\nfinal_workflow &lt;-\n  model_set_res |&gt;\n  extract_workflow(best_model_id) |&gt;\n  finalize_workflow(best_fit)",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#last-fit",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#last-fit",
    "title": "Level 6 classification Tidy Modeling",
    "section": "3.5 last fit",
    "text": "3.5 last fit\n\n\nCode\nfinal_fit &lt;-\n  final_workflow |&gt;\n  last_fit(data_split)",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#evaluate",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#evaluate",
    "title": "Level 6 classification Tidy Modeling",
    "section": "4.1 Evaluate",
    "text": "4.1 Evaluate\n\n\nCode\nfinal_fit %&gt;%\n  collect_metrics()\n\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.749 Preprocessor1_Model1\n2 roc_auc  binary         0.865 Preprocessor1_Model1\n\n\nAccuracy = (TN + TP)/(TN+TP+FN+FP) = (Number of correct assessments)/Number of all assessments)\nSensitivity = TP/(TP + FN) = (Number of true positive assessment)/(Number of all positive assessment)\nSpecificity = TN/(TN + FP) = (Number of true negative assessment)/(Number of all negative assessment)\n\n\nCode\nall_metrics &lt;- metric_set(accuracy, sens, spec)\n\na=final_fit %&gt;% collect_predictions()\n\nall_metrics(a, truth = target_variable,estimate = .pred_class)\n\n\n# A tibble: 3 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.749\n2 sens     binary         0.912\n3 spec     binary         0.470\n\n\n\n\nCode\nfinal_fit %&gt;%\n  collect_predictions() %&gt;% rename(.pred_T = 2, .pred_F = 3) %&gt;% \n  roc_curve(target_variable, .pred_T) %&gt;% \n  autoplot()\n\n\n\n\n\n\n\n\n\n\n\nCode\nfinal_tree &lt;- extract_workflow(final_fit)\nfinal_tree\n\n\n══ Workflow [trained] ══════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: boost_tree()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_impute_knn()\n• step_rm()\n• step_dummy()\n• step_zv()\n• step_normalize()\n\n── Model ───────────────────────────────────────────────────────────────────────\n##### xgb.Booster\nraw: 12 Kb \ncall:\n  xgboost::xgb.train(params = list(eta = 0.0113002733713796, max_depth = 13L, \n    gamma = 8.57184596924471e-10, colsample_bytree = 1, colsample_bynode = 0.354330708661417, \n    min_child_weight = 24L, subsample = 0.686377208979102), data = x$data, \n    nrounds = 10, watchlist = x$watchlist, verbose = 0, nthread = 1, \n    objective = \"binary:logistic\")\nparams (as set within xgb.train):\n  eta = \"0.0113002733713796\", max_depth = \"13\", gamma = \"8.57184596924471e-10\", colsample_bytree = \"1\", colsample_bynode = \"0.354330708661417\", min_child_weight = \"24\", subsample = \"0.686377208979102\", nthread = \"1\", objective = \"binary:logistic\", validate_parameters = \"TRUE\"\nxgb.attributes:\n  niter\ncallbacks:\n  cb.evaluation.log()\n# of features: 127 \nniter: 10\nnfeatures : 127 \nevaluation_log:\n     iter training_logloss\n    &lt;num&gt;            &lt;num&gt;\n        1        0.6894626\n        2        0.6878894\n---                       \n        9        0.6749532\n       10        0.6735614\n\n\n\n\nCode\nlibrary(vip)\n\nfinal_tree %&gt;% \n  extract_fit_parsnip() %&gt;% \n  vip()",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#save-model",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#save-model",
    "title": "Level 6 classification Tidy Modeling",
    "section": "4.2 save model",
    "text": "4.2 save model\ncheck model size\n\n\nCode\nlibrary(lobstr)\nobj_size(final_tree)\n\n\n1.03 MB\n\n\nbundle and save model\n\n\nCode\nlibrary(bundle)\nmodel_bundle &lt;- bundle(final_tree)\n\n\n\n\nCode\nsaveRDS(model_bundle,'level 6 classification decision tree hotel model.RDS')",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  },
  {
    "objectID": "titanic classification model/Level 6 classification Tidy Modeling.html#make-predication",
    "href": "titanic classification model/Level 6 classification Tidy Modeling.html#make-predication",
    "title": "Level 6 classification Tidy Modeling",
    "section": "4.3 make predication",
    "text": "4.3 make predication\nload model and unbundle\n\n\nCode\nmodel=readRDS('level 6 classification decision tree hotel model.RDS')\n\nmodel &lt;- unbundle(model)\n\n\n\n\nCode\nfinal_prediction=predict(model,data_valid)\n\nhead(final_prediction)\n\n\n# A tibble: 6 × 1\n  .pred_class\n  &lt;fct&gt;      \n1 0          \n2 0          \n3 1          \n4 0          \n5 0          \n6 0          \n\n\n\n\nCode\nfinal_prediction_data=cbind(data_valid,final_prediction)\n\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 53 15\n         1  4 17\n\n\n\n\nCode\naccuracy(final_prediction_data, truth = target_variable, estimate = .pred_class)\n\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.787\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(target_variable)%&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   target_variable [2]\n  target_variable     n\n  &lt;fct&gt;           &lt;int&gt;\n1 0                  57\n2 1                  32\n\n\n\n\nCode\nfinal_prediction_data %&gt;% group_by(.pred_class) %&gt;% count()\n\n\n# A tibble: 2 × 2\n# Groups:   .pred_class [2]\n  .pred_class     n\n  &lt;fct&gt;       &lt;int&gt;\n1 0              68\n2 1              21\n\n\n\n\nCode\nconf_mat(final_prediction_data, truth = target_variable,\n    estimate = .pred_class)\n\n\n          Truth\nPrediction  0  1\n         0 53 15\n         1  4 17",
    "crumbs": [
      "titanic classification model",
      "Level 6 classification Tidy Modeling"
    ]
  }
]