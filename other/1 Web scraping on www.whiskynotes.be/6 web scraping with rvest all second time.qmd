---
title: "All year all topic second time"
subtitle: "with whiskynote.be data"
author: "Tony Duan"

execute:
  warning: false
  error: false
  eval: false
format:
  html:
    toc: true
    toc-location: right
    code-fold: show
    code-tools: true
    number-sections: true
    code-block-bg: true
    code-block-border-left: "#31BAE9"
---

```{r}
library(tidyverse)
library(rvest)
```


# one page function

```{r}
one_page_function <- function(review_url){
  #review_url='https://www.whiskynotes.be/2010/bowmore/bowmore-9y-1997-cigar-malt/'
  
 #review_url= 'https://www.whiskynotes.be/2013/whisky-bars/whisky-bar-oishii-hasselt/'
  
  print(review_url)
  review_page <- read_html(review_url)

  page_class=review_page  %>% html_elements(".cat-links a") %>% html_text2()
  page_class=str_flatten(page_class,collapse = "-")
  
  bottle_name=review_page  %>% html_elements(".entry-content h2") %>% html_text2()
  # remove empty
  bottle_name=bottle_name[nzchar(bottle_name)]
  # remove space element
  bottle_name=bottle_name[nchar(bottle_name)>2]
  
  
  # remove ? mark non bottle name element
  bottle_name=bottle_name[!bottle_name%>% str_detect("\\?")]
  # remove Drams Delivered revisited  non bottle name element
  bottle_name=bottle_name[ !bottle_name == 'Drams Delivered revisited']
  print(bottle_name) 
  
  bottle_review_raw=review_page  %>% html_elements("p") %>% html_text()
  bottle_review=unlist(strsplit(bottle_review_raw,"(?= Nose: )",perl = TRUE))
  bottle_review=unlist(strsplit(bottle_review,"(?= Mouth: )",perl = TRUE))
   bottle_review=unlist(strsplit(bottle_review,"(?= Finish: )",perl = TRUE))
  
  bottle_review_Nose=bottle_review[bottle_review %>% str_detect('Nose:|Attractive nose:')]
  bottle_review_Nose=bottle_review_Nose[nzchar(bottle_review_Nose)]

  bottle_review_Mouth=bottle_review[bottle_review %>% str_detect('Mouth:')]
  bottle_review_Mouth=bottle_review_Mouth[nzchar(bottle_review_Mouth)]

  bottle_review_Finish=bottle_review[bottle_review %>% str_detect('Finish:')]
  bottle_review_Finish=bottle_review_Finish[nzchar(bottle_review_Finish)]
  
  ########### add dummy score if there is no score review #########
  # bottle_review_Finish_score=bottle_review[bottle_review %>% str_detect('Finish:|Score:')][-1]
 
  # # bottle_review_Finish_score2=bottle_review_Finish_score
  
  
  # order=1
  # for (word in bottle_review_Finish_score){
  #   print(word)
  #   print(order)
  #   print(order%%2)
  #   print(word %>% str_detect('Score:'))
  #   print(order%%2==0 & word %>% str_detect('Score:')==FALSE)
  #   if (order%%2==0 & word %>% str_detect('Score:')==FALSE){
  #     print('adding add dummy score if there is no score review ')
  #     bottle_review_Finish_score2=append(bottle_review_Finish_score2,'Score:00/100',order-1)
  #   }else{
  #   }
  #   order=order+1
  #   }
################################################
    
#"^[:digit:]+$" 
################# score  
  first_bottle_score=review_page  %>% html_elements(".entry-score") %>% html_text2()

  bottle_score=review_page  %>% html_elements("strong") %>% html_text2()
  
  bottle_score2=bottle_score %>% str_remove("100")%>% str_remove("/") %>% str_remove("/100.") %>% str_remove("/100")%>% str_remove("Score:")%>%str_trim() %>%  str_match("^[0-9]{2}$") %>% as.data.frame() %>% filter(is.na(V1)==FALSE)
  
  bottle_score2=bottle_score2 %>% mutate(V1=str_replace(V1,'/100',''))%>% rename(all_page_score=V1) 

# if no other score then use first score
  if(identical(bottle_score, character(0))==TRUE|nrow(bottle_score2)==0){
    all_page_score=first_bottle_score %>% tibble()%>% rename(all_page_score='.') 
    
# if no first score then use other score
  }else if (identical(first_bottle_score, character(0))==TRUE){
    all_page_score=bottle_score2
    
# the other score have same length as bottle.aka the first score appear twices
    
  }else if (nrow(bottle_score2)==length(bottle_review_Nose)){
    all_page_score=bottle_score2
    
# if both have first score and other score then combine    
  }else{
  #bottle_score=bottle_score %>% str_match('[0-9][0-9]') %>% as.data.frame() %>% filter(is.na(V1)==FALSE)
  all_page_score=rbind(first_bottle_score,bottle_score2)
  }
##############################
  page_published_date=review_page  %>% html_elements(".published") %>% html_text2()


  page_title=review_page  %>% html_elements(".entry-title") %>% html_text2()
  
  if(nrow(all_page_score)!=length(bottle_name)){all_page_score=0}
  if(length(bottle_review_Nose)!=length(bottle_name)){bottle_review_Nose='no comment'}
  if(length(bottle_review_Mouth)!=length(bottle_name)){bottle_review_Mouth='no comment'}
  if(length(bottle_review_Finish)!=length(bottle_name)){bottle_review_Finish='no comment'}
  
  
  
  one_page_review=tibble(bottle_name,bottle_review_Nose,bottle_review_Mouth,bottle_review_Finish,all_page_score,page_class,page_published_date,page_title,review_url) 
  

  Sys.sleep(runif(n=1, min=0.1, max=0.8))
  #print(one_page_review)
  print(dim(one_page_review))
  #remove(review_page)
  return(one_page_review)
}
```

# read in all link 

```{r}
library(readxl)
topic_link=read_excel('./output/all year page.xlsx',sheet='topic')
```

```{r}
glimpse(topic_link)
```

exclude news

```{r}
news=topic_link$topic_link_list %>% str_detect('whisky-news|whisky-bar')
```

```{r}
topic_link002=topic_link$topic_link_list[!news]

```

exclude no score page:

```{r}
no_score_page=c(
"https://www.whiskynotes.be/2011/blends/bloggers-blend-masterofmalt/"         
,"https://www.whiskynotes.be/2012/glenfarclas/glenfarclas-1968-mytribute-5241/"
,"https://www.whiskynotes.be/2012/ancnoc/ancnoc-distillery-visit/"             
,"https://www.whiskynotes.be/2012/distillery-visits/old-pulteney/"             
,"https://www.whiskynotes.be/2013/blends/cutty-sark-storm-appletiser/"         
,"https://www.whiskynotes.be/2013/glenfarclas/glenfarclas-verticale/"  
)
```


# read in donload page:

```{r}
finish_download=read_excel('./output/all_page_bottle_list_all.xlsx')
```


```{r}
finish_download_topic_link=unique(finish_download$review_url)
```


```{r}
length(finish_download_topic_link)
```


```{r}
non_finish_link=topic_link002 [! topic_link002 %in% c(finish_download_topic_link,no_score_page)]
```

```{r}
length(non_finish_link)
```





# download non download page:
```{r}

library(openxlsx)
page=non_finish_link

all_page_review_list=data.frame()

start_time=Sys.time()
print(paste0("Start time: ", start_time))

loop_num=0

for (i in page){
   tryCatch({
#############################     
   loop_num=loop_num+1
   print(paste0("Running loop No.",which(page==i)))
         
   print(paste0("current time: ", Sys.time()))
   
   output=one_page_function(i) %>% mutate(loop_num=loop_num)

   all_page_review_list=rbind(all_page_review_list,output)
   
   
   print(paste0("Used time: ", Sys.time()-start_time))
   # ouput every 20 page
   if (loop_num%%20==0){
      print(paste0("#########################. output to excel: ", loop_num))
      all_page_review_list_total=rbind(finish_download,all_page_review_list)
      write.xlsx(all_page_review_list_total,'./output/all_page_bottle_list_v2.xlsx')
     }
    
   
#############################        
    }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

end_time=Sys.time()
print(paste0("End time: ", end_time))
print(paste0("total used time: ", end_time-start_time))


output=one_page_function(i) %>% mutate(loop_num=loop_num)

all_page_review_list=rbind(all_page_review_list,output)
   
write.xlsx(all_page_review_list_total,'./output/all_page_bottle_list_v2.xlsx')
```

