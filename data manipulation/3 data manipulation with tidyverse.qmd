---
title: "Data manipulation with tidyverse"


execute:
  warning: false
  error: false
format:
  html:
    toc: true
    toc-location: right
    code-fold: show
    code-tools: true
    number-sections: true
    code-block-bg: true
    code-block-border-left: "#31BAE9"
---

dplyr is a grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges.


![](images/logo.png){width="231"}


## load package

```{r}
library(tidyverse)
```


```{r}
packageVersion("dplyr")
```




```{r}
data(mtcars)
small_mtcars = mtcars %>% select(cyl, mpg,hp) %>% head()

```


## make rowname into one column

```{r}
library(tibble)
small_mtcars=rownames_to_column(small_mtcars, var="car_name")

small_mtcars %>% head
```


## select column

### get column names

```{r}
names(small_mtcars)
```

### select by name


```{r}
mtcars %>% select(cyl, mpg,hp) 
```




### select columns by name match with 'p'



### select columns by index

#### select first and 3rd columns


#### select first to 3rd columns


## drop column

```{r}
small_mtcars %>% select(-cyl)
```

## Renaming column

```{r}
small_mtcars %>%rename(new_cyl=cyl)
```

## Create column

### Mutate

```{r}
small_mtcars %>%mutate(new_cyl=cyl+1)
```

### Transmute,create column and only keep this column

```{r}
small_mtcars %>%transmute(new_cyl=cyl+1)
```

## Filter rows

```{r}
small_mtcars %>%filter(cyl>5)
```

### Filters with AND conditions
```{r}
small_mtcars %>%filter(cyl>5,mpg>20)
```

### Filters with OR conditions

```{r}
small_mtcars %>%filter(cyl>5|mpg>20)
```



### filter row with index

#### 5th rows

```{r}
small_mtcars %>% slice(5)
```



#### 1 and 5h rows

```{r}
small_mtcars %>% slice(1:5)
```

#### get ramdon 5 rows

```{r}
small_mtcars %>% sample_n(5)
```


## Append

### append by row


```{r}
small_mtcars %>% rbind(small_mtcars)
```



### append by column
```{r}
small_mtcars %>% cbind(small_mtcars)
```

### Dropping NA values

### keep NA values

## group by

### average,min,max,sum

```{r}
small_mtcars %>%group_by(cyl) %>% summarise(avg_mpg=mean(mpg)
                                            ,min_mpg=min(mpg)
                                            ,max_mpg=max(mpg)
                                            ,sum_mpg=sum(mpg))
```

### count record and count distinct record

```{r}
small_mtcars %>%group_by(cyl) %>% summarise(n_mpg=n()
                                            ,distinct_n_mpg=n_distinct(mpg)
                                            
                                            )
```
## order rows

```{r}
small_mtcars %>%arrange(cyl) 
```

### Sort in descending order

```{r}
small_mtcars %>%arrange(desc(cyl) )
```
### Arrange by multiple variables

```{r}
small_mtcars %>%arrange(cyl,mpg)
```


## join


```{r}
left_data=small_mtcars %>% slice(1:2)
right_data=small_mtcars %>% slice(2:4)
```

```{r}
left_data
```

```{r}
right_data
```


### inner_join


```{r}
data=left_data %>% inner_join(right_data,join_by(car_name== car_name), suffix = c("_l", "._r"))
data
```




### left join


```{r}
data=left_data %>% left_join(right_data,join_by(car_name== car_name), suffix = c("_l", "._r"))
data
```

### full join


```{r}
data=left_data %>% full_join(right_data,join_by(car_name== car_name), suffix = c("_l", "._r"))
data
```


### anti join

anti_join() return all rows from x without a match in y

```{r}

data=left_data %>% anti_join(right_data,join_by(car_name== car_name))
data
```



## Reshape tables

```{r}
olddata_wide <- read.table(header=TRUE, text='
 subject sex control cond1 cond2
       1   M     7.9  12.3  10.7
       2   F     6.3  10.6  11.1
       3   F     9.5  13.1  13.8
       4   M    11.5  13.4  12.9
')
```

```{r}
olddata_wide
```


### Gather data long(wide to long)

```{r}
data_long=olddata_wide %>%
  pivot_longer(!c(subject,sex), names_to = 'income', values_to = 'DATA')

data_long
```


### Spread data wide (long to wide)
```{r}
data_wide=data_long %>%
  pivot_wider(names_from = income, values_from = DATA)

data_wide
```


## string


### upper case


### lower case



### match


### concatenation


### replace



### extract



## date

## dataframe to other data format

### dataframe to vector

```{r}
data=small_mtcars$cyl
data
```


```{r}
class(data)
```


### dataframe to matrix

```{r}
data=data.matrix(small_mtcars)
data
```


```{r}
class(data)
```


### dataframe to list

```{r}
data=as.list(small_mtcars)
data
```

```{r}
class(data)
```

# reference:

https://dplyr.tidyverse.org/
