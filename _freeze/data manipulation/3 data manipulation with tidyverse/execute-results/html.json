{
  "hash": "f08e9e440e0a85e8c09e24765cc39fb5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data manipulation with tidyverse\"\n\nauthor: \"Tony Duan\"\n\nexecute:\n  warning: false\n  error: false\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n\ndplyr is a grammar of data manipulation, providing a consistent set of verbs that help you solve the most common data manipulation challenges.\n\n\n![](images/logo.png){width=\"231\"}\n\n\n## load package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npackageVersion(\"dplyr\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] '1.1.4'\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(mtcars)\nsmall_mtcars = mtcars %>% select(cyl, mpg,hp) %>% head()\n```\n:::\n\n\n\n## make rowname into one column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tibble)\nsmall_mtcars=rownames_to_column(small_mtcars, var=\"car_name\")\n\nsmall_mtcars %>% head\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp\n1         Mazda RX4   6 21.0 110\n2     Mazda RX4 Wag   6 21.0 110\n3        Datsun 710   4 22.8  93\n4    Hornet 4 Drive   6 21.4 110\n5 Hornet Sportabout   8 18.7 175\n6           Valiant   6 18.1 105\n```\n\n\n:::\n:::\n\n\n\n## select column\n\n### get column names\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(small_mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"car_name\" \"cyl\"      \"mpg\"      \"hp\"      \n```\n\n\n:::\n:::\n\n\n### select by name\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>% select(cyl, mpg,hp) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    cyl  mpg  hp\nMazda RX4             6 21.0 110\nMazda RX4 Wag         6 21.0 110\nDatsun 710            4 22.8  93\nHornet 4 Drive        6 21.4 110\nHornet Sportabout     8 18.7 175\nValiant               6 18.1 105\nDuster 360            8 14.3 245\nMerc 240D             4 24.4  62\nMerc 230              4 22.8  95\nMerc 280              6 19.2 123\nMerc 280C             6 17.8 123\nMerc 450SE            8 16.4 180\nMerc 450SL            8 17.3 180\nMerc 450SLC           8 15.2 180\nCadillac Fleetwood    8 10.4 205\nLincoln Continental   8 10.4 215\nChrysler Imperial     8 14.7 230\nFiat 128              4 32.4  66\nHonda Civic           4 30.4  52\nToyota Corolla        4 33.9  65\nToyota Corona         4 21.5  97\nDodge Challenger      8 15.5 150\nAMC Javelin           8 15.2 150\nCamaro Z28            8 13.3 245\nPontiac Firebird      8 19.2 175\nFiat X1-9             4 27.3  66\nPorsche 914-2         4 26.0  91\nLotus Europa          4 30.4 113\nFord Pantera L        8 15.8 264\nFerrari Dino          6 19.7 175\nMaserati Bora         8 15.0 335\nVolvo 142E            4 21.4 109\n```\n\n\n:::\n:::\n\n\n\n\n\n### select columns by name match with 'p'\n\n\n\n### select columns by index\n\n#### select first and 3rd columns\n\n\n#### select first to 3rd columns\n\n\n## drop column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>% select(-cyl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name  mpg  hp\n1         Mazda RX4 21.0 110\n2     Mazda RX4 Wag 21.0 110\n3        Datsun 710 22.8  93\n4    Hornet 4 Drive 21.4 110\n5 Hornet Sportabout 18.7 175\n6           Valiant 18.1 105\n```\n\n\n:::\n:::\n\n\n## Renaming column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%rename(new_cyl=cyl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name new_cyl  mpg  hp\n1         Mazda RX4       6 21.0 110\n2     Mazda RX4 Wag       6 21.0 110\n3        Datsun 710       4 22.8  93\n4    Hornet 4 Drive       6 21.4 110\n5 Hornet Sportabout       8 18.7 175\n6           Valiant       6 18.1 105\n```\n\n\n:::\n:::\n\n\n## Create column\n\n### Mutate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%mutate(new_cyl=cyl+1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp new_cyl\n1         Mazda RX4   6 21.0 110       7\n2     Mazda RX4 Wag   6 21.0 110       7\n3        Datsun 710   4 22.8  93       5\n4    Hornet 4 Drive   6 21.4 110       7\n5 Hornet Sportabout   8 18.7 175       9\n6           Valiant   6 18.1 105       7\n```\n\n\n:::\n:::\n\n\n### Transmute,create column and only keep this column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%transmute(new_cyl=cyl+1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  new_cyl\n1       7\n2       7\n3       5\n4       7\n5       9\n6       7\n```\n\n\n:::\n:::\n\n\n## Filter rows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%filter(cyl>5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp\n1         Mazda RX4   6 21.0 110\n2     Mazda RX4 Wag   6 21.0 110\n3    Hornet 4 Drive   6 21.4 110\n4 Hornet Sportabout   8 18.7 175\n5           Valiant   6 18.1 105\n```\n\n\n:::\n:::\n\n\n### Filters with AND conditions\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%filter(cyl>5,mpg>20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        car_name cyl  mpg  hp\n1      Mazda RX4   6 21.0 110\n2  Mazda RX4 Wag   6 21.0 110\n3 Hornet 4 Drive   6 21.4 110\n```\n\n\n:::\n:::\n\n\n### Filters with OR conditions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%filter(cyl>5|mpg>20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp\n1         Mazda RX4   6 21.0 110\n2     Mazda RX4 Wag   6 21.0 110\n3        Datsun 710   4 22.8  93\n4    Hornet 4 Drive   6 21.4 110\n5 Hornet Sportabout   8 18.7 175\n6           Valiant   6 18.1 105\n```\n\n\n:::\n:::\n\n\n\n\n### filter row with index\n\n#### 5th rows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>% slice(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp\n1 Hornet Sportabout   8 18.7 175\n```\n\n\n:::\n:::\n\n\n\n\n#### 1 and 5h rows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>% slice(1:5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp\n1         Mazda RX4   6 21.0 110\n2     Mazda RX4 Wag   6 21.0 110\n3        Datsun 710   4 22.8  93\n4    Hornet 4 Drive   6 21.4 110\n5 Hornet Sportabout   8 18.7 175\n```\n\n\n:::\n:::\n\n\n#### get ramdon 5 rows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>% sample_n(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp\n1 Hornet Sportabout   8 18.7 175\n2        Datsun 710   4 22.8  93\n3     Mazda RX4 Wag   6 21.0 110\n4    Hornet 4 Drive   6 21.4 110\n5           Valiant   6 18.1 105\n```\n\n\n:::\n:::\n\n\n\n## Append\n\n### append by row\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>% rbind(small_mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            car_name cyl  mpg  hp\n1          Mazda RX4   6 21.0 110\n2      Mazda RX4 Wag   6 21.0 110\n3         Datsun 710   4 22.8  93\n4     Hornet 4 Drive   6 21.4 110\n5  Hornet Sportabout   8 18.7 175\n6            Valiant   6 18.1 105\n7          Mazda RX4   6 21.0 110\n8      Mazda RX4 Wag   6 21.0 110\n9         Datsun 710   4 22.8  93\n10    Hornet 4 Drive   6 21.4 110\n11 Hornet Sportabout   8 18.7 175\n12           Valiant   6 18.1 105\n```\n\n\n:::\n:::\n\n\n\n\n### append by column\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>% cbind(small_mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp          car_name cyl  mpg  hp\n1         Mazda RX4   6 21.0 110         Mazda RX4   6 21.0 110\n2     Mazda RX4 Wag   6 21.0 110     Mazda RX4 Wag   6 21.0 110\n3        Datsun 710   4 22.8  93        Datsun 710   4 22.8  93\n4    Hornet 4 Drive   6 21.4 110    Hornet 4 Drive   6 21.4 110\n5 Hornet Sportabout   8 18.7 175 Hornet Sportabout   8 18.7 175\n6           Valiant   6 18.1 105           Valiant   6 18.1 105\n```\n\n\n:::\n:::\n\n\n### Dropping NA values\n\n### keep NA values\n\n## group by\n\n### average,min,max,sum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%group_by(cyl) %>% summarise(avg_mpg=mean(mpg)\n                                            ,min_mpg=min(mpg)\n                                            ,max_mpg=max(mpg)\n                                            ,sum_mpg=sum(mpg))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n    cyl avg_mpg min_mpg max_mpg sum_mpg\n  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1     4    22.8    22.8    22.8    22.8\n2     6    20.4    18.1    21.4    81.5\n3     8    18.7    18.7    18.7    18.7\n```\n\n\n:::\n:::\n\n\n### count record and count distinct record\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%group_by(cyl) %>% summarise(n_mpg=n()\n                                            ,distinct_n_mpg=n_distinct(mpg)\n                                            \n                                            )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n    cyl n_mpg distinct_n_mpg\n  <dbl> <int>          <int>\n1     4     1              1\n2     6     4              3\n3     8     1              1\n```\n\n\n:::\n:::\n\n## order rows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%arrange(cyl) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp\n1        Datsun 710   4 22.8  93\n2         Mazda RX4   6 21.0 110\n3     Mazda RX4 Wag   6 21.0 110\n4    Hornet 4 Drive   6 21.4 110\n5           Valiant   6 18.1 105\n6 Hornet Sportabout   8 18.7 175\n```\n\n\n:::\n:::\n\n\n### Sort in descending order\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%arrange(desc(cyl) )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp\n1 Hornet Sportabout   8 18.7 175\n2         Mazda RX4   6 21.0 110\n3     Mazda RX4 Wag   6 21.0 110\n4    Hornet 4 Drive   6 21.4 110\n5           Valiant   6 18.1 105\n6        Datsun 710   4 22.8  93\n```\n\n\n:::\n:::\n\n### Arrange by multiple variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmall_mtcars %>%arrange(cyl,mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           car_name cyl  mpg  hp\n1        Datsun 710   4 22.8  93\n2           Valiant   6 18.1 105\n3         Mazda RX4   6 21.0 110\n4     Mazda RX4 Wag   6 21.0 110\n5    Hornet 4 Drive   6 21.4 110\n6 Hornet Sportabout   8 18.7 175\n```\n\n\n:::\n:::\n\n\n\n## join\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_data=small_mtcars %>% slice(1:2)\nright_data=small_mtcars %>% slice(2:4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       car_name cyl mpg  hp\n1     Mazda RX4   6  21 110\n2 Mazda RX4 Wag   6  21 110\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nright_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        car_name cyl  mpg  hp\n1  Mazda RX4 Wag   6 21.0 110\n2     Datsun 710   4 22.8  93\n3 Hornet 4 Drive   6 21.4 110\n```\n\n\n:::\n:::\n\n\n\n### inner_join\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata=left_data %>% inner_join(right_data,join_by(car_name== car_name), suffix = c(\"_l\", \"._r\"))\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       car_name cyl_l mpg_l hp_l cyl._r mpg._r hp._r\n1 Mazda RX4 Wag     6    21  110      6     21   110\n```\n\n\n:::\n:::\n\n\n\n\n\n### left join\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata=left_data %>% left_join(right_data,join_by(car_name== car_name), suffix = c(\"_l\", \"._r\"))\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       car_name cyl_l mpg_l hp_l cyl._r mpg._r hp._r\n1     Mazda RX4     6    21  110     NA     NA    NA\n2 Mazda RX4 Wag     6    21  110      6     21   110\n```\n\n\n:::\n:::\n\n\n### full join\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata=left_data %>% full_join(right_data,join_by(car_name== car_name), suffix = c(\"_l\", \"._r\"))\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        car_name cyl_l mpg_l hp_l cyl._r mpg._r hp._r\n1      Mazda RX4     6    21  110     NA     NA    NA\n2  Mazda RX4 Wag     6    21  110      6   21.0   110\n3     Datsun 710    NA    NA   NA      4   22.8    93\n4 Hornet 4 Drive    NA    NA   NA      6   21.4   110\n```\n\n\n:::\n:::\n\n\n\n### anti join\n\nanti_join() return all rows from x without a match in y\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata=left_data %>% anti_join(right_data,join_by(car_name== car_name))\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   car_name cyl mpg  hp\n1 Mazda RX4   6  21 110\n```\n\n\n:::\n:::\n\n\n\n\n## Reshape tables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolddata_wide <- read.table(header=TRUE, text='\n subject sex control cond1 cond2\n       1   M     7.9  12.3  10.7\n       2   F     6.3  10.6  11.1\n       3   F     9.5  13.1  13.8\n       4   M    11.5  13.4  12.9\n')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nolddata_wide\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  subject sex control cond1 cond2\n1       1   M     7.9  12.3  10.7\n2       2   F     6.3  10.6  11.1\n3       3   F     9.5  13.1  13.8\n4       4   M    11.5  13.4  12.9\n```\n\n\n:::\n:::\n\n\n\n### Gather data long(wide to long)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long=olddata_wide %>%\n  pivot_longer(!c(subject,sex), names_to = 'income', values_to = 'DATA')\n\ndata_long\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   subject sex   income   DATA\n     <int> <chr> <chr>   <dbl>\n 1       1 M     control   7.9\n 2       1 M     cond1    12.3\n 3       1 M     cond2    10.7\n 4       2 F     control   6.3\n 5       2 F     cond1    10.6\n 6       2 F     cond2    11.1\n 7       3 F     control   9.5\n 8       3 F     cond1    13.1\n 9       3 F     cond2    13.8\n10       4 M     control  11.5\n11       4 M     cond1    13.4\n12       4 M     cond2    12.9\n```\n\n\n:::\n:::\n\n\n\n### Spread data wide (long to wide)\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_wide=data_long %>%\n  pivot_wider(names_from = income, values_from = DATA)\n\ndata_wide\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  subject sex   control cond1 cond2\n    <int> <chr>   <dbl> <dbl> <dbl>\n1       1 M         7.9  12.3  10.7\n2       2 F         6.3  10.6  11.1\n3       3 F         9.5  13.1  13.8\n4       4 M        11.5  13.4  12.9\n```\n\n\n:::\n:::\n\n\n\n## string\n\n\n### upper case\n\n\n### lower case\n\n\n\n### match\n\n\n### concatenation\n\n\n### replace\n\n\n\n### extract\n\n\n\n## date\n\n## dataframe to other data format\n\n### dataframe to vector\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata=small_mtcars$cyl\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6 6 4 6 8 6\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n\n### dataframe to matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata=data.matrix(small_mtcars)\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     car_name cyl  mpg  hp\n[1,]        4   6 21.0 110\n[2,]        5   6 21.0 110\n[3,]        1   4 22.8  93\n[4,]        2   6 21.4 110\n[5,]        3   8 18.7 175\n[6,]        6   6 18.1 105\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"matrix\" \"array\" \n```\n\n\n:::\n:::\n\n\n\n### dataframe to list\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata=as.list(small_mtcars)\ndata\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$car_name\n[1] \"Mazda RX4\"         \"Mazda RX4 Wag\"     \"Datsun 710\"       \n[4] \"Hornet 4 Drive\"    \"Hornet Sportabout\" \"Valiant\"          \n\n$cyl\n[1] 6 6 4 6 8 6\n\n$mpg\n[1] 21.0 21.0 22.8 21.4 18.7 18.1\n\n$hp\n[1] 110 110  93 110 175 105\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"list\"\n```\n\n\n:::\n:::\n\n\n# reference:\n\nhttps://dplyr.tidyverse.org/\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}