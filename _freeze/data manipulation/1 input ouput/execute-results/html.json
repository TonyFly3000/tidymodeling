{
  "hash": "c9f4e1251d262fdb5f76d3778dfa4e4c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"input & ouput in R\"\n\nauthor: \"Tony Duan\"\n\nexecute:\n  warning: false\n  error: false\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n\nData input and ouput in R\n\n![](images/1_-OQi5hp-uoL_KdIydr4hew.gif){width=\"500\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(openxlsx)\nlibrary(readxl)\n```\n:::\n\n\n\n# Input\n\n## read CSV\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata001=read_csv('data/Book3.csv')\nhead(data001)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n      a b    \n  <dbl> <chr>\n1  1241 rhth \n2 35235 rjyyj\n```\n\n\n:::\n:::\n\n\nread CSV online\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl='https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv'\ndata001=read_csv(url)\nhead(data001)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 32\n  hotel        is_canceled lead_time arrival_date_year arrival_date_month\n  <chr>              <dbl>     <dbl>             <dbl> <chr>             \n1 Resort Hotel           0       342              2015 July              \n2 Resort Hotel           0       737              2015 July              \n3 Resort Hotel           0         7              2015 July              \n4 Resort Hotel           0        13              2015 July              \n5 Resort Hotel           0        14              2015 July              \n6 Resort Hotel           0        14              2015 July              \n# ℹ 27 more variables: arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>, stays_in_weekend_nights <dbl>,\n#   stays_in_week_nights <dbl>, adults <dbl>, children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, …\n```\n\n\n:::\n:::\n\n\n## read excel\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\nlibrary(readxl)\n\ndata001=read_excel('data/Book1.xlsx')\nhead(data001)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n      a b    \n  <dbl> <chr>\n1  1241 rhth \n2 35235 rjyyj\n```\n\n\n:::\n:::\n\n\n## read parquet\n\nmust install in this way,otherwise will report error.\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"arrow\", repos = c(\"https://apache.r-universe.dev\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(arrow)\narrow_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nArrow package version: 15.0.1\n\nCapabilities:\n               \nacero      TRUE\ndataset    TRUE\nsubstrait FALSE\nparquet    TRUE\njson       TRUE\ns3         TRUE\ngcs        TRUE\nutf8proc   TRUE\nre2        TRUE\nsnappy     TRUE\ngzip       TRUE\nbrotli     TRUE\nzstd       TRUE\nlz4        TRUE\nlz4_frame  TRUE\nlzo       FALSE\nbz2        TRUE\njemalloc   TRUE\nmimalloc   TRUE\n\nMemory:\n                  \nAllocator mimalloc\nCurrent    0 bytes\nMax        0 bytes\n\nRuntime:\n                        \nSIMD Level          none\nDetected SIMD Level none\n\nBuild:\n                                                             \nC++ Library Version                                    15.0.1\nC++ Compiler                                       AppleClang\nC++ Compiler Version                          15.0.0.15000100\nGit ID               5ce6ff434c1e7daaa2d7f134349f3ce4c22683da\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata001=read_parquet('data/df.parquet')\nhead(data001)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 62\n  FlightDate          Airline Origin Dest  Cancelled Diverted CRSDepTime DepTime\n  <dttm>              <chr>   <chr>  <chr> <lgl>     <lgl>         <int>   <dbl>\n1 2022-04-04 00:00:00 Commut… GJT    DEN   FALSE     FALSE          1133    1123\n2 2022-04-04 00:00:00 Commut… HRL    IAH   FALSE     FALSE           732     728\n3 2022-04-04 00:00:00 Commut… DRO    DEN   FALSE     FALSE          1529    1514\n4 2022-04-04 00:00:00 Commut… IAH    GPT   FALSE     FALSE          1435    1430\n5 2022-04-04 00:00:00 Commut… DRO    DEN   FALSE     FALSE          1135    1135\n6 2022-04-04 00:00:00 Commut… DEN    TUL   FALSE     FALSE           955     952\n# ℹ 54 more variables: DepDelayMinutes <dbl>, DepDelay <dbl>, ArrTime <dbl>,\n#   ArrDelayMinutes <dbl>, AirTime <dbl>, CRSElapsedTime <dbl>,\n#   ActualElapsedTime <dbl>, Distance <dbl>, Year <int>, Quarter <int>,\n#   Month <int>, DayofMonth <int>, DayOfWeek <int>,\n#   Marketing_Airline_Network <chr>,\n#   Operated_or_Branded_Code_Share_Partners <chr>,\n#   DOT_ID_Marketing_Airline <int>, IATA_Code_Marketing_Airline <chr>, …\n```\n\n\n:::\n:::\n\n\nread parquet zip\n\n::: {.cell}\n\n```{.r .cell-code}\ndata001=read_parquet('data/df.parquet.gzip')\nhead(data001)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 62\n  FlightDate          Airline Origin Dest  Cancelled Diverted CRSDepTime DepTime\n  <dttm>              <chr>   <chr>  <chr> <lgl>     <lgl>         <int>   <dbl>\n1 2022-04-04 00:00:00 Commut… GJT    DEN   FALSE     FALSE          1133    1123\n2 2022-04-04 00:00:00 Commut… HRL    IAH   FALSE     FALSE           732     728\n3 2022-04-04 00:00:00 Commut… DRO    DEN   FALSE     FALSE          1529    1514\n4 2022-04-04 00:00:00 Commut… IAH    GPT   FALSE     FALSE          1435    1430\n5 2022-04-04 00:00:00 Commut… DRO    DEN   FALSE     FALSE          1135    1135\n6 2022-04-04 00:00:00 Commut… DEN    TUL   FALSE     FALSE           955     952\n# ℹ 54 more variables: DepDelayMinutes <dbl>, DepDelay <dbl>, ArrTime <dbl>,\n#   ArrDelayMinutes <dbl>, AirTime <dbl>, CRSElapsedTime <dbl>,\n#   ActualElapsedTime <dbl>, Distance <dbl>, Year <int>, Quarter <int>,\n#   Month <int>, DayofMonth <int>, DayOfWeek <int>,\n#   Marketing_Airline_Network <chr>,\n#   Operated_or_Branded_Code_Share_Partners <chr>,\n#   DOT_ID_Marketing_Airline <int>, IATA_Code_Marketing_Airline <chr>, …\n```\n\n\n:::\n:::\n\n\n\n\n## read feather\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(feather)\n\ndata001=read_feather('data/feather_file.feather')\nhead(data001)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 62\n  FlightDate          Airline Origin Dest  Cancelled Diverted CRSDepTime DepTime\n  <dttm>              <chr>   <chr>  <chr> <lgl>     <lgl>         <int>   <dbl>\n1 2022-04-04 00:00:00 Commut… GJT    DEN   FALSE     FALSE          1133    1123\n2 2022-04-04 00:00:00 Commut… HRL    IAH   FALSE     FALSE           732     728\n3 2022-04-04 00:00:00 Commut… DRO    DEN   FALSE     FALSE          1529    1514\n4 2022-04-04 00:00:00 Commut… IAH    GPT   FALSE     FALSE          1435    1430\n5 2022-04-04 00:00:00 Commut… DRO    DEN   FALSE     FALSE          1135    1135\n6 2022-04-04 00:00:00 Commut… DEN    TUL   FALSE     FALSE           955     952\n# ℹ 54 more variables: DepDelayMinutes <dbl>, DepDelay <dbl>, ArrTime <dbl>,\n#   ArrDelayMinutes <dbl>, AirTime <dbl>, CRSElapsedTime <dbl>,\n#   ActualElapsedTime <dbl>, Distance <dbl>, Year <int>, Quarter <int>,\n#   Month <int>, DayofMonth <int>, DayOfWeek <int>,\n#   Marketing_Airline_Network <chr>,\n#   Operated_or_Branded_Code_Share_Partners <chr>,\n#   DOT_ID_Marketing_Airline <int>, IATA_Code_Marketing_Airline <chr>, …\n```\n\n\n:::\n:::\n\n## read JSON file and convert into data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jsonlite)\ndata=read_json(\"./data/dataj.json\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata002=(data) %>% as.data.frame()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(data002)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1\nColumns: 11\n$ glossary.title                                                     <chr> \"ex…\n$ glossary.GlossDiv.title                                            <chr> \"S\"\n$ glossary.GlossDiv.GlossList.GlossEntry.ID                          <chr> \"SG…\n$ glossary.GlossDiv.GlossList.GlossEntry.SortAs                      <chr> \"SG…\n$ glossary.GlossDiv.GlossList.GlossEntry.GlossTerm                   <chr> \"St…\n$ glossary.GlossDiv.GlossList.GlossEntry.Acronym                     <chr> \"SG…\n$ glossary.GlossDiv.GlossList.GlossEntry.Abbrev                      <chr> \"IS…\n$ glossary.GlossDiv.GlossList.GlossEntry.GlossDef.para               <chr> \"A …\n$ glossary.GlossDiv.GlossList.GlossEntry.GlossDef.GlossSeeAlso..GML. <chr> \"GM…\n$ glossary.GlossDiv.GlossList.GlossEntry.GlossDef.GlossSeeAlso..XML. <chr> \"XM…\n$ glossary.GlossDiv.GlossList.GlossEntry.GlossSee                    <chr> \"ma…\n```\n\n\n:::\n:::\n\n\n# Output\n\n\n## write csv \n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(data001,'data001 csv output data.csv')\n```\n:::\n\n\n\n\n## write excel\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\nlibrary(readxl)\nwrite.xlsx(data001,'data001 excel output data.xlsx')\n```\n:::\n\n\n\n\n## write parquet\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(arrow)\nwrite_parquet(data001,'data/df.parquet')\n```\n:::\n\n\n\noutput to zip format\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_parquet(data001,'data/df.parquet.gzip',compression='gzip')  \n```\n:::\n\n\n\n## write feather\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(feather)\nwrite_feather(data001,'data/feather_file.feather')\n```\n:::\n\n\n\n\n## write txt\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntext=tibble('hello world\nits time!')\n\nwrite_delim(text, \"text.txt\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}