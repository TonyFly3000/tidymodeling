{
  "hash": "d5417299ea4f87078fb65cb0541b01e3",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Keras classification model\"\nsubtitle: \"with whiskynote.be data\"\nauthor: \"Tony Duan\"\n\nexecute:\n  warning: false\n  error: false\n  eval: false\n\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n::: {#efcc4f24 .cell execution_count=1}\n``` {.python .cell-code}\nimport tensorflow as tf\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pylab as plt\nimport seaborn as sns\n\nfrom siuba.siu import call\nfrom siuba import _, mutate, filter, group_by, summarize,show_query\nfrom siuba import *\n\nfrom siuba.data import mtcars,penguins\n```\n:::\n\n\n::: {#b57a515d .cell execution_count=2}\n``` {.python .cell-code}\nimport tensorflow as tf\ntf.__version__\n```\n:::\n\n\n::: {#2182b728 .cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nimport tensorflow as tf\nimport tensorflow_hub as hub\n```\n:::\n\n\n::: {#21d909f9 .cell execution_count=4}\n``` {.python .cell-code}\nimport pandas as pd\ndf_raw=pd.read_excel('./output/all_page_bottle_list_all.xlsx')\n```\n:::\n\n\n::: {#48d47a68 .cell execution_count=5}\n``` {.python .cell-code}\nimport re\ndf=df_raw>> filter(_.all_page_score >=70\n                      ,_.all_page_score <100\n                      ,_.bottle_review_Nose !='no comment'\n                      ,_.bottle_review_Mouth !='no comment'\n                      ,_.bottle_review_Finish !='no comment'\n                      ) >>mutate(\n                         label=if_else(_.all_page_score>=90,1,0)\n                      ,review=_.bottle_review_Nose+_.bottle_review_Mouth+_.bottle_review_Finish\n                      )>>mutate(review=_.bottle_name+_.review.str.lower().str.replace('nose:','').str.replace('mouth:','').str.replace('finish:','').str.replace('.','').str.replace(',','').str.replace('(','').str.replace(')','').str.replace('-','').str.replace('apples','apple').str.replace('oranges','orange').str.replace('sweetness','sweet').str.replace('fruits','fruit'))>>mutate(review_len=_.review.str.count(' ')+1) >>mutate(description=_.review)\n\n```\n:::\n\n\n::: {#c23c6518 .cell execution_count=6}\n``` {.python .cell-code}\ndf = df[[\"description\", \"label\"]]\n```\n:::\n\n\n::: {#b0ab421b .cell execution_count=7}\n``` {.python .cell-code}\ndf = df.dropna(subset=[\"description\", \"label\"])\n```\n:::\n\n\n::: {#91ba1e2e .cell execution_count=8}\n``` {.python .cell-code}\ndf.label = df.label.astype(int)\n```\n:::\n\n\n::: {#e31eefb8 .cell execution_count=9}\n``` {.python .cell-code}\ndf.head()\n```\n:::\n\n\n::: {#c98a3b4f .cell execution_count=10}\n``` {.python .cell-code}\ndf.info()\n```\n:::\n\n\n# split data\n\n::: {#1b28a6e2 .cell execution_count=11}\n``` {.python .cell-code}\ntrain, val, test = np.split(df.sample(frac=1), [int(0.8*len(df)), int(0.9*len(df))])\n```\n:::\n\n\n::: {#fecd4939 .cell execution_count=12}\n``` {.python .cell-code}\ndef df_to_dataset(dataframe, shuffle=True, batch_size=1024):\n  df = dataframe.copy()\n  labels = df.pop('label')\n  df = df[\"description\"]\n  ds = tf.data.Dataset.from_tensor_slices((df, labels))\n  if shuffle:\n    ds = ds.shuffle(buffer_size=len(dataframe))\n  ds = ds.batch(batch_size)\n  ds = ds.prefetch(tf.data.AUTOTUNE)\n  return ds\n```\n:::\n\n\n::: {#b4c1c10f .cell execution_count=13}\n``` {.python .cell-code}\ntrain_data = df_to_dataset(train)\nvalid_data = df_to_dataset(val)\ntest_data = df_to_dataset(test)\n```\n:::\n\n\n::: {#aa960837 .cell execution_count=14}\n``` {.python .cell-code}\nembedding = \"https://tfhub.dev/google/nnlm-en-dim50/2\"\nhub_layer = hub.KerasLayer(embedding, dtype=tf.string, trainable=True)\n```\n:::\n\n\n::: {#aef65c4a .cell execution_count=15}\n``` {.python .cell-code}\nhub_layer(list(train_data)[0][0])\n```\n:::\n\n\n::: {#108d9ab7 .cell execution_count=16}\n``` {.python .cell-code}\nfrom keras import models\n\nmodel = models.Sequential()\nmodel.add(hub_layer)\nmodel.add(tf.keras.layers.Dense(16, activation='relu'))\nmodel.add(tf.keras.layers.Dropout(0.4))\nmodel.add(tf.keras.layers.Dense(16, activation='relu'))\nmodel.add(tf.keras.layers.Dropout(0.4))\nmodel.add(tf.keras.layers.Dense(1, activation='sigmoid'))\n```\n:::\n\n\n::: {#f734ece5 .cell execution_count=17}\n``` {.python .cell-code}\nmodel.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.001),\n              loss=tf.keras.losses.BinaryCrossentropy(),\n              metrics=['accuracy'])\n```\n:::\n\n\n::: {#cd7af2f2 .cell execution_count=18}\n``` {.python .cell-code}\nmodel.evaluate(train_data)\n```\n:::\n\n\n# resource:\n\nhttps://colab.research.google.com/drive/1yO7EgCYSN3KW8hzDTz809nzNmacjBBXX?usp=sharing#scrollTo=7nYrbpVd96kr\n\n",
    "supporting": [
      "9 Keras classification n model_files"
    ],
    "filters": [],
    "includes": {}
  }
}