{
  "hash": "e434645e1b7a304d6a3bfeefe8726e82",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"All year all topic second time\"\nsubtitle: \"with whiskynote.be data\"\nauthor: \"Tony Duan\"\n\nexecute:\n  warning: false\n  error: false\n  eval: false\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rvest)\n```\n:::\n\n\n\n\n\n# one page function\n\n\n::: {.cell}\n\n```{.r .cell-code}\none_page_function <- function(review_url){\n  #review_url='https://www.whiskynotes.be/2010/glendronach/glendronach-1996-malts-of-scotland/'\n  print(review_url)\n  review_page <- read_html(review_url)\n\n  page_class=review_page  %>% html_elements(\".cat-links a\") %>% html_text2()\n  page_class=str_flatten(page_class,collapse = \"-\")\n  \n  bottle_name=review_page  %>% html_elements(\".entry-content h2\") %>% html_text2()\n  # remove empty\n  bottle_name=bottle_name[nzchar(bottle_name)]\n  # remove space element\n  bottle_name=bottle_name[nchar(bottle_name)>2]\n  \n  \n  # remove ? mark non bottle name element\n  bottle_name=bottle_name[!bottle_name%>% str_detect(\"\\\\?\")]\n  # remove Drams Delivered revisited  non bottle name element\n  bottle_name=bottle_name[ !bottle_name == 'Drams Delivered revisited']\n  print(bottle_name) \n  \n  bottle_review_raw=review_page  %>% html_elements(\"p\") %>% html_text()\n  bottle_review=unlist(strsplit(bottle_review_raw,\"(?= Nose: )\",perl = TRUE))\n  bottle_review=unlist(strsplit(bottle_review,\"(?= Mouth: )\",perl = TRUE))\n   bottle_review=unlist(strsplit(bottle_review,\"(?= Finish: )\",perl = TRUE))\n  \n  bottle_review_Nose=bottle_review[bottle_review %>% str_detect('Nose:')]\n  bottle_review_Nose=bottle_review_Nose[nzchar(bottle_review_Nose)]\n\n  bottle_review_Mouth=bottle_review[bottle_review %>% str_detect('Mouth:')]\n  bottle_review_Mouth=bottle_review_Mouth[nzchar(bottle_review_Mouth)]\n\n  bottle_review_Finish=bottle_review[bottle_review %>% str_detect('Finish:')]\n  bottle_review_Finish=bottle_review_Finish[nzchar(bottle_review_Finish)]\n  \n  ########### add dummy score if there is no score review #########\n  # bottle_review_Finish_score=bottle_review[bottle_review %>% str_detect('Finish:|Score:')][-1]\n \n  # # bottle_review_Finish_score2=bottle_review_Finish_score\n  \n  \n  # order=1\n  # for (word in bottle_review_Finish_score){\n  #   print(word)\n  #   print(order)\n  #   print(order%%2)\n  #   print(word %>% str_detect('Score:'))\n  #   print(order%%2==0 & word %>% str_detect('Score:')==FALSE)\n  #   if (order%%2==0 & word %>% str_detect('Score:')==FALSE){\n  #     print('adding add dummy score if there is no score review ')\n  #     bottle_review_Finish_score2=append(bottle_review_Finish_score2,'Score:00/100',order-1)\n  #   }else{\n  #   }\n  #   order=order+1\n  #   }\n################################################\n    \n  \n################# score  \n  first_bottle_score=review_page  %>% html_elements(\".entry-score\") %>% html_text2()\n\n  bottle_score=review_page  %>% html_elements(\"strong\") %>% html_text2()\n  \n  bottle_score2=bottle_score %>% str_remove(\"/100\")%>% str_match(\"^[:digit:]+$\") %>% as.data.frame() %>% filter(is.na(V1)==FALSE)\n  bottle_score2=bottle_score2 %>% mutate(V1=str_replace(V1,'/100',''))\n\n# if no other score then use first score\n  if(identical(bottle_score, character(0))==TRUE|nrow(bottle_score2)==0){\n    all_page_score=first_bottle_score %>% tibble()%>% rename(all_page_score='.') \n    \n# if no first score then use other score\n  }else if (identical(first_bottle_score, character(0))==TRUE){\n    all_page_score=bottle_score2\n    \n# the other score have same length as bottle.aka the first score appear twices\n    \n  }else if (nrow(bottle_score2)==length(bottle_review_Nose)){\n    all_page_score=bottle_score2\n    \n# if both have first score and other score then combine    \n  }else{\n  #bottle_score=bottle_score %>% str_match('[0-9][0-9]') %>% as.data.frame() %>% filter(is.na(V1)==FALSE)\n  all_page_score=rbind(first_bottle_score,bottle_score2) %>% rename(all_page_score=V1) \n  }\n##############################\n  page_published_date=review_page  %>% html_elements(\".published\") %>% html_text2()\n\n\n  page_title=review_page  %>% html_elements(\".entry-title\") %>% html_text2()\n  \n  if(nrow(all_page_score)!=length(bottle_name)){all_page_score=0}\n  if(length(bottle_review_Nose)!=length(bottle_name)){bottle_review_Nose='no comment'}\n  if(length(bottle_review_Mouth)!=length(bottle_name)){bottle_review_Mouth='no comment'}\n  if(length(bottle_review_Finish)!=length(bottle_name)){bottle_review_Finish='no comment'}\n  \n  \n  \n  one_page_review=tibble(bottle_name,bottle_review_Nose,bottle_review_Mouth,bottle_review_Finish,all_page_score,page_class,page_published_date,page_title,review_url) \n  \n\n  Sys.sleep(runif(n=1, min=0.1, max=0.8))\n  #print(one_page_review)\n  print(dim(one_page_review))\n  #remove(review_page)\n  return(one_page_review)\n}\n```\n:::\n\n\n\n# read in all link \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\ntopic_link=read_excel('all year page.xlsx',sheet='topic')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(topic_link)\n```\n:::\n\n\nexclude news\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnews=topic_link$topic_link_list %>% str_detect('/whisky-news/')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntopic_link002=topic_link$topic_link_list[!news]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(topic_link002)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntopic_link_small=head(topic_link002,10)\n```\n:::\n\n\n\n\n# start downlaod all page after first try\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinish_download=read_excel('all_page_review_list_final_new.xlsx')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(finish_download)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfinish_download2=distinct(finish_download)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(finish_download2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfinish_download_topic_link=unique(finish_download$review_url)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(finish_download$review_url)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(finish_download_topic_link)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnon_finish_link=topic_link002 [! topic_link002 %in% finish_download_topic_link]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(non_finish_link)\n```\n:::\n\n\n\nsave page with no score\n\n::: {.cell}\n\n```{.r .cell-code}\n#library(openxlsx)\n#write.xlsx(tibble(non_finish_link),'output/no_score_page_review.xlsx')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(topic_link002)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\n\npage=non_finish_link\n\n\nall_page_review_list=data.frame()\n\nstart_time=Sys.time()\nprint(paste0(\"Start time: \", start_time))\n\nloop_num=0\n\nfor (i in page){\n   tryCatch({\n#############################     \n   loop_num=loop_num+1\n   print(paste0(\"Running loop No.\",which(page==i)))\n         \n   print(paste0(\"current time: \", Sys.time()))\n   \n   a=one_page_function(i)\n\n      \n      \n   all_page_review_list=rbind(all_page_review_list,a)\n   print(paste0(\"Used time: \", Sys.time()-start_time))\n   # ouput every 20 page\n   if (loop_num%%20==0){\n      print(paste0(\"output to excel: \", loop_num))\n      all_page_review_list_total=rbind(finish_download,all_page_review_list)\n      write.xlsx(all_page_review_list_total,'all_page_review_list_final_new.xlsx')\n     }\n    \n   \n#############################        \n    }, error=function(e){cat(\"ERROR :\",conditionMessage(e), \"\\n\")})\n}\n\nend_time=Sys.time()\nprint(paste0(\"End time: \", end_time))\nprint(paste0(\"total used time: \", end_time-start_time))\n\n\n#all_page_review_list_final=all_page_review_list %>% filter(all_page_score!=0& bottle_review_Mouth!='no comment')\n\nall_page_review_list_total=rbind(finish_download,all_page_review_list)\n\nwrite.xlsx(all_page_review_list_total,'all_page_review_list_final_new.xlsx')\n```\n:::\n\n\n\n\n\n# download page with score but fail to download\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata001=read_excel('output/all_page_review_list_final_new.xlsx')\nno_score_link=read_excel('output/no_score_page_review.xlsx')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata002=data001 %>% filter(bottle_review_Mouth=='no comment'|bottle_review_Mouth=='no comment'|bottle_review_Finish=='no comment'|all_page_score==0)\n```\n:::\n\n\n\nexclude news\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnews=data002$review_url%>% str_detect('/whisky-news/')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntopic_link002=data002$review_url[!news]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(topic_link002)\n```\n:::\n\n\nexclude no score page\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntopic_link003=topic_link002 [!topic_link002 %in% no_score_link]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(topic_link003)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\n\npage=topic_link003\n\n\nall_page_review_list=data.frame()\n\nstart_time=Sys.time()\nprint(paste0(\"Start time: \", start_time))\n\nloop_num=0\n\nfor (i in page){\n   tryCatch({\n#############################     \n   loop_num=loop_num+1\n   print(paste0(\"Running loop No.\",which(page==i)))\n         \n   print(paste0(\"current time: \", Sys.time()))\n   \n   a=one_page_function(i)\n\n      \n      \n   all_page_review_list=rbind(all_page_review_list,a)\n   print(paste0(\"Used time: \", Sys.time()-start_time))\n   # ouput every 20 page\n   if (loop_num%%20==0){\n      print(paste0(\"output to excel: \", loop_num))\n      all_page_review_list_total=rbind(finish_download,all_page_review_list)\n      write.xlsx(all_page_review_list_total,'all_page_review_list_final_new.xlsx')\n     }\n    \n   \n#############################        \n    }, error=function(e){cat(\"ERROR :\",conditionMessage(e), \"\\n\")})\n}\n\nend_time=Sys.time()\nprint(paste0(\"End time: \", end_time))\nprint(paste0(\"total used time: \", end_time-start_time))\n\n\n#all_page_review_list_final=all_page_review_list %>% filter(all_page_score!=0& bottle_review_Mouth!='no comment')\n\nall_page_review_list_total=rbind(data001,all_page_review_list)\n\nwrite.xlsx(all_page_review_list_total,'all_page_review_list_final_new.xlsx')\n```\n:::\n\n\n\n\n# chekcing\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreview_url=\"https://www.whiskynotes.be/2013/blends/johnnie-walker-red-label-black-label/\"\n\n  print(review_url)\n  review_page <- read_html(review_url)\n\n  page_class=review_page  %>% html_elements(\".cat-links a\") %>% html_text2()\n  page_class=str_flatten(page_class,collapse = \"-\")\n  \n  bottle_name=review_page  %>% html_elements(\".entry-content h2\") %>% html_text2()\n  # remove empty\n  bottle_name=bottle_name[nzchar(bottle_name)]\n  # remove space element\n  bottle_name=bottle_name[nchar(bottle_name)>2]\n  \n  \n  # remove ? mark non bottle name element\n  bottle_name=bottle_name[!bottle_name%>% str_detect(\"\\\\?\")]\n  # remove Drams Delivered revisited  non bottle name element\n  bottle_name=bottle_name[ !bottle_name == 'Drams Delivered revisited']\n  print(bottle_name) \n  \n  bottle_review_raw=review_page  %>% html_elements(\"p\") %>% html_text()\n  bottle_review=unlist(strsplit(bottle_review_raw,\"(?= Nose: )\",perl = TRUE))\n  bottle_review=unlist(strsplit(bottle_review,\"(?= Mouth: )\",perl = TRUE))\n   bottle_review=unlist(strsplit(bottle_review,\"(?= Finish: )\",perl = TRUE))\n  \n  bottle_review_Nose=bottle_review[bottle_review %>% str_detect('Nose:')]\n  bottle_review_Nose=bottle_review_Nose[nzchar(bottle_review_Nose)]\n\n  bottle_review_Mouth=bottle_review[bottle_review %>% str_detect('Mouth:')]\n  bottle_review_Mouth=bottle_review_Mouth[nzchar(bottle_review_Mouth)]\n\n  bottle_review_Finish=bottle_review[bottle_review %>% str_detect('Finish:')]\n  bottle_review_Finish=bottle_review_Finish[nzchar(bottle_review_Finish)]\n  \n  ########### add dummy score if there is no score review #########\n  # bottle_review_Finish_score=bottle_review[bottle_review %>% str_detect('Finish:|Score:')][-1]\n \n  # # bottle_review_Finish_score2=bottle_review_Finish_score\n  \n  \n  # order=1\n  # for (word in bottle_review_Finish_score){\n  #   print(word)\n  #   print(order)\n  #   print(order%%2)\n  #   print(word %>% str_detect('Score:'))\n  #   print(order%%2==0 & word %>% str_detect('Score:')==FALSE)\n  #   if (order%%2==0 & word %>% str_detect('Score:')==FALSE){\n  #     print('adding add dummy score if there is no score review ')\n  #     bottle_review_Finish_score2=append(bottle_review_Finish_score2,'Score:00/100',order-1)\n  #   }else{\n  #   }\n  #   order=order+1\n  #   }\n################################################\n    \n  \n  \n################# score  \n  first_bottle_score=review_page  %>% html_elements(\".entry-score\") %>% html_text2()\n\n  bottle_score=review_page  %>% html_elements(\"strong\") %>% html_text2()\n  \n  bottle_score2=bottle_score %>% str_remove(\"/100\")%>% str_match(\"^[:digit:]+$\") %>% as.data.frame() %>% filter(is.na(V1)==FALSE)\n  bottle_score2=bottle_score2 %>% mutate(V1=str_replace(V1,'/100',''))\n\n# if no other score then use first score\n  if(identical(bottle_score, character(0))==TRUE|nrow(bottle_score2)==0){\n    all_page_score=first_bottle_score %>% tibble()%>% rename(all_page_score='.') \n    \n# if no first score then use other score\n  }else if (identical(first_bottle_score, character(0))==TRUE){\n    all_page_score=bottle_score2\n    \n# the other score have same length as bottle.aka the first score appear twices\n    \n  }else if (nrow(bottle_score2)==length(bottle_review_Nose)){\n    all_page_score=bottle_score2\n    \n# if both have first score and other score then combine    \n  }else{\n  #bottle_score=bottle_score %>% str_match('[0-9][0-9]') %>% as.data.frame() %>% filter(is.na(V1)==FALSE)\n  all_page_score=rbind(first_bottle_score,bottle_score2) %>% rename(all_page_score=V1) \n  }\n##############################\n\n  page_published_date=review_page  %>% html_elements(\".published\") %>% html_text2()\n\n\n  page_title=review_page  %>% html_elements(\".entry-title\") %>% html_text2()\n  \n  if(nrow(all_page_score)!=length(bottle_name)){all_page_score=0}\n  if(length(bottle_review_Nose)!=length(bottle_name)){bottle_review_Nose='no comment'}\n  if(length(bottle_review_Mouth)!=length(bottle_name)){bottle_review_Mouth='no comment'}\n  if(length(bottle_review_Finish)!=length(bottle_name)){bottle_review_Finish='no comment'}\n  \n  \n  \n  one_page_review=tibble(bottle_name,bottle_review_Nose,bottle_review_Mouth,bottle_review_Finish,all_page_score,page_class,page_published_date,page_title,review_url) \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}