{
  "hash": "07f1f1e331a4e299e61176bea89fc109",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hotel booking data\"\n\nauthor: \"Tony Duan\"\nexecute:\n  warning: false\n  error: false\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n\n# Introduction\n\nLook at the hotel booking data.The target variable is whether have children\n\n\n\n# Hotel booking data\n![](images/1.jpg){width=\"481\"}\n\n# data download from github\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n#hotels <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\")\n\nhotels <- readr::read_csv(\"data/hotels.csv\")\n```\n:::\n\n\nData have 119390 record  and 32 variable   \n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(hotels)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 119,390\nColumns: 32\n$ hotel                          <chr> \"Resort Hotel\", \"Resort Hotel\", \"Resort…\n$ is_canceled                    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, …\n$ lead_time                      <dbl> 342, 737, 7, 13, 14, 14, 0, 9, 85, 75, …\n$ arrival_date_year              <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 201…\n$ arrival_date_month             <chr> \"July\", \"July\", \"July\", \"July\", \"July\",…\n$ arrival_date_week_number       <dbl> 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,…\n$ arrival_date_day_of_month      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ stays_in_weekend_nights        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ stays_in_week_nights           <dbl> 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, …\n$ adults                         <dbl> 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ children                       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ babies                         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ meal                           <chr> \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB…\n$ country                        <chr> \"PRT\", \"PRT\", \"GBR\", \"GBR\", \"GBR\", \"GBR…\n$ market_segment                 <chr> \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ distribution_channel           <chr> \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ is_repeated_guest              <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_cancellations         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_bookings_not_canceled <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ reserved_room_type             <chr> \"C\", \"C\", \"A\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ assigned_room_type             <chr> \"C\", \"C\", \"C\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ booking_changes                <dbl> 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ deposit_type                   <chr> \"No Deposit\", \"No Deposit\", \"No Deposit…\n$ agent                          <dbl> NA, NA, NA, 304, 240, 240, NA, 303, 240…\n$ company                        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ days_in_waiting_list           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ customer_type                  <chr> \"Transient\", \"Transient\", \"Transient\", …\n$ adr                            <dbl> 0.00, 0.00, 75.00, 75.00, 98.00, 98.00,…\n$ required_car_parking_spaces    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ total_of_special_requests      <dbl> 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 3, …\n$ reservation_status             <chr> \"Check-Out\", \"Check-Out\", \"Check-Out\", …\n$ reservation_status_date        <date> 2015-07-01, 2015-07-01, 2015-07-02, 20…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels %>% group_by(children) %>% count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n# Groups:   children [6]\n  children      n\n     <dbl>  <int>\n1        0 110796\n2        1   4861\n3        2   3652\n4        3     76\n5       10      1\n6       NA      4\n```\n\n\n:::\n:::\n\n# ploting and EDA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_stays <- hotels %>%\n  filter(is_canceled == 0) %>%\n  mutate(\n    children = case_when(\n      children + babies > 0 ~ \"children\",\n      TRUE ~ \"none\"\n    ),\n    required_car_parking_spaces = case_when(\n      required_car_parking_spaces > 0 ~ \"parking\",\n      TRUE ~ \"none\"\n    )\n  ) %>%\n  select(-is_canceled, -reservation_status, -babies)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_stays %>%\n  mutate(arrival_date_month = factor(arrival_date_month,\n    levels = month.name\n  )) %>%\n  count(hotel, arrival_date_month, children) %>%\n  group_by(hotel, children) %>%\n  mutate(proportion = n / sum(n)) %>%\n  ggplot(aes(arrival_date_month, proportion, fill = children)) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(labels = scales::percent_format()) +\n  facet_wrap(~hotel, nrow = 2) +\n  labs(\n    x = NULL,\n    y = \"Proportion of hotel stays\",\n    fill = NULL\n  )\n```\n\n::: {.cell-output-display}\n![](0-classification-Tidy-Modeling_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhotel_stays %>%\n  count(children)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  children     n\n  <chr>    <int>\n1 children  6073\n2 none     69093\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(skimr)\n\nskim(hotel_stays)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |            |\n|:------------------------|:-----------|\n|Name                     |hotel_stays |\n|Number of rows           |75166       |\n|Number of columns        |29          |\n|_______________________  |            |\n|Column type frequency:   |            |\n|character                |12          |\n|Date                     |1           |\n|numeric                  |16          |\n|________________________ |            |\n|Group variables          |None        |\n\n\n**Variable type: character**\n\n|skim_variable               | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|hotel                       |         0|          1.00|  10|  12|     0|        2|          0|\n|arrival_date_month          |         0|          1.00|   3|   9|     0|       12|          0|\n|children                    |         0|          1.00|   4|   8|     0|        2|          0|\n|meal                        |         0|          1.00|   2|   9|     0|        5|          0|\n|country                     |       421|          0.99|   2|   3|     0|      165|          0|\n|market_segment              |         0|          1.00|   6|  13|     0|        7|          0|\n|distribution_channel        |         0|          1.00|   3|   9|     0|        5|          0|\n|reserved_room_type          |         0|          1.00|   1|   1|     0|        9|          0|\n|assigned_room_type          |         0|          1.00|   1|   1|     0|       10|          0|\n|deposit_type                |         0|          1.00|  10|  10|     0|        3|          0|\n|customer_type               |         0|          1.00|   5|  15|     0|        4|          0|\n|required_car_parking_spaces |         0|          1.00|   4|   7|     0|        2|          0|\n\n\n**Variable type: Date**\n\n|skim_variable           | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-----------------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|reservation_status_date |         0|             1|2015-07-01 |2017-09-14 |2016-09-01 |      805|\n\n\n**Variable type: numeric**\n\n|skim_variable                  | n_missing| complete_rate|    mean|     sd|      p0|    p25|    p50|  p75| p100|hist  |\n|:------------------------------|---------:|-------------:|-------:|------:|-------:|------:|------:|----:|----:|:-----|\n|lead_time                      |         0|          1.00|   79.98|  91.11|    0.00|    9.0|   45.0|  124|  737|▇▂▁▁▁ |\n|arrival_date_year              |         0|          1.00| 2016.15|   0.70| 2015.00| 2016.0| 2016.0| 2017| 2017|▃▁▇▁▆ |\n|arrival_date_week_number       |         0|          1.00|   27.08|  13.90|    1.00|   16.0|   28.0|   38|   53|▆▇▇▇▆ |\n|arrival_date_day_of_month      |         0|          1.00|   15.84|   8.78|    1.00|    8.0|   16.0|   23|   31|▇▇▇▇▆ |\n|stays_in_weekend_nights        |         0|          1.00|    0.93|   0.99|    0.00|    0.0|    1.0|    2|   19|▇▁▁▁▁ |\n|stays_in_week_nights           |         0|          1.00|    2.46|   1.92|    0.00|    1.0|    2.0|    3|   50|▇▁▁▁▁ |\n|adults                         |         0|          1.00|    1.83|   0.51|    0.00|    2.0|    2.0|    2|    4|▁▂▇▁▁ |\n|is_repeated_guest              |         0|          1.00|    0.04|   0.20|    0.00|    0.0|    0.0|    0|    1|▇▁▁▁▁ |\n|previous_cancellations         |         0|          1.00|    0.02|   0.27|    0.00|    0.0|    0.0|    0|   13|▇▁▁▁▁ |\n|previous_bookings_not_canceled |         0|          1.00|    0.20|   1.81|    0.00|    0.0|    0.0|    0|   72|▇▁▁▁▁ |\n|booking_changes                |         0|          1.00|    0.29|   0.74|    0.00|    0.0|    0.0|    0|   21|▇▁▁▁▁ |\n|agent                          |     12310|          0.84|   94.06| 113.95|    1.00|    9.0|   14.0|  240|  535|▇▁▃▁▁ |\n|company                        |     69560|          0.07|  190.52| 132.35|    6.00|   51.0|  183.0|  270|  541|▇▅▆▃▁ |\n|days_in_waiting_list           |         0|          1.00|    1.59|  14.78|    0.00|    0.0|    0.0|    0|  379|▇▁▁▁▁ |\n|adr                            |         0|          1.00|   99.99|  49.21|   -6.38|   67.5|   92.5|  125|  510|▇▆▁▁▁ |\n|total_of_special_requests      |         0|          1.00|    0.71|   0.83|    0.00|    0.0|    1.0|    1|    5|▇▁▁▁▁ |\n\n\n:::\n:::\n\n\n\n## Measurement:\n\n* Accuracy=TP+TN+FP+FN\n\n* Precision --- Out of all the examples that predicted as positive, how many are really positive?\n\nPrecision=TP/(TP+FP)\n\n* Recall/Sensitivity(True Positive rate) — Out of all the positive examples, how many are predicted as positive?\n\nRecall=TP/(TP+FN)\n\n\n* Specificity(True Negative rate)— Out of all the people that do not have the disease, how many got negative results?\n\n\n* Specificity=TN/(TN+FP)\n\n* False Positive rate=1-Specificity\n\n* False Negative Rat=FN/(TP+FN)\n\nFalse Negative Rate tells us what proportion of the positive class got incorrectly classified by the classifier\n\n\n* F1 score=2/(1/Precision+1/Recall)\n\n\n",
    "supporting": [
      "0-classification-Tidy-Modeling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}