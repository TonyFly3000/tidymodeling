{
  "hash": "34029721b00367294ab1f36e377ad3e9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"quarto introduction\"\n\n\nauthor: \"Tony Duan\"\n\nexecute:\n  warning: false\n  error: false\n\n  \nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    \n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n    code-copy: true\ncss: hscroll.css\n---\n\n# install quarto\n\n## install quarto CLI\n\nhttps://quarto.org/docs/get-started/\n\n## install quarto pacakge\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"quarto\")\n```\n:::\n\n# check quarto version\n\n## in Terminal\n\n::: {.cell filename='Terminal'}\n\n```{.bach .cell-code}\nquarto check\n```\n:::\n\n![](images/paste-1.png){width=\"600\"}\n\n## in R\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quarto)\nquarto_version()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] '99.9.9'\n```\n\n\n:::\n:::\n\nquarto location\n\n::: {.cell}\n\n```{.r .cell-code}\nquarto_path()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/usr/local/bin/quarto\"\n```\n\n\n:::\n:::\n\n# quarto code chunk\n\n\n## R\n\n```{{R}}\nversion\n```\n\n## Python\n\n```{{python}}\nimport sys\nprint(sys.version)\n```\n\n## Bath\n\n\n```{{bash}}\necho \"foo\" \n```\n\n\n# quarto code chunk option\n\n## in YAML header\n\n``` yaml\n---\ntitle: \"My Document\"\nexecute:\n  echo: false\njupyter: python3\n---\n```\n\n-   eval： Evaluate the code chunk (if false, just echos the code into the output).\n\n-   echo： Include the source code in output.\n\n-   output： Include the results of executing the code in the output (true, false, or asis to indicate that the output is raw markdown and should not have any of Quarto’s standard enclosing markdown).\n\n-   warning： Include warnings in the output.\n\n-   error： Evaluate the code chunk (if false, just echos the code into the output).\n\n-   include： Catch all for preventing any output (code or results) from being included (e.g. include: false suppresses all output from the code block).\n\n## in code chunk\n\n::: {.cell}\n\n```{.bash .cell-code}\n #| eval: false\n```\n:::\n\n\n# code chunk name\n\n`{r filename='code chunk name sample'}`\n\n::: {.cell filename='code chunk name sample'}\n\n```{.r .cell-code}\na=1\na\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n# Rmarkdown\n\n::: {.cell}\n\n```{.r .cell-code}\n*italics* and _italics_\n**bold** and __bold__\nsuperscript^2^\n~~strikethrough~~\n[link](www.rstudio.com)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n*italics* \n```\n:::\n\n*italics*\n\n::: {.cell}\n\n```{.r .cell-code}\n**bold**\n```\n:::\n\n**bold**\n\n::: {.cell}\n\n```{.r .cell-code}\nsuperscript^2^\n```\n:::\n\nsuperscript^2^\n\n::: {.cell}\n\n```{.r .cell-code}\n~~strikethrough~~\n```\n:::\n\n~~strikethrough~~\n\n::: {.cell}\n\n```{.r .cell-code}\n`highlight`\n```\n:::\n\n`highlight`\n\n# link\n\n::: {.cell}\n\n```{.r .cell-code}\n[link](www.rstudio.com)\n```\n:::\n\n[link](www.rstudio.com)\n\n# tab\n\n::: {.cell}\n\n```{.r .cell-code}\n::: {.panel-tabset}\n\n## Tab 1\n\nThis is tab 1\n\n\n## Tab 2\n\nThis is tab 2\n\n:::\n```\n:::\n\n::: panel-tabset\n## Tab 1\n\nThis is tab 1\n\n## Tab 2\n\nThis is tab 2\n:::\n\n# column display\n\n::: {.cell}\n\n```{.r .cell-code}\n::: columns\n::: {.column width=\"40%\"}\nthis column with 40% width\n::: \n\n::: {.column width=\"60%\"}\nthis column with 60% width\n::: \n\n::: \n```\n:::\n\n::::: columns\n::: {.column width=\"40%\"}\nthis column with 40% width\n:::\n\n::: {.column width=\"60%\"}\nthis column with 60% width\n:::\n:::::\n\n# Add a horizontal scroll bar\n\n-   add hscroll.css file\n\n::: {.cell}\n\n```{.r .cell-code}\n.hscroll {\n  overflow: auto;\n  white-space: nowrap;\n}\n```\n:::\n\n-   add css option in YAML header\n\n::: {.cell}\n\n```{.r .cell-code}\n---\ncss: hscroll.css\n---\n```\n:::\n\n-   add `# {.hscroll .scrollable}` on the section which want to be Slide bar\n\n#  {.hscroll .scrollable}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas dolor mauris, mattis non nunc nec, luctus aliquet magna. In tortor ante, aliquam eget felis eu, consectetur congue enim. Pellentesque pellentesque tincidunt lectus quis lacinia. Aliquam dolor sem, aliquet vitae aliquam eget, vehicula ac augue. Pellentesque molestie quam et commodo dignissim. Suspendisse potenti. Sed pellentesque metus non turpis condimentum molestie. Nullam accumsan urna nec luctus rutrum. Nunc dapibus auctor convallis. Praesent ac felis fermentum, venenatis elit vel, venenatis mi. Fusce non tellus risus. Phasellus elementum erat sit amet urna venenatis maximus. Nunc vehicula pretium scelerisque.\n\n# Add a vertical scroll bar\n\n::: {.scroll-container style=\"overflow-x: scroll; height: 600px;\"}\nimages1.png\n\nimages2.png\n:::\n\n::: {.scroll-container style=\"overflow-x: scroll; height: 600px;\"}\n![](images/12.png){width=\"900\"}\n\n![](images/13.png){width=\"900\"}\n:::\n\n# add a output hide bottom at quarto file\n\n1.  add foldableCodeBlcok.lua into blog root folder\n\n::: {.cell filename='foldableCodeBlcok.lua'}\n\n```{.r .cell-code}\nfunction CodeBlock(elem)\n  if elem.classes and elem.classes:find(\"details\") then\n    local summary = \"Code\"\n    if elem.attributes.summary then\n      summary = elem.attributes.summary\n    end\n    return{\n      pandoc.RawBlock(\n        \"html\", \"<details><summary>\" .. summary .. \"</summary>\"\n      ),\n      elem,\n      pandoc.RawBlock(\"html\", \"</details>\")\n    }\n  end\nend\n```\n:::\n\n2.  add following line in `_quarto.yml`\n\n`filters: - fold_results.lua`\n\n3.  put following on code chunk:\n\n`{r, attr.output='.details summary=\"sessionInfo()\"'}`\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```{.details summary=\"sessionInfo()\"}\nR version 4.4.1 (2024-06-14)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS 15.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] quarto_1.4.4\n\nloaded via a namespace (and not attached):\n [1] digest_0.6.37     later_1.3.2       fastmap_1.2.0     xfun_0.48        \n [5] knitr_1.48        htmltools_0.5.8.1 rmarkdown_2.28    ps_1.8.1         \n [9] cli_3.6.4         processx_3.8.4    compiler_4.4.1    rstudioapi_0.17.1\n[13] tools_4.4.1       evaluate_1.0.1    Rcpp_1.0.13-1     yaml_2.3.10      \n[17] rlang_1.1.5       jsonlite_1.8.9    htmlwidgets_1.6.4\n```\n\n\n:::\n:::\n\n# render all quarto website\n\n::: {.cell filename='Terminal'}\n\n```{.r .cell-code}\nquarto render \"tidymodel in R\"\n```\n:::\n\n# embed video\n\n## embed youtube\n\n::: {.cell}\n\n```{.r .cell-code}\n<iframe width=\"640\" height=\"480\" src=\"https://www.youtube.com/embed/nku5zFMZAdU\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen>\n</iframe>\n```\n:::\n\n## embed local video\n\n::: {.cell}\n\n```{.r .cell-code}\n{{< video images/vv.mp4 height=\"600\" >}}\n```\n:::\n\n# embed audio\n\n::: panel-tabset\n## in code\n\n::: {.cell}\n\n```{.r .cell-code}\n<figure>\n<figcaption>click to play</figcaption>\n<audio controls src=\"aa.mp3\">\n        Your browser does not support the\n        <code>audio</code> element.\n</audio>\n</figure>\n```\n:::\n\n## in YAML header\n\n``` yaml\n---\nformat:\n  html:\n    resources:\n      - aa.mp3\n---\n```\n:::\n\n\n# Managing Execution\n\n## render a folder or file\n\n\n::: {.cell filename='Terminal'}\n\n```{.bach .cell-code}\nquarto render introduction.qmd\nquarto render subdir/\n```\n:::\n\n\nsource:https://quarto.org/docs/projects/code-execution.html\n\n\n# Reference:\n\nhttps://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}