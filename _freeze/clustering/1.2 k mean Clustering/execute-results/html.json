{
  "hash": "27205a6d4bf137cb0b1a83c6a55c0064",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"K mean Clustering with image\"\nsubtitle: \"with image data\"\nexecute:\n  warning: false\n  error: false\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n\nUsing K mean Clustering to replace colow on below picture\n\n\n![](python logo.jpg){width=\"300\"}\n\n# load package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(janitor)\n```\n:::\n\n\n# data\n\n\n## input data\n\nAlpha channel image\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jpeg)\n\nimg <- readJPEG('python logo.jpg')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(img)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 235 214   3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Obtain the dimension\nimgDm <- dim(img)\n\n# Assign RGB channels to data frame\nimgRGB <- data.frame(\n  x = rep(1:imgDm[2], each = imgDm[1]),\n  y = rep(imgDm[1]:1, imgDm[2]),\n  R = as.vector(img[,,1]),\n  G = as.vector(img[,,2]),\n  B = as.vector(img[,,3])\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimgRGB2=imgRGB %>% select(R,G,B)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the image\nggplot(data = imgRGB, aes(x = x, y = y)) + \n  geom_point(colour = rgb(imgRGB[c(\"R\", \"G\", \"B\")])) +\n  labs(title = \"Original Image: Colorful Bird\") +\n  xlab(\"x\") +\n  ylab(\"y\") \n```\n\n::: {.cell-output-display}\n![](1.2-k-mean-Clustering_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n# Optimal number of k-clusters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkclusts <- \n  tibble(k = 1:9) %>%\n  mutate(\n    kclust = map(k, ~kmeans(imgRGB2, .x)),\n    tidied = map(kclust, tidy),\n    glanced = map(kclust, glance),\n    augmented = map(kclust, augment, imgRGB2)\n  )\n\nkclusts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 5\n      k kclust   tidied           glanced          augmented            \n  <int> <list>   <list>           <list>           <list>               \n1     1 <kmeans> <tibble [1 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n2     2 <kmeans> <tibble [2 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n3     3 <kmeans> <tibble [3 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n4     4 <kmeans> <tibble [4 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n5     5 <kmeans> <tibble [5 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n6     6 <kmeans> <tibble [6 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n7     7 <kmeans> <tibble [7 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n8     8 <kmeans> <tibble [8 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n9     9 <kmeans> <tibble [9 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclusters <- \n  kclusts %>%\n  unnest(cols = c(tidied))\n\nassignments <- \n  kclusts %>% \n  unnest(cols = c(augmented))\n\nclusterings <- \n  kclusts %>%\n  unnest(cols = c(glanced))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\nggplot(clusterings, aes(k, tot.withinss)) +\n  geom_line() +\n  geom_point()+scale_x_continuous(breaks= pretty_breaks())\n```\n\n::: {.cell-output-display}\n![](1.2-k-mean-Clustering_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n# group to 3 \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkclust <- kmeans(imgRGB2, centers = 3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult=augment(kclust, imgRGB2) %>% clean_names()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimgRGB3=cbind(imgRGB,result$cluster)%>% clean_names()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimgRGB3 %>% count(result_cluster)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  result_cluster     n\n1              1 13560\n2              2 13631\n3              3 23099\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult2=imgRGB3 %>%mutate(r=if_else(result_cluster==1,1,r) \n                          ,g=if_else(result_cluster==1,1,b) \n                          ,b=if_else(result_cluster==1,1,g) \n                          )%>%mutate(r=if_else(result_cluster==3,0,r) \n                          ,g=if_else(result_cluster==3,0,b) \n                          ,b=if_else(result_cluster==3,0,g)) %>% select(-result_cluster)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the image\nggplot(data = result2, aes(x = x, y = y)) + \n  geom_point(colour = rgb(result2[c(\"r\", \"g\", \"b\")])) +\n  labs(title = \"change color\") +\n  xlab(\"x\") +\n  ylab(\"y\") \n```\n\n::: {.cell-output-display}\n![](1.2-k-mean-Clustering_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n# reference:\n\nhttps://www.r-bloggers.com/2014/09/r-k-means-clustering-on-an-image/#google_vignette",
    "supporting": [
      "1.2-k-mean-Clustering_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}