{
  "hash": "0f0caa810d4970be6514f0c1860b269b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"K mean Clustering with image\"\nsubtitle: \"with image data\"\n\nauthor: \"Tony Duan\"\n\n\nexecute:\n  warning: false\n  error: false\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n\nUsing K mean Clustering to replace colow on below picture\n\n\n# load package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(55)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(janitor)\nlibrary(magick)\n```\n:::\n\n\n# 3 RBG no alpha channel picture:\n\n## input image\n\n::: {.cell}\n\n```{.r .cell-code}\nimage <- image_read('images/python logo.jpg')\n```\n:::\n\n\n\n## convert png to matrix\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_tiff <- image_convert(image, \"tiff\")\nimage_array <- as.integer(image_tiff[[1]])                \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmagick::image_read(image_array/ 255)\n```\n\n::: {.cell-output-display}\n![](1.2-k-mean-Clustering_files/figure-html/unnamed-chunk-4-1.png){width=107}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(image_array)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 235 214   3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(image_array)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"array\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_array_old=image_array\n```\n:::\n\n\n## reshape from 3 D to 2 D\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(image_array) <- c(dim(image_array)[1]*dim(image_array)[2],3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(image_array)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 50290     3\n```\n\n\n:::\n:::\n\n\n## Optimal number of k-clusters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkclusts <- \n  tibble(k = 1:9) %>%\n  mutate(\n    kclust = map(k, ~kmeans(image_array, .x)),\n    tidied = map(kclust, tidy),\n    glanced = map(kclust, glance),\n    augmented = map(kclust, augment, image_array)\n  )\n\nkclusts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 5\n      k kclust   tidied           glanced          augmented            \n  <int> <list>   <list>           <list>           <list>               \n1     1 <kmeans> <tibble [1 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n2     2 <kmeans> <tibble [2 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n3     3 <kmeans> <tibble [3 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n4     4 <kmeans> <tibble [4 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n5     5 <kmeans> <tibble [5 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n6     6 <kmeans> <tibble [6 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n7     7 <kmeans> <tibble [7 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n8     8 <kmeans> <tibble [8 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n9     9 <kmeans> <tibble [9 × 6]> <tibble [1 × 4]> <tibble [50,290 × 4]>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclusters <- \n  kclusts %>%\n  unnest(cols = c(tidied))\n\nassignments <- \n  kclusts %>% \n  unnest(cols = c(augmented))\n\nclusterings <- \n  kclusts %>%\n  unnest(cols = c(glanced))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\nggplot(clusterings, aes(k, tot.withinss)) +\n  geom_line() +\n  geom_point()+scale_x_continuous(breaks= pretty_breaks())+scale_y_continuous(labels = scales::comma)\n```\n\n::: {.cell-output-display}\n![](1.2-k-mean-Clustering_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n## group to 3 \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkclust <- kmeans(image_array, centers = 3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult=augment(kclust, image_array) %>% clean_names()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult %>% count(cluster)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  cluster     n\n  <fct>   <int>\n1 1       13560\n2 2       13631\n3 3       23099\n```\n\n\n:::\n:::\n\n\n## change  2 color\n\n::: {.cell}\n\n```{.r .cell-code}\n# black RGB code 0 0 0\n# red RGB code 255 0 0\n\nresult2=result %>%mutate(x1=if_else(cluster==3,0,x1) \n                          ,x2=if_else(cluster==3,0,x2) \n                          ,x3=if_else(cluster==3,0,x3) \n                          )%>%mutate(x1=if_else(cluster==1,255,x1) \n                          ,x2=if_else(cluster==1,0,x2) \n                          ,x3=if_else(cluster==1,0,x3)) %>% select(-cluster)\n```\n:::\n\n\n## convert 2 D back to 3 D\n\n::: {.cell}\n\n```{.r .cell-code}\nresult2arrary=array(unlist(result2),c(dim(image_array_old)[1],dim(image_array_old)[2],3))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(result2arrary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 235 214   3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmagick::image_read(result2arrary/ 255)\n```\n\n::: {.cell-output-display}\n![](1.2-k-mean-Clustering_files/figure-html/unnamed-chunk-19-1.png){width=107}\n:::\n:::\n\n# 4 RBG with alpha channel picture:\n\n\n\n\n## input image\n\n::: {.cell}\n\n```{.r .cell-code}\nimage <- image_read('images/R_logo.png')\n```\n:::\n\n\n\n## convert png to matrix\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_tiff <- image_convert(image, \"tiff\")\nimage_array <- as.integer(image_tiff[[1]])                \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmagick::image_read(image_array/ 255)\n```\n\n::: {.cell-output-display}\n![](1.2-k-mean-Clustering_files/figure-html/unnamed-chunk-22-1.png){width=362}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(image_array)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 561 724   4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(image_array)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"array\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_array_old=image_array\n```\n:::\n\n\n## reshape from 3 D to 2 D\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(image_array) <- c(dim(image_array)[1]*dim(image_array)[2],4)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(image_array)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 406164      4\n```\n\n\n:::\n:::\n\n\n## Optimal number of k-clusters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkclusts <- \n  tibble(k = 1:9) %>%\n  mutate(\n    kclust = map(k, ~kmeans(image_array, .x)),\n    tidied = map(kclust, tidy),\n    glanced = map(kclust, glance),\n    augmented = map(kclust, augment, image_array)\n  )\n\nkclusts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 5\n      k kclust   tidied           glanced          augmented             \n  <int> <list>   <list>           <list>           <list>                \n1     1 <kmeans> <tibble [1 × 7]> <tibble [1 × 4]> <tibble [406,164 × 5]>\n2     2 <kmeans> <tibble [2 × 7]> <tibble [1 × 4]> <tibble [406,164 × 5]>\n3     3 <kmeans> <tibble [3 × 7]> <tibble [1 × 4]> <tibble [406,164 × 5]>\n4     4 <kmeans> <tibble [4 × 7]> <tibble [1 × 4]> <tibble [406,164 × 5]>\n5     5 <kmeans> <tibble [5 × 7]> <tibble [1 × 4]> <tibble [406,164 × 5]>\n6     6 <kmeans> <tibble [6 × 7]> <tibble [1 × 4]> <tibble [406,164 × 5]>\n7     7 <kmeans> <tibble [7 × 7]> <tibble [1 × 4]> <tibble [406,164 × 5]>\n8     8 <kmeans> <tibble [8 × 7]> <tibble [1 × 4]> <tibble [406,164 × 5]>\n9     9 <kmeans> <tibble [9 × 7]> <tibble [1 × 4]> <tibble [406,164 × 5]>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclusters <- \n  kclusts %>%\n  unnest(cols = c(tidied))\n\nassignments <- \n  kclusts %>% \n  unnest(cols = c(augmented))\n\nclusterings <- \n  kclusts %>%\n  unnest(cols = c(glanced))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(scales)\nggplot(clusterings, aes(k, tot.withinss)) +\n  geom_line() +\n  geom_point()+scale_x_continuous(breaks= pretty_breaks())+scale_y_continuous(labels = scales::comma)\n```\n\n::: {.cell-output-display}\n![](1.2-k-mean-Clustering_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n\n\n## group to 3 \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkclust <- kmeans(image_array, centers = 3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult=augment(kclust, image_array) %>% clean_names()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresult %>% count(cluster)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  cluster      n\n  <fct>    <int>\n1 1       120865\n2 2       169342\n3 3       115957\n```\n\n\n:::\n:::\n\n\n## change  2 color\n\n::: {.cell}\n\n```{.r .cell-code}\n# black RGB code 0 0 0\n# red RGB code 255 0 0\n\nresult2=result %>%mutate(x1=if_else(cluster==3,0,x1) \n                          ,x2=if_else(cluster==3,0,x2) \n                          ,x3=if_else(cluster==3,0,x3) \n                          )%>%mutate(x1=if_else(cluster==1,255,x1) \n                          ,x2=if_else(cluster==1,0,x2) \n                          ,x3=if_else(cluster==1,0,x3)) %>% select(-cluster)\n```\n:::\n\n\n## convert 2 D back to 4 D\n\n::: {.cell}\n\n```{.r .cell-code}\nresult2arrary=array(unlist(result2),c(dim(image_array_old)[1],dim(image_array_old)[2],4))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(result2arrary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 561 724   4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmagick::image_read(result2arrary/ 255)\n```\n\n::: {.cell-output-display}\n![](1.2-k-mean-Clustering_files/figure-html/unnamed-chunk-37-1.png){width=362}\n:::\n:::\n\n\n# reference:\n\nhttps://www.r-bloggers.com/2014/09/r-k-means-clustering-on-an-image/#google_vignette",
    "supporting": [
      "1.2-k-mean-Clustering_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}