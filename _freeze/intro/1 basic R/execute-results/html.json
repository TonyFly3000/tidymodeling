{
  "hash": "978cc4510347a85f7ce9036d069c8ca2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Basic R\"\nauthor: \"Tony Duan\"\n\nexecute:\n  warning: false\n  error: false\nformat:\n  html:\n    toc: true\n    toc-location: right\n    code-fold: show\n    code-tools: true\n    number-sections: true\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n---\n\n\n![](images/R_logo.svg.png){width=\"300\"}\n\n# work with file\n\n## get current directory\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n:::\n\n\n## get all file name under current directory\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlist.files()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1 basic R.qmd\"                 \"1 basic R.rmarkdown\"          \n[3] \"1-basic-R.rmarkdown\"           \"5 R boook.qmd\"                \n[5] \"6 data analytic in R book.qmd\" \"hotels.csv\"                   \n[7] \"images\"                       \n```\n\n\n:::\n:::\n\n\n## get file info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile.info(\"6 data analytic in R book.qmd\")\n```\n:::\n\n\n## create folder\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndir.create('testing_folder')\n```\n:::\n\n\n## delete folder/file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfile.remove('testing_folder')\n```\n:::\n\n\n## copy file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fs)\nfile_copy('test.csv', 'test2.csv')\n```\n:::\n\n\n## download file from internet\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl=\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-02-11/hotels.csv\"\n\ndownload.file(url = url, destfile = \"hotels.csv\")\n```\n:::\n\n\n# Condition with if/elif/else\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- -5\nif(x > 0){\nprint(\"Non-negative number\")\n} else {\nprint(\"Negative number\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Negative number\"\n```\n\n\n:::\n:::\n\n\n# Loop\n\n## for Loop\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (x in 1:4) {\n  print(x)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n```\n\n\n:::\n:::\n\n\n## Error handling on for Loop:print out error\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstuff <- list(12, 9, 2, \"cat\", 25, 10, \"bird\")\n#stuff\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nloop_num=0\n\nfor (i in stuff) {\n  loop_num=loop_num+1\n  tryCatch (print(1+i),\n           \n           error = function(e){\n           message(paste(\"An error occurred for loop num\", loop_num,\":\\n\"), e)\n             \n         })\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 13\n[1] 10\n[1] 3\n[1] 26\n[1] 11\n```\n\n\n:::\n:::\n\n\n\n\n\n## while Loop\n\n\n::: {.cell}\n\n```{.r .cell-code}\ni <- 1\nwhile (i < 6) {\n  print(i)\n  i <- i + 1\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n```\n\n\n:::\n:::\n\n\nwith break statement\n\n\n::: {.cell}\n\n```{.r .cell-code}\ni <- 1\nwhile (i < 6) {\n  print(i)\n  i <- i + 1\n  if (i == 4) {break}\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n[1] 2\n[1] 3\n```\n\n\n:::\n:::\n\n\n# function\n\n## without Arguments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_function <- function() { \n  print(\"Hello World!\")\n}\n\nmy_function()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Hello World!\"\n```\n\n\n:::\n:::\n\n\n## return result\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadding_ten <- function(x) { \n  a=x+10\n  return(a)\n}\n\nadding_ten(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n:::\n\n\n## return result with default\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadding_ten <- function(x=10) { \n  a=x+10\n  return(a)\n}\n\nadding_ten(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n:::\n\n\nif not define x, then x=10\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadding_ten()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 20\n```\n\n\n:::\n:::\n\n\n## check function Arguments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nargs(adding_ten)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfunction (x = 10) \nNULL\n```\n\n\n:::\n:::\n\n\nMany functions exhibit variadic behavior. That is, they can accept any num- ber of arguments, and it’s up to the user to decide how many arguments to provide. The functions c, data.frame, and list are all like this. When you call a function like data.frame, you can specify any number of members as arguments.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nargs(data.frame)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nfunction (..., row.names = NULL, check.rows = FALSE, check.names = TRUE, \n    fix.empty.names = TRUE, stringsAsFactors = FALSE) \nNULL\n```\n\n\n:::\n:::\n\n\n## warning in function\n\nprint out warning\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadding_ten <- function(x=10) { \n  a=x+10\n  if(a>50){\n    warning('its better than 50')\n  }\n  return(a)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadding_ten(100)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 110\n```\n\n\n:::\n:::\n\n\n## stop in function\n\nprint out stop error message\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadding_ten <- function(x=10) { \n  a=x+10\n  if(a>50){\n    stop('its better than 50')\n  }\n  return(a)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadding_ten(100)\n```\n:::\n\n\n## use try to by pass error\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntry(adding_ten(100))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 110\n```\n\n\n:::\n\n```{.r .cell-code}\n5+10\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n:::\n\n\n# program running time\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_time=Sys.time()\n\nv=matrix(1:100000000)\nc=v*v\n\nend_time=Sys.time()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_time\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2024-04-18 15:52:44 CST\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nend_time\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2024-04-18 15:52:45 CST\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nend_time-start_time\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime difference of 0.5823641 secs\n```\n\n\n:::\n:::\n\n\n# Package\n\n## check R version\n\n\n::: {.cell}\n\n```{.r .cell-code}\nversion\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               _                           \nplatform       aarch64-apple-darwin20      \narch           aarch64                     \nos             darwin20                    \nsystem         aarch64, darwin20           \nstatus                                     \nmajor          4                           \nminor          3.1                         \nyear           2023                        \nmonth          06                          \nday            16                          \nsvn rev        84548                       \nlanguage       R                           \nversion.string R version 4.3.1 (2023-06-16)\nnickname       Beagle Scouts               \n```\n\n\n:::\n:::\n\n\n## install R package\n\n### install from Cran\n\n99% of the time will install pacakge from The Comprehensive R Archive Network(cran).<https://cran.r-project.org/>\n\n![](images/1_wcX2tfGe4til0PmjxhKuQA.png){width=\"300\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages('tidyverse')\n```\n:::\n\n\n### install from Github\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_install(\"tidymodels/learntidymodels\")\n```\n:::\n\n\n### install from Bioconductor\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_install(\"text2vec\")\n```\n:::\n\n\n### install from local\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::local_install(\"cli\")\n```\n:::\n\n\n## check one package version\n\n\n::: {.cell}\n\n```{.r .cell-code}\npackageVersion(\"tidyverse\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] '2.0.0'\n```\n\n\n:::\n:::\n\n\n## check pacakge relationship\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_deps_explain(\"tibble\", \"rlang\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble -> lifecycle -> rlang\ntibble -> pillar -> lifecycle -> rlang\ntibble -> pillar -> rlang\ntibble -> pillar -> vctrs -> lifecycle -> rlang\ntibble -> pillar -> vctrs -> rlang\ntibble -> rlang\ntibble -> vctrs -> lifecycle -> rlang\ntibble -> vctrs -> rlang\n```\n\n\n:::\n:::\n\n\n## check pacakge dependencies\n\n\n::: {.cell}\n\n```{.r .cell-code}\npak::pkg_deps_tree(\"tibble\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble 3.2.1 ✨ ⬇ (684.10 kB)\n├─fansi 1.0.6 ✨ ⬇ (381.01 kB)\n├─lifecycle 1.0.4 ✨ ⬇ (124.48 kB)\n│ ├─cli 3.6.2 ✨ ⬇ (1.39 MB)\n│ ├─glue 1.7.0 ✨ ⬇ (159.26 kB)\n│ └─rlang 1.1.3 ✨ ⬇ (1.89 MB)\n├─magrittr 2.0.3 ✨ ⬇ (232.43 kB)\n├─pillar 1.9.0 ✨ ⬇ (648.86 kB)\n│ ├─cli\n│ ├─fansi\n│ ├─glue\n│ ├─lifecycle\n│ ├─rlang\n│ ├─utf8 1.2.4 ✨ ⬇ (206.92 kB)\n│ └─vctrs 0.6.5 ✨ ⬇ (1.88 MB)\n│   ├─cli\n│   ├─glue\n│   ├─lifecycle\n│   └─rlang\n├─pkgconfig 2.0.3 ✨ ⬇ (18.21 kB)\n├─rlang\n└─vctrs\n\nKey:  ✨ new |  ⬇ download\n```\n\n\n:::\n:::\n\n\n## check current loaded package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.3.1 (2023-06-16)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Sonoma 14.1.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] digest_0.6.35     R6_2.5.1          fastmap_1.1.1     xfun_0.43        \n [5] knitr_1.45        htmltools_0.5.8.1 rmarkdown_2.26    ps_1.7.6         \n [9] cli_3.6.2         processx_3.8.4    callr_3.7.6       pak_0.7.2        \n[13] compiler_4.3.1    rstudioapi_0.16.0 tools_4.3.1       evaluate_0.23    \n[17] yaml_2.3.8        rlang_1.1.3       jsonlite_1.8.8    htmlwidgets_1.6.4\n```\n\n\n:::\n:::\n\n\n## check all package version\n\n\n::: {.cell}\n\n```{.r .cell-code}\nip = as.data.frame(installed.packages()[,c(1,3:4)])\nip = ip[is.na(ip$Priority),1:2,drop=FALSE]\nhead(ip)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              Package Version\nabind           abind   1.4-5\nanytime       anytime   0.3.9\napplicable applicable   0.1.0\narchive       archive   1.1.7\narrow           arrow  15.0.1\naskpass       askpass   1.2.0\n```\n\n\n:::\n:::\n\n\n## check package install loaciton\n\n\n::: {.cell}\n\n```{.r .cell-code}\n.libPaths()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\"\n```\n\n\n:::\n:::\n\n\n\n# sleep\n\nThe time interval to suspend execution for, in seconds.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSys.sleep(3)\n```\n:::\n\n\n# open two R session on Mac\n\n\n::: {.cell filename='Terminal'}\n\n```{.r .cell-code}\nopen -n /Applications/RStudio.app\n```\n:::\n\n\n\n# Statistics\n\n\n\n## Centrality: Mean, Median, Mode\n\n## Spread: Variance, Standard Deviation, and the Interquartile Range\n\n## Covariance and Correlation\n\nWhen analyzing data, it’s often useful to be able to investigate the rela- tionship between two numeric variables to assess trends. For example, you might expect height and weight observations to have a noticeable positive relationship—taller people tend to weigh more. Conversely, you might imag- ine that handspan and length of hair would have less of an association. One of the simplest and most common ways such associations are quantified and compared is through the idea of correlation, for which you need the covariance. The covariance expresses how much two numeric variables “change together” and the nature of that relationship,\n\n![](images/clipboard-4055345945.png)\n\n## Correlation,Pearson’s product-moment correlation coefficient\n\nPearson’s sample correlation coef- ficient ρxy is computed by dividing the sample covariance by the product of the standard deviation of each data set\n\n![](images/clipboard-1822919442.png)\n\nSome Correlation Example:\n\n![](images/clipboard-775702636.png)\n\n# Probability \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}